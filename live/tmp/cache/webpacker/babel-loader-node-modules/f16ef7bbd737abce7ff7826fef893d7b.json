{"ast":null,"code":"'use strict'; // Simple FIFO queue implementation to avoid having to do shift()\n// on an array, which is slow.\n\nfunction Queue() {\n  this.length = 0;\n}\n\nQueue.prototype.push = function (item) {\n  var node = {\n    item: item\n  };\n\n  if (this.last) {\n    this.last = this.last.next = node;\n  } else {\n    this.last = this.first = node;\n  }\n\n  this.length++;\n};\n\nQueue.prototype.shift = function () {\n  var node = this.first;\n\n  if (node) {\n    this.first = node.next;\n\n    if (! --this.length) {\n      this.last = undefined;\n    }\n\n    return node.item;\n  }\n};\n\nQueue.prototype.slice = function (start, end) {\n  start = typeof start === 'undefined' ? 0 : start;\n  end = typeof end === 'undefined' ? Infinity : end;\n  var output = [];\n  var i = 0;\n\n  for (var node = this.first; node; node = node.next) {\n    if (--end < 0) {\n      break;\n    } else if (++i > start) {\n      output.push(node.item);\n    }\n  }\n\n  return output;\n};\n\nmodule.exports = Queue;","map":null,"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}