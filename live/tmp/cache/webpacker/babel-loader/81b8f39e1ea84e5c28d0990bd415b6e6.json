{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/list_adder/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListAdder, resetListAdder } from '../../actions/lists';\nimport { createSelector } from 'reselect';\nimport List from './components/list';\nimport Account from './components/account';\nimport NewListForm from '../lists/components/new_list_form'; // hack\n\nvar getOrderedLists = createSelector([function (state) {\n  return state.get('lists');\n}], function (lists) {\n  if (!lists) {\n    return lists;\n  }\n\n  return lists.toList().filter(function (item) {\n    return !!item;\n  }).sort(function (a, b) {\n    return a.get('title').localeCompare(b.get('title'));\n  });\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    listIds: getOrderedLists(state).map(function (list) {\n      return list.get('id');\n    })\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onInitialize: function onInitialize(accountId) {\n      return dispatch(setupListAdder(accountId));\n    },\n    onReset: function onReset() {\n      return dispatch(resetListAdder());\n    }\n  };\n};\n\nvar ListAdder = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ListAdder, _ImmutablePureCompone);\n\n  function ListAdder() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = ListAdder.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        onInitialize = _this$props.onInitialize,\n        accountId = _this$props.accountId;\n    onInitialize(accountId);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var onReset = this.props.onReset;\n    onReset();\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        accountId = _this$props2.accountId,\n        listIds = _this$props2.listIds;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal list-adder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-adder__account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Account, {\n      accountId: accountId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(NewListForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-adder__lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, listIds.map(function (ListId) {\n      return /*#__PURE__*/React.createElement(List, {\n        key: ListId,\n        listId: ListId,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }\n      });\n    })));\n  };\n\n  return ListAdder;\n}(ImmutablePureComponent), _class2.propTypes = {\n  accountId: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired,\n  onInitialize: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  listIds: ImmutablePropTypes.list.isRequired\n}, _temp)) || _class) || _class);\nexport { ListAdder as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/list_adder/index.js"],"names":["React","PropTypes","ImmutablePropTypes","connect","ImmutablePureComponent","injectIntl","setupListAdder","resetListAdder","createSelector","List","Account","NewListForm","getOrderedLists","state","get","lists","toList","filter","item","sort","a","b","localeCompare","mapStateToProps","listIds","map","list","mapDispatchToProps","dispatch","onInitialize","accountId","onReset","ListAdder","componentDidMount","props","componentWillUnmount","render","ListId","propTypes","string","isRequired","onClose","func","intl","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListAdder, resetListAdder } from '../../actions/lists';\nimport { createSelector } from 'reselect';\nimport List from './components/list';\nimport Account from './components/account';\nimport NewListForm from '../lists/components/new_list_form';\n// hack\n\nconst getOrderedLists = createSelector([state => state.get('lists')], lists => {\n  if (!lists) {\n    return lists;\n  }\n\n  return lists.toList().filter(item => !!item).sort((a, b) => a.get('title').localeCompare(b.get('title')));\n});\n\nconst mapStateToProps = state => ({\n  listIds: getOrderedLists(state).map(list=>list.get('id')),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: accountId => dispatch(setupListAdder(accountId)),\n  onReset: () => dispatch(resetListAdder()),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass ListAdder extends ImmutablePureComponent {\n\n  static propTypes = {\n    accountId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    listIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, accountId } = this.props;\n    onInitialize(accountId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountId, listIds } = this.props;\n\n    return (\n      <div className='modal-root__modal list-adder'>\n        <div className='list-adder__account'>\n          <Account accountId={accountId} />\n        </div>\n\n        <NewListForm />\n\n\n        <div className='list-adder__lists'>\n          {listIds.map(ListId => <List key={ListId} listId={ListId} />)}\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}