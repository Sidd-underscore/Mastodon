{"ast":null,"code":"var _excluded = [\"status\", \"account\"];\n\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/status.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from './avatar';\nimport AvatarOverlay from './avatar_overlay';\nimport AvatarComposite from './avatar_composite';\nimport RelativeTimestamp from './relative_timestamp';\nimport DisplayName from './display_name';\nimport StatusContent from './status_content';\nimport StatusActionBar from './status_action_bar';\nimport AttachmentList from './attachment_list';\nimport Card from '../features/status/components/card';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { MediaGallery, Video, Audio } from '../features/ui/util/async-components';\nimport { HotKeys } from 'react-hotkeys';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { displayMedia } from '../initial_state';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder'; // We use the component (and not the container) since we do not want\n// to use the progress bar to show download progress\n\nimport Bundle from '../features/ui/components/bundle';\nexport var textForScreenReader = function textForScreenReader(intl, status, rebloggedByText) {\n  if (rebloggedByText === void 0) {\n    rebloggedByText = false;\n  }\n\n  var displayName = status.getIn(['account', 'display_name']);\n  var values = [displayName.length === 0 ? status.getIn(['account', 'acct']).split('@')[0] : displayName, status.get('spoiler_text') && status.get('hidden') ? status.get('spoiler_text') : status.get('search_index').slice(status.get('spoiler_text').length), intl.formatDate(status.get('created_at'), {\n    hour: '2-digit',\n    minute: '2-digit',\n    month: 'short',\n    day: 'numeric'\n  }), status.getIn(['account', 'acct'])];\n\n  if (rebloggedByText) {\n    values.push(rebloggedByText);\n  }\n\n  return values.join(', ');\n};\nexport var defaultMediaVisibility = function defaultMediaVisibility(status) {\n  if (!status) {\n    return undefined;\n  }\n\n  if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n    status = status.get('reblog');\n  }\n\n  return displayMedia !== 'hide_all' && !status.get('sensitive') || displayMedia === 'show_all';\n};\nvar messages = defineMessages({\n  public_short: {\n    \"id\": \"privacy.public.short\",\n    \"defaultMessage\": \"Public\"\n  },\n  unlisted_short: {\n    \"id\": \"privacy.unlisted.short\",\n    \"defaultMessage\": \"Unlisted\"\n  },\n  private_short: {\n    \"id\": \"privacy.private.short\",\n    \"defaultMessage\": \"Followers-only\"\n  },\n  direct_short: {\n    \"id\": \"privacy.direct.short\",\n    \"defaultMessage\": \"Direct\"\n  }\n});\n\nvar Status = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Status, _ImmutablePureCompone);\n\n  function Status() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.updateOnProps = ['status', 'account', 'muted', 'hidden', 'unread', 'pictureInPicture'];\n    _this.state = {\n      showMedia: defaultMediaVisibility(_this.props.status),\n      statusId: undefined\n    };\n\n    _this.handleToggleMediaVisibility = function () {\n      _this.setState({\n        showMedia: !_this.state.showMedia\n      });\n    };\n\n    _this.handleClick = function () {\n      if (_this.props.onClick) {\n        _this.props.onClick();\n\n        return;\n      }\n\n      if (!_this.context.router) {\n        return;\n      }\n\n      var status = _this.props.status;\n\n      _this.context.router.history.push(\"/statuses/\" + status.getIn(['reblog', 'id'], status.get('id')));\n    };\n\n    _this.handleExpandClick = function (e) {\n      if (_this.props.onClick) {\n        _this.props.onClick();\n\n        return;\n      }\n\n      if (e.button === 0) {\n        if (!_this.context.router) {\n          return;\n        }\n\n        var status = _this.props.status;\n\n        _this.context.router.history.push(\"/statuses/\" + status.getIn(['reblog', 'id'], status.get('id')));\n      }\n    };\n\n    _this.handleAccountClick = function (e) {\n      if (_this.context.router && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n        var id = e.currentTarget.getAttribute('data-id');\n        e.preventDefault();\n\n        _this.context.router.history.push(\"/accounts/\" + id);\n      }\n    };\n\n    _this.handleExpandedToggle = function () {\n      _this.props.onToggleHidden(_this._properStatus());\n    };\n\n    _this.handleCollapsedToggle = function (isCollapsed) {\n      _this.props.onToggleCollapsed(_this._properStatus(), isCollapsed);\n    };\n\n    _this.handleOpenVideo = function (options) {\n      var status = _this._properStatus();\n\n      _this.props.onOpenVideo(status.get('id'), status.getIn(['media_attachments', 0]), options);\n    };\n\n    _this.handleOpenMedia = function (media, index) {\n      _this.props.onOpenMedia(_this._properStatus().get('id'), media, index);\n    };\n\n    _this.handleHotkeyOpenMedia = function (e) {\n      var _this$props = _this.props,\n          onOpenMedia = _this$props.onOpenMedia,\n          onOpenVideo = _this$props.onOpenVideo;\n\n      var status = _this._properStatus();\n\n      e.preventDefault();\n\n      if (status.get('media_attachments').size > 0) {\n        if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n          onOpenVideo(status.get('id'), status.getIn(['media_attachments', 0]), {\n            startTime: 0\n          });\n        } else {\n          onOpenMedia(status.get('id'), status.get('media_attachments'), 0);\n        }\n      }\n    };\n\n    _this.handleDeployPictureInPicture = function (type, mediaProps) {\n      var deployPictureInPicture = _this.props.deployPictureInPicture;\n\n      var status = _this._properStatus();\n\n      deployPictureInPicture(status, type, mediaProps);\n    };\n\n    _this.handleHotkeyReply = function (e) {\n      e.preventDefault();\n\n      _this.props.onReply(_this._properStatus(), _this.context.router.history);\n    };\n\n    _this.handleHotkeyFavourite = function () {\n      _this.props.onFavourite(_this._properStatus());\n    };\n\n    _this.handleHotkeyBoost = function (e) {\n      _this.props.onReblog(_this._properStatus(), e);\n    };\n\n    _this.handleHotkeyMention = function (e) {\n      e.preventDefault();\n\n      _this.props.onMention(_this._properStatus().get('account'), _this.context.router.history);\n    };\n\n    _this.handleHotkeyOpen = function () {\n      _this.context.router.history.push(\"/statuses/\" + _this._properStatus().get('id'));\n    };\n\n    _this.handleHotkeyOpenProfile = function () {\n      _this.context.router.history.push(\"/accounts/\" + _this._properStatus().getIn(['account', 'id']));\n    };\n\n    _this.handleHotkeyMoveUp = function (e) {\n      _this.props.onMoveUp(_this.props.status.get('id'), e.target.getAttribute('data-featured'));\n    };\n\n    _this.handleHotkeyMoveDown = function (e) {\n      _this.props.onMoveDown(_this.props.status.get('id'), e.target.getAttribute('data-featured'));\n    };\n\n    _this.handleHotkeyToggleHidden = function () {\n      _this.props.onToggleHidden(_this._properStatus());\n    };\n\n    _this.handleHotkeyToggleSensitive = function () {\n      _this.handleToggleMediaVisibility();\n    };\n\n    _this.handleRef = function (c) {\n      _this.node = c;\n    };\n\n    return _this;\n  }\n\n  Status.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.status && nextProps.status.get('id') !== prevState.statusId) {\n      return {\n        showMedia: defaultMediaVisibility(nextProps.status),\n        statusId: nextProps.status.get('id')\n      };\n    } else {\n      return null;\n    }\n  };\n\n  var _proto = Status.prototype;\n\n  _proto.renderLoadingMediaGallery = function renderLoadingMediaGallery() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-gallery\",\n      style: {\n        height: '110px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 12\n      }\n    });\n  };\n\n  _proto.renderLoadingVideoPlayer = function renderLoadingVideoPlayer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video-player\",\n      style: {\n        height: '110px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 12\n      }\n    });\n  };\n\n  _proto.renderLoadingAudioPlayer = function renderLoadingAudioPlayer() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-player\",\n      style: {\n        height: '110px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 12\n      }\n    });\n  };\n\n  _proto._properStatus = function _properStatus() {\n    var status = this.props.status;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var media = null;\n    var statusAvatar, prepend, rebloggedByText;\n    var _this$props2 = this.props,\n        intl = _this$props2.intl,\n        hidden = _this$props2.hidden,\n        featured = _this$props2.featured,\n        otherAccounts = _this$props2.otherAccounts,\n        unread = _this$props2.unread,\n        showThread = _this$props2.showThread,\n        scrollKey = _this$props2.scrollKey,\n        pictureInPicture = _this$props2.pictureInPicture;\n\n    var _this$props3 = this.props,\n        status = _this$props3.status,\n        account = _this$props3.account,\n        other = _objectWithoutPropertiesLoose(_this$props3, _excluded);\n\n    if (status === null) {\n      return null;\n    }\n\n    var handlers = this.props.muted ? {} : {\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      open: this.handleHotkeyOpen,\n      openProfile: this.handleHotkeyOpenProfile,\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia\n    };\n\n    if (hidden) {\n      return /*#__PURE__*/React.createElement(HotKeys, {\n        handlers: handlers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.handleRef,\n        className: classNames('status__wrapper', {\n          focusable: !this.props.muted\n        }),\n        tabIndex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, status.getIn(['account', 'display_name']) || status.getIn(['account', 'username'])), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }\n      }, status.get('content'))));\n    }\n\n    if (status.get('filtered') || status.getIn(['reblog', 'filtered'])) {\n      var minHandlers = this.props.muted ? {} : {\n        moveUp: this.handleHotkeyMoveUp,\n        moveDown: this.handleHotkeyMoveDown\n      };\n      return /*#__PURE__*/React.createElement(HotKeys, {\n        handlers: minHandlers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status__wrapper status__wrapper--filtered focusable\",\n        tabIndex: \"0\",\n        ref: this.handleRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.filtered\",\n        defaultMessage: \"Filtered\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    if (featured) {\n      prepend = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status__prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status__prepend-icon-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"thumb-tack\",\n        className: \"status__prepend-icon\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.pinned\",\n        defaultMessage: \"Pinned toot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }\n      }));\n    } else if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      var display_name_html = {\n        __html: status.getIn(['account', 'display_name_html'])\n      };\n      prepend = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status__prepend\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status__prepend-icon-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"retweet\",\n        className: \"status__prepend-icon\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 57\n        }\n      })), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.reblogged_by\",\n        defaultMessage: \"{name} boosted\",\n        values: {\n          name: /*#__PURE__*/React.createElement(\"a\", {\n            onClick: this.handleAccountClick,\n            \"data-id\": status.getIn(['account', 'id']),\n            href: status.getIn(['account', 'url']),\n            className: \"status__display-name muted\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 102\n            }\n          }, /*#__PURE__*/React.createElement(\"bdi\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 260\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            dangerouslySetInnerHTML: display_name_html,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 265\n            }\n          })))\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }\n      }));\n      rebloggedByText = intl.formatMessage({\n        id: 'status.reblogged_by',\n        defaultMessage: '{name} boosted'\n      }, {\n        name: status.getIn(['account', 'acct'])\n      });\n      account = status.get('account');\n      status = status.get('reblog');\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media = /*#__PURE__*/React.createElement(PictureInPicturePlaceholder, {\n        width: this.props.cachedMediaWidth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }\n      });\n    } else if (status.get('media_attachments').size > 0) {\n      if (this.props.muted) {\n        media = /*#__PURE__*/React.createElement(AttachmentList, {\n          compact: true,\n          media: status.get('media_attachments'),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 11\n          }\n        });\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        var attachment = status.getIn(['media_attachments', 0]);\n        media = /*#__PURE__*/React.createElement(Bundle, {\n          fetchComponent: Audio,\n          loading: this.renderLoadingAudioPlayer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 11\n          }\n        }, function (Component) {\n          return /*#__PURE__*/React.createElement(Component, {\n            src: attachment.get('url'),\n            alt: attachment.get('description'),\n            poster: attachment.get('preview_url') || status.getIn(['account', 'avatar_static']),\n            backgroundColor: attachment.getIn(['meta', 'colors', 'background']),\n            foregroundColor: attachment.getIn(['meta', 'colors', 'foreground']),\n            accentColor: attachment.getIn(['meta', 'colors', 'accent']),\n            duration: attachment.getIn(['meta', 'original', 'duration'], 0),\n            width: _this2.props.cachedMediaWidth,\n            height: 110,\n            cacheWidth: _this2.props.cacheMediaWidth,\n            deployPictureInPicture: pictureInPicture.get('available') ? _this2.handleDeployPictureInPicture : undefined,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }\n          });\n        });\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        var _attachment = status.getIn(['media_attachments', 0]);\n\n        media = /*#__PURE__*/React.createElement(Bundle, {\n          fetchComponent: Video,\n          loading: this.renderLoadingVideoPlayer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 11\n          }\n        }, function (Component) {\n          return /*#__PURE__*/React.createElement(Component, {\n            preview: _attachment.get('preview_url'),\n            frameRate: _attachment.getIn(['meta', 'original', 'frame_rate']),\n            blurhash: _attachment.get('blurhash'),\n            src: _attachment.get('url'),\n            alt: _attachment.get('description'),\n            width: _this2.props.cachedMediaWidth,\n            height: 110,\n            inline: true,\n            sensitive: status.get('sensitive'),\n            onOpenVideo: _this2.handleOpenVideo,\n            cacheWidth: _this2.props.cacheMediaWidth,\n            deployPictureInPicture: pictureInPicture.get('available') ? _this2.handleDeployPictureInPicture : undefined,\n            visible: _this2.state.showMedia,\n            onToggleVisibility: _this2.handleToggleMediaVisibility,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }\n          });\n        });\n      } else {\n        media = /*#__PURE__*/React.createElement(Bundle, {\n          fetchComponent: MediaGallery,\n          loading: this.renderLoadingMediaGallery,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 11\n          }\n        }, function (Component) {\n          return /*#__PURE__*/React.createElement(Component, {\n            media: status.get('media_attachments'),\n            sensitive: status.get('sensitive'),\n            height: 110,\n            onOpenMedia: _this2.handleOpenMedia,\n            cacheWidth: _this2.props.cacheMediaWidth,\n            defaultWidth: _this2.props.cachedMediaWidth,\n            visible: _this2.state.showMedia,\n            onToggleVisibility: _this2.handleToggleMediaVisibility,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 418,\n              columnNumber: 15\n            }\n          });\n        });\n      }\n    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n      media = /*#__PURE__*/React.createElement(Card, {\n        onOpenMedia: this.handleOpenMedia,\n        card: status.get('card'),\n        compact: true,\n        cacheWidth: this.props.cacheMediaWidth,\n        defaultWidth: this.props.cachedMediaWidth,\n        sensitive: status.get('sensitive'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (otherAccounts && otherAccounts.size > 0) {\n      statusAvatar = /*#__PURE__*/React.createElement(AvatarComposite, {\n        accounts: otherAccounts,\n        size: 48,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 22\n        }\n      });\n    } else if (account === undefined || account === null) {\n      statusAvatar = /*#__PURE__*/React.createElement(Avatar, {\n        account: status.get('account'),\n        size: 48,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 22\n        }\n      });\n    } else {\n      statusAvatar = /*#__PURE__*/React.createElement(AvatarOverlay, {\n        account: status.get('account'),\n        friend: account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 22\n        }\n      });\n    }\n\n    var visibilityIconInfo = {\n      'public': {\n        icon: 'globe',\n        text: intl.formatMessage(messages.public_short)\n      },\n      'unlisted': {\n        icon: 'unlock',\n        text: intl.formatMessage(messages.unlisted_short)\n      },\n      'private': {\n        icon: 'lock',\n        text: intl.formatMessage(messages.private_short)\n      },\n      'direct': {\n        icon: 'envelope',\n        text: intl.formatMessage(messages.direct_short)\n      }\n    };\n    var visibilityIcon = visibilityIconInfo[status.get('visibility')];\n    return /*#__PURE__*/React.createElement(HotKeys, {\n      handlers: handlers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('status__wrapper', \"status__wrapper-\" + status.get('visibility'), {\n        'status__wrapper-reply': !!status.get('in_reply_to_id'),\n        unread,\n        focusable: !this.props.muted\n      }),\n      tabIndex: this.props.muted ? null : 0,\n      \"data-featured\": featured ? 'true' : null,\n      \"aria-label\": textForScreenReader(intl, status, rebloggedByText),\n      ref: this.handleRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }\n    }, prepend, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('status', \"status-\" + status.get('visibility'), {\n        'status-reply': !!status.get('in_reply_to_id'),\n        muted: this.props.muted\n      }),\n      \"data-id\": status.get('id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__expand\",\n      onClick: this.handleExpandClick,\n      role: \"presentation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: status.get('url'),\n      className: \"status__relative-time\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status__visibility-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: visibilityIcon.icon,\n      title: visibilityIcon.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(RelativeTimestamp, {\n      timestamp: status.get('created_at'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: this.handleAccountClick,\n      \"data-id\": status.getIn(['account', 'id']),\n      href: status.getIn(['account', 'url']),\n      title: status.getIn(['account', 'acct']),\n      className: \"status__display-name\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }\n    }, statusAvatar), /*#__PURE__*/React.createElement(DisplayName, {\n      account: status.get('account'),\n      others: otherAccounts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(StatusContent, {\n      status: status,\n      onClick: this.handleClick,\n      expanded: !status.get('hidden'),\n      showThread: showThread,\n      onExpandedToggle: this.handleExpandedToggle,\n      collapsable: true,\n      onCollapsedToggle: this.handleCollapsedToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 13\n      }\n    }), media, /*#__PURE__*/React.createElement(StatusActionBar, _extends({\n      scrollKey: scrollKey,\n      status: status,\n      account: account\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 13\n      }\n    })))));\n  };\n\n  return Status;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  status: ImmutablePropTypes.map,\n  account: ImmutablePropTypes.map,\n  otherAccounts: ImmutablePropTypes.list,\n  onClick: PropTypes.func,\n  onReply: PropTypes.func,\n  onFavourite: PropTypes.func,\n  onReblog: PropTypes.func,\n  onDelete: PropTypes.func,\n  onDirect: PropTypes.func,\n  onMention: PropTypes.func,\n  onPin: PropTypes.func,\n  onOpenMedia: PropTypes.func,\n  onOpenVideo: PropTypes.func,\n  onBlock: PropTypes.func,\n  onEmbed: PropTypes.func,\n  onHeightChange: PropTypes.func,\n  onToggleHidden: PropTypes.func,\n  onToggleCollapsed: PropTypes.func,\n  muted: PropTypes.bool,\n  hidden: PropTypes.bool,\n  unread: PropTypes.bool,\n  onMoveUp: PropTypes.func,\n  onMoveDown: PropTypes.func,\n  showThread: PropTypes.bool,\n  getScrollPosition: PropTypes.func,\n  updateScrollBottom: PropTypes.func,\n  cacheMediaWidth: PropTypes.func,\n  cachedMediaWidth: PropTypes.number,\n  scrollKey: PropTypes.string,\n  deployPictureInPicture: PropTypes.func,\n  pictureInPicture: ImmutablePropTypes.contains({\n    inUse: PropTypes.bool,\n    available: PropTypes.bool\n  })\n}, _temp)) || _class;\n\nexport { Status as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/status.js"],"names":["React","ImmutablePropTypes","PropTypes","Avatar","AvatarOverlay","AvatarComposite","RelativeTimestamp","DisplayName","StatusContent","StatusActionBar","AttachmentList","Card","injectIntl","defineMessages","FormattedMessage","ImmutablePureComponent","MediaGallery","Video","Audio","HotKeys","classNames","Icon","displayMedia","PictureInPicturePlaceholder","Bundle","textForScreenReader","intl","status","rebloggedByText","displayName","getIn","values","length","split","get","slice","formatDate","hour","minute","month","day","push","join","defaultMediaVisibility","undefined","messages","public_short","unlisted_short","private_short","direct_short","Status","updateOnProps","state","showMedia","props","statusId","handleToggleMediaVisibility","setState","handleClick","onClick","context","router","history","handleExpandClick","e","button","handleAccountClick","ctrlKey","metaKey","id","currentTarget","getAttribute","preventDefault","handleExpandedToggle","onToggleHidden","_properStatus","handleCollapsedToggle","isCollapsed","onToggleCollapsed","handleOpenVideo","options","onOpenVideo","handleOpenMedia","media","index","onOpenMedia","handleHotkeyOpenMedia","size","startTime","handleDeployPictureInPicture","type","mediaProps","deployPictureInPicture","handleHotkeyReply","onReply","handleHotkeyFavourite","onFavourite","handleHotkeyBoost","onReblog","handleHotkeyMention","onMention","handleHotkeyOpen","handleHotkeyOpenProfile","handleHotkeyMoveUp","onMoveUp","target","handleHotkeyMoveDown","onMoveDown","handleHotkeyToggleHidden","handleHotkeyToggleSensitive","handleRef","c","node","getDerivedStateFromProps","nextProps","prevState","renderLoadingMediaGallery","height","renderLoadingVideoPlayer","renderLoadingAudioPlayer","render","statusAvatar","prepend","hidden","featured","otherAccounts","unread","showThread","scrollKey","pictureInPicture","account","other","handlers","muted","reply","favourite","boost","mention","open","openProfile","moveUp","moveDown","toggleHidden","toggleSensitive","openMedia","focusable","minHandlers","display_name_html","__html","name","formatMessage","defaultMessage","cachedMediaWidth","attachment","Component","cacheMediaWidth","visibilityIconInfo","icon","text","visibilityIcon","contextTypes","object","propTypes","map","list","func","onDelete","onDirect","onPin","onBlock","onEmbed","onHeightChange","bool","getScrollPosition","updateScrollBottom","number","string","contains","inUse","available"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,gBAArC,QAA6D,YAA7D;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,SAASC,YAAT,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,sCAA3C;AACA,SAASC,OAAT,QAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,2BAAP,MAAwC,oDAAxC,C,CAEA;AACA;;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,IAAD,EAAOC,MAAP,EAAeC,eAAf,EAA2C;AAAA,MAA5BA,eAA4B;AAA5BA,IAAAA,eAA4B,GAAV,KAAU;AAAA;;AAC5E,MAAMC,WAAW,GAAGF,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,cAAZ,CAAb,CAApB;AAEA,MAAMC,MAAM,GAAG,CACbF,WAAW,CAACG,MAAZ,KAAuB,CAAvB,GAA2BL,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,MAAZ,CAAb,EAAkCG,KAAlC,CAAwC,GAAxC,EAA6C,CAA7C,CAA3B,GAA6EJ,WADhE,EAEbF,MAAM,CAACO,GAAP,CAAW,cAAX,KAA8BP,MAAM,CAACO,GAAP,CAAW,QAAX,CAA9B,GAAqDP,MAAM,CAACO,GAAP,CAAW,cAAX,CAArD,GAAkFP,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BC,KAA3B,CAAiCR,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BF,MAA5D,CAFrE,EAGbN,IAAI,CAACU,UAAL,CAAgBT,MAAM,CAACO,GAAP,CAAW,YAAX,CAAhB,EAA0C;AAAEG,IAAAA,IAAI,EAAE,SAAR;AAAmBC,IAAAA,MAAM,EAAE,SAA3B;AAAsCC,IAAAA,KAAK,EAAE,OAA7C;AAAsDC,IAAAA,GAAG,EAAE;AAA3D,GAA1C,CAHa,EAIbb,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,MAAZ,CAAb,CAJa,CAAf;;AAOA,MAAIF,eAAJ,EAAqB;AACnBG,IAAAA,MAAM,CAACU,IAAP,CAAYb,eAAZ;AACD;;AAED,SAAOG,MAAM,CAACW,IAAP,CAAY,IAAZ,CAAP;AACD,CAfM;AAiBP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAChB,MAAD,EAAY;AAChD,MAAI,CAACA,MAAL,EAAa;AACX,WAAOiB,SAAP;AACD;;AAED,MAAIjB,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqB,IAArB,MAA+B,IAA/B,IAAuC,OAAOP,MAAM,CAACO,GAAP,CAAW,QAAX,CAAP,KAAgC,QAA3E,EAAqF;AACnFP,IAAAA,MAAM,GAAGA,MAAM,CAACO,GAAP,CAAW,QAAX,CAAT;AACD;;AAED,SAAQZ,YAAY,KAAK,UAAjB,IAA+B,CAACK,MAAM,CAACO,GAAP,CAAW,WAAX,CAAhC,IAA2DZ,YAAY,KAAK,UAApF;AACD,CAVM;AAYP,IAAMuB,QAAQ,GAAGhC,cAAc,CAAC;AAC9BiC,EAAAA,YAAY;AAAA;AAAA;AAAA,GADkB;AAE9BC,EAAAA,cAAc;AAAA;AAAA;AAAA,GAFgB;AAG9BC,EAAAA,aAAa;AAAA;AAAA;AAAA,GAHiB;AAI9BC,EAAAA,YAAY;AAAA;AAAA;AAAA;AAJkB,CAAD,CAA/B;;IAQMC,M,GADUtC,U;;;;;;;;;;;UA8CduC,a,GAAgB,CACd,QADc,EAEd,SAFc,EAGd,OAHc,EAId,QAJc,EAKd,QALc,EAMd,kBANc,C;UAShBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAEV,sBAAsB,CAAC,MAAKW,KAAL,CAAW3B,MAAZ,CAD3B;AAEN4B,MAAAA,QAAQ,EAAEX;AAFJ,K;;UAgBRY,2B,GAA8B,YAAM;AAClC,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE,CAAC,MAAKD,KAAL,CAAWC;AAAzB,OAAd;AACD,K;;UAEDK,W,GAAc,YAAM;AAClB,UAAI,MAAKJ,KAAL,CAAWK,OAAf,EAAwB;AACtB,cAAKL,KAAL,CAAWK,OAAX;;AACA;AACD;;AAED,UAAI,CAAC,MAAKC,OAAL,CAAaC,MAAlB,EAA0B;AACxB;AACD;;AAED,UAAQlC,MAAR,GAAmB,MAAK2B,KAAxB,CAAQ3B,MAAR;;AACA,YAAKiC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BrB,IAA5B,gBAA8Cd,MAAM,CAACG,KAAP,CAAa,CAAC,QAAD,EAAW,IAAX,CAAb,EAA+BH,MAAM,CAACO,GAAP,CAAW,IAAX,CAA/B,CAA9C;AACD,K;;UAED6B,iB,GAAoB,UAACC,CAAD,EAAO;AACzB,UAAI,MAAKV,KAAL,CAAWK,OAAf,EAAwB;AACtB,cAAKL,KAAL,CAAWK,OAAX;;AACA;AACD;;AAED,UAAIK,CAAC,CAACC,MAAF,KAAa,CAAjB,EAAoB;AAClB,YAAI,CAAC,MAAKL,OAAL,CAAaC,MAAlB,EAA0B;AACxB;AACD;;AAED,YAAQlC,MAAR,GAAmB,MAAK2B,KAAxB,CAAQ3B,MAAR;;AACA,cAAKiC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BrB,IAA5B,gBAA8Cd,MAAM,CAACG,KAAP,CAAa,CAAC,QAAD,EAAW,IAAX,CAAb,EAA+BH,MAAM,CAACO,GAAP,CAAW,IAAX,CAA/B,CAA9C;AACD;AACF,K;;UAEDgC,kB,GAAqB,UAACF,CAAD,EAAO;AAC1B,UAAI,MAAKJ,OAAL,CAAaC,MAAb,IAAuBG,CAAC,CAACC,MAAF,KAAa,CAApC,IAAyC,EAAED,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACI,OAAjB,CAA7C,EAAwE;AACtE,YAAMC,EAAE,GAAGL,CAAC,CAACM,aAAF,CAAgBC,YAAhB,CAA6B,SAA7B,CAAX;AACAP,QAAAA,CAAC,CAACQ,cAAF;;AACA,cAAKZ,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BrB,IAA5B,gBAA8C4B,EAA9C;AACD;AACF,K;;UAEDI,oB,GAAuB,YAAM;AAC3B,YAAKnB,KAAL,CAAWoB,cAAX,CAA0B,MAAKC,aAAL,EAA1B;AACD,K;;UAEDC,qB,GAAwB,UAAAC,WAAW,EAAI;AACrC,YAAKvB,KAAL,CAAWwB,iBAAX,CAA6B,MAAKH,aAAL,EAA7B,EAAmDE,WAAnD;AACD,K;;UAcDE,e,GAAkB,UAACC,OAAD,EAAa;AAC7B,UAAMrD,MAAM,GAAG,MAAKgD,aAAL,EAAf;;AACA,YAAKrB,KAAL,CAAW2B,WAAX,CAAuBtD,MAAM,CAACO,GAAP,CAAW,IAAX,CAAvB,EAAyCP,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,CAAb,CAAzC,EAAiFkD,OAAjF;AACD,K;;UAEDE,e,GAAkB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAClC,YAAK9B,KAAL,CAAW+B,WAAX,CAAuB,MAAKV,aAAL,GAAqBzC,GAArB,CAAyB,IAAzB,CAAvB,EAAuDiD,KAAvD,EAA8DC,KAA9D;AACD,K;;UAEDE,qB,GAAwB,UAAAtB,CAAC,EAAI;AAC3B,wBAAqC,MAAKV,KAA1C;AAAA,UAAQ+B,WAAR,eAAQA,WAAR;AAAA,UAAqBJ,WAArB,eAAqBA,WAArB;;AACA,UAAMtD,MAAM,GAAG,MAAKgD,aAAL,EAAf;;AAEAX,MAAAA,CAAC,CAACQ,cAAF;;AAEA,UAAI7C,MAAM,CAACO,GAAP,CAAW,mBAAX,EAAgCqD,IAAhC,GAAuC,CAA3C,EAA8C;AAC5C,YAAI5D,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,MAAzB,CAAb,MAAmD,OAAvD,EAAgE;AAC9DmD,UAAAA,WAAW,CAACtD,MAAM,CAACO,GAAP,CAAW,IAAX,CAAD,EAAmBP,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,CAAb,CAAnB,EAA2D;AAAE0D,YAAAA,SAAS,EAAE;AAAb,WAA3D,CAAX;AACD,SAFD,MAEO;AACLH,UAAAA,WAAW,CAAC1D,MAAM,CAACO,GAAP,CAAW,IAAX,CAAD,EAAmBP,MAAM,CAACO,GAAP,CAAW,mBAAX,CAAnB,EAAoD,CAApD,CAAX;AACD;AACF;AACF,K;;UAEDuD,4B,GAA+B,UAACC,IAAD,EAAOC,UAAP,EAAsB;AACnD,UAAQC,sBAAR,GAAmC,MAAKtC,KAAxC,CAAQsC,sBAAR;;AACA,UAAMjE,MAAM,GAAG,MAAKgD,aAAL,EAAf;;AAEAiB,MAAAA,sBAAsB,CAACjE,MAAD,EAAS+D,IAAT,EAAeC,UAAf,CAAtB;AACD,K;;UAEDE,iB,GAAoB,UAAA7B,CAAC,EAAI;AACvBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,YAAKlB,KAAL,CAAWwC,OAAX,CAAmB,MAAKnB,aAAL,EAAnB,EAAyC,MAAKf,OAAL,CAAaC,MAAb,CAAoBC,OAA7D;AACD,K;;UAEDiC,qB,GAAwB,YAAM;AAC5B,YAAKzC,KAAL,CAAW0C,WAAX,CAAuB,MAAKrB,aAAL,EAAvB;AACD,K;;UAEDsB,iB,GAAoB,UAAAjC,CAAC,EAAI;AACvB,YAAKV,KAAL,CAAW4C,QAAX,CAAoB,MAAKvB,aAAL,EAApB,EAA0CX,CAA1C;AACD,K;;UAEDmC,mB,GAAsB,UAAAnC,CAAC,EAAI;AACzBA,MAAAA,CAAC,CAACQ,cAAF;;AACA,YAAKlB,KAAL,CAAW8C,SAAX,CAAqB,MAAKzB,aAAL,GAAqBzC,GAArB,CAAyB,SAAzB,CAArB,EAA0D,MAAK0B,OAAL,CAAaC,MAAb,CAAoBC,OAA9E;AACD,K;;UAEDuC,gB,GAAmB,YAAM;AACvB,YAAKzC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BrB,IAA5B,gBAA8C,MAAKkC,aAAL,GAAqBzC,GAArB,CAAyB,IAAzB,CAA9C;AACD,K;;UAEDoE,uB,GAA0B,YAAM;AAC9B,YAAK1C,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BrB,IAA5B,gBAA8C,MAAKkC,aAAL,GAAqB7C,KAArB,CAA2B,CAAC,SAAD,EAAY,IAAZ,CAA3B,CAA9C;AACD,K;;UAEDyE,kB,GAAqB,UAAAvC,CAAC,EAAI;AACxB,YAAKV,KAAL,CAAWkD,QAAX,CAAoB,MAAKlD,KAAL,CAAW3B,MAAX,CAAkBO,GAAlB,CAAsB,IAAtB,CAApB,EAAiD8B,CAAC,CAACyC,MAAF,CAASlC,YAAT,CAAsB,eAAtB,CAAjD;AACD,K;;UAEDmC,oB,GAAuB,UAAA1C,CAAC,EAAI;AAC1B,YAAKV,KAAL,CAAWqD,UAAX,CAAsB,MAAKrD,KAAL,CAAW3B,MAAX,CAAkBO,GAAlB,CAAsB,IAAtB,CAAtB,EAAmD8B,CAAC,CAACyC,MAAF,CAASlC,YAAT,CAAsB,eAAtB,CAAnD;AACD,K;;UAEDqC,wB,GAA2B,YAAM;AAC/B,YAAKtD,KAAL,CAAWoB,cAAX,CAA0B,MAAKC,aAAL,EAA1B;AACD,K;;UAEDkC,2B,GAA8B,YAAM;AAClC,YAAKrD,2BAAL;AACD,K;;UAYDsD,S,GAAY,UAAAC,CAAC,EAAI;AACf,YAAKC,IAAL,GAAYD,CAAZ;AACD,K;;;;;SA9JME,wB,GAAP,kCAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,QAAID,SAAS,CAACvF,MAAV,IAAoBuF,SAAS,CAACvF,MAAV,CAAiBO,GAAjB,CAAqB,IAArB,MAA+BiF,SAAS,CAAC5D,QAAjE,EAA2E;AACzE,aAAO;AACLF,QAAAA,SAAS,EAAEV,sBAAsB,CAACuE,SAAS,CAACvF,MAAX,CAD5B;AAEL4B,QAAAA,QAAQ,EAAE2D,SAAS,CAACvF,MAAV,CAAiBO,GAAjB,CAAqB,IAArB;AAFL,OAAP;AAID,KALD,MAKO;AACL,aAAO,IAAP;AACD;AACF,G;;;;SAoDDkF,yB,GAAA,qCAA6B;AAC3B,wBAAO;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,G;;SAEDC,wB,GAAA,oCAA4B;AAC1B,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAED,QAAAA,MAAM,EAAE;AAAV,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,G;;SAEDE,wB,GAAA,oCAA4B;AAC1B,wBAAO;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,KAAK,EAAE;AAAEF,QAAAA,MAAM,EAAE;AAAV,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,G;;SA2ED1C,a,GAAA,yBAAiB;AACf,QAAQhD,MAAR,GAAmB,KAAK2B,KAAxB,CAAQ3B,MAAR;;AAEA,QAAIA,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqB,IAArB,MAA+B,IAA/B,IAAuC,OAAOP,MAAM,CAACO,GAAP,CAAW,QAAX,CAAP,KAAgC,QAA3E,EAAqF;AACnF,aAAOP,MAAM,CAACO,GAAP,CAAW,QAAX,CAAP;AACD,KAFD,MAEO;AACL,aAAOP,MAAP;AACD;AACF,G;;SAMD6F,M,GAAA,kBAAU;AAAA;;AACR,QAAIrC,KAAK,GAAG,IAAZ;AACA,QAAIsC,YAAJ,EAAkBC,OAAlB,EAA2B9F,eAA3B;AAEA,uBAAmG,KAAK0B,KAAxG;AAAA,QAAQ5B,IAAR,gBAAQA,IAAR;AAAA,QAAciG,MAAd,gBAAcA,MAAd;AAAA,QAAsBC,QAAtB,gBAAsBA,QAAtB;AAAA,QAAgCC,aAAhC,gBAAgCA,aAAhC;AAAA,QAA+CC,MAA/C,gBAA+CA,MAA/C;AAAA,QAAuDC,UAAvD,gBAAuDA,UAAvD;AAAA,QAAmEC,SAAnE,gBAAmEA,SAAnE;AAAA,QAA8EC,gBAA9E,gBAA8EA,gBAA9E;;AAEA,uBAAoC,KAAK3E,KAAzC;AAAA,QAAM3B,MAAN,gBAAMA,MAAN;AAAA,QAAcuG,OAAd,gBAAcA,OAAd;AAAA,QAA0BC,KAA1B;;AAEA,QAAIxG,MAAM,KAAK,IAAf,EAAqB;AACnB,aAAO,IAAP;AACD;;AAED,QAAMyG,QAAQ,GAAG,KAAK9E,KAAL,CAAW+E,KAAX,GAAmB,EAAnB,GAAwB;AACvCC,MAAAA,KAAK,EAAE,KAAKzC,iBAD2B;AAEvC0C,MAAAA,SAAS,EAAE,KAAKxC,qBAFuB;AAGvCyC,MAAAA,KAAK,EAAE,KAAKvC,iBAH2B;AAIvCwC,MAAAA,OAAO,EAAE,KAAKtC,mBAJyB;AAKvCuC,MAAAA,IAAI,EAAE,KAAKrC,gBAL4B;AAMvCsC,MAAAA,WAAW,EAAE,KAAKrC,uBANqB;AAOvCsC,MAAAA,MAAM,EAAE,KAAKrC,kBAP0B;AAQvCsC,MAAAA,QAAQ,EAAE,KAAKnC,oBARwB;AASvCoC,MAAAA,YAAY,EAAE,KAAKlC,wBAToB;AAUvCmC,MAAAA,eAAe,EAAE,KAAKlC,2BAViB;AAWvCmC,MAAAA,SAAS,EAAE,KAAK1D;AAXuB,KAAzC;;AAcA,QAAIqC,MAAJ,EAAY;AACV,0BACE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAES,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAE,KAAKtB,SAAf;AAA0B,QAAA,SAAS,EAAE1F,UAAU,CAAC,iBAAD,EAAoB;AAAE6H,UAAAA,SAAS,EAAE,CAAC,KAAK3F,KAAL,CAAW+E;AAAzB,SAApB,CAA/C;AAAsG,QAAA,QAAQ,EAAC,GAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO1G,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,cAAZ,CAAb,KAA6CH,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,UAAZ,CAAb,CAApD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOH,MAAM,CAACO,GAAP,CAAW,SAAX,CAAP,CAFF,CADF,CADF;AAQD;;AAED,QAAIP,MAAM,CAACO,GAAP,CAAW,UAAX,KAA0BP,MAAM,CAACG,KAAP,CAAa,CAAC,QAAD,EAAW,UAAX,CAAb,CAA9B,EAAoE;AAClE,UAAMoH,WAAW,GAAG,KAAK5F,KAAL,CAAW+E,KAAX,GAAmB,EAAnB,GAAwB;AAC1CO,QAAAA,MAAM,EAAE,KAAKrC,kBAD6B;AAE1CsC,QAAAA,QAAQ,EAAE,KAAKnC;AAF2B,OAA5C;AAKA,0BACE,oBAAC,OAAD;AAAS,QAAA,QAAQ,EAAEwC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,qDAAf;AAAqE,QAAA,QAAQ,EAAC,GAA9E;AAAkF,QAAA,GAAG,EAAE,KAAKpC,SAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,iBAArB;AAAuC,QAAA,cAAc,EAAC,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;AAED,QAAIc,QAAJ,EAAc;AACZF,MAAAA,OAAO,gBACL;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8C,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,YAAT;AAAsB,QAAA,SAAS,EAAC,sBAAhC;AAAuD,QAAA,UAAU,MAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9C,CADF,eAEE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,eAArB;AAAqC,QAAA,cAAc,EAAC,aAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KAPD,MAOO,IAAI/F,MAAM,CAACO,GAAP,CAAW,QAAX,EAAqB,IAArB,MAA+B,IAA/B,IAAuC,OAAOP,MAAM,CAACO,GAAP,CAAW,QAAX,CAAP,KAAgC,QAA3E,EAAqF;AAC1F,UAAMiH,iBAAiB,GAAG;AAAEC,QAAAA,MAAM,EAAEzH,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,mBAAZ,CAAb;AAAV,OAA1B;AAEA4F,MAAAA,OAAO,gBACL;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA8C,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,SAAT;AAAmB,QAAA,SAAS,EAAC,sBAA7B;AAAoD,QAAA,UAAU,MAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA9C,CADF,eAEE,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,qBAArB;AAA2C,QAAA,cAAc,EAAC,gBAA1D;AAA2E,QAAA,MAAM,EAAE;AAAE2B,UAAAA,IAAI,eAAE;AAAG,YAAA,OAAO,EAAE,KAAKnF,kBAAjB;AAAqC,uBAASvC,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,IAAZ,CAAb,CAA9C;AAA+E,YAAA,IAAI,EAAEH,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,KAAZ,CAAb,CAArF;AAAuH,YAAA,SAAS,EAAC,4BAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAK;AAAQ,YAAA,uBAAuB,EAAEqH,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAL,CAA9J;AAAR,SAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAOAvH,MAAAA,eAAe,GAAGF,IAAI,CAAC4H,aAAL,CAAmB;AAAEjF,QAAAA,EAAE,EAAE,qBAAN;AAA6BkF,QAAAA,cAAc,EAAE;AAA7C,OAAnB,EAAoF;AAAEF,QAAAA,IAAI,EAAE1H,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,MAAZ,CAAb;AAAR,OAApF,CAAlB;AAEAoG,MAAAA,OAAO,GAAGvG,MAAM,CAACO,GAAP,CAAW,SAAX,CAAV;AACAP,MAAAA,MAAM,GAAIA,MAAM,CAACO,GAAP,CAAW,QAAX,CAAV;AACD;;AAED,QAAI+F,gBAAgB,CAAC/F,GAAjB,CAAqB,OAArB,CAAJ,EAAmC;AACjCiD,MAAAA,KAAK,gBAAG,oBAAC,2BAAD;AAA6B,QAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWkG,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACD,KAFD,MAEO,IAAI7H,MAAM,CAACO,GAAP,CAAW,mBAAX,EAAgCqD,IAAhC,GAAuC,CAA3C,EAA8C;AACnD,UAAI,KAAKjC,KAAL,CAAW+E,KAAf,EAAsB;AACpBlD,QAAAA,KAAK,gBACH,oBAAC,cAAD;AACE,UAAA,OAAO,MADT;AAEE,UAAA,KAAK,EAAExD,MAAM,CAACO,GAAP,CAAW,mBAAX,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,OAPD,MAOO,IAAIP,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,MAAzB,CAAb,MAAmD,OAAvD,EAAgE;AACrE,YAAM2H,UAAU,GAAG9H,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,CAAb,CAAnB;AAEAqD,QAAAA,KAAK,gBACH,oBAAC,MAAD;AAAQ,UAAA,cAAc,EAAEjE,KAAxB;AAA+B,UAAA,OAAO,EAAE,KAAKqG,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAmC,SAAS;AAAA,8BACR,oBAAC,SAAD;AACE,YAAA,GAAG,EAAED,UAAU,CAACvH,GAAX,CAAe,KAAf,CADP;AAEE,YAAA,GAAG,EAAEuH,UAAU,CAACvH,GAAX,CAAe,aAAf,CAFP;AAGE,YAAA,MAAM,EAAEuH,UAAU,CAACvH,GAAX,CAAe,aAAf,KAAiCP,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,eAAZ,CAAb,CAH3C;AAIE,YAAA,eAAe,EAAE2H,UAAU,CAAC3H,KAAX,CAAiB,CAAC,MAAD,EAAS,QAAT,EAAmB,YAAnB,CAAjB,CAJnB;AAKE,YAAA,eAAe,EAAE2H,UAAU,CAAC3H,KAAX,CAAiB,CAAC,MAAD,EAAS,QAAT,EAAmB,YAAnB,CAAjB,CALnB;AAME,YAAA,WAAW,EAAE2H,UAAU,CAAC3H,KAAX,CAAiB,CAAC,MAAD,EAAS,QAAT,EAAmB,QAAnB,CAAjB,CANf;AAOE,YAAA,QAAQ,EAAE2H,UAAU,CAAC3H,KAAX,CAAiB,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,CAAjB,EAAmD,CAAnD,CAPZ;AAQE,YAAA,KAAK,EAAE,MAAI,CAACwB,KAAL,CAAWkG,gBARpB;AASE,YAAA,MAAM,EAAE,GATV;AAUE,YAAA,UAAU,EAAE,MAAI,CAAClG,KAAL,CAAWqG,eAVzB;AAWE,YAAA,sBAAsB,EAAE1B,gBAAgB,CAAC/F,GAAjB,CAAqB,WAArB,IAAoC,MAAI,CAACuD,4BAAzC,GAAwE7C,SAXlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA,SADZ,CADF;AAmBD,OAtBM,MAsBA,IAAIjB,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,EAAyB,MAAzB,CAAb,MAAmD,OAAvD,EAAgE;AACrE,YAAM2H,WAAU,GAAG9H,MAAM,CAACG,KAAP,CAAa,CAAC,mBAAD,EAAsB,CAAtB,CAAb,CAAnB;;AAEAqD,QAAAA,KAAK,gBACH,oBAAC,MAAD;AAAQ,UAAA,cAAc,EAAElE,KAAxB;AAA+B,UAAA,OAAO,EAAE,KAAKqG,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAoC,SAAS;AAAA,8BACR,oBAAC,SAAD;AACE,YAAA,OAAO,EAAED,WAAU,CAACvH,GAAX,CAAe,aAAf,CADX;AAEE,YAAA,SAAS,EAAEuH,WAAU,CAAC3H,KAAX,CAAiB,CAAC,MAAD,EAAS,UAAT,EAAqB,YAArB,CAAjB,CAFb;AAGE,YAAA,QAAQ,EAAE2H,WAAU,CAACvH,GAAX,CAAe,UAAf,CAHZ;AAIE,YAAA,GAAG,EAAEuH,WAAU,CAACvH,GAAX,CAAe,KAAf,CAJP;AAKE,YAAA,GAAG,EAAEuH,WAAU,CAACvH,GAAX,CAAe,aAAf,CALP;AAME,YAAA,KAAK,EAAE,MAAI,CAACoB,KAAL,CAAWkG,gBANpB;AAOE,YAAA,MAAM,EAAE,GAPV;AAQE,YAAA,MAAM,MARR;AASE,YAAA,SAAS,EAAE7H,MAAM,CAACO,GAAP,CAAW,WAAX,CATb;AAUE,YAAA,WAAW,EAAE,MAAI,CAAC6C,eAVpB;AAWE,YAAA,UAAU,EAAE,MAAI,CAACzB,KAAL,CAAWqG,eAXzB;AAYE,YAAA,sBAAsB,EAAE1B,gBAAgB,CAAC/F,GAAjB,CAAqB,WAArB,IAAoC,MAAI,CAACuD,4BAAzC,GAAwE7C,SAZlG;AAaE,YAAA,OAAO,EAAE,MAAI,CAACQ,KAAL,CAAWC,SAbtB;AAcE,YAAA,kBAAkB,EAAE,MAAI,CAACG,2BAd3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA,SADZ,CADF;AAsBD,OAzBM,MAyBA;AACL2B,QAAAA,KAAK,gBACH,oBAAC,MAAD;AAAQ,UAAA,cAAc,EAAEnE,YAAxB;AAAsC,UAAA,OAAO,EAAE,KAAKoG,yBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,UAAAsC,SAAS;AAAA,8BACR,oBAAC,SAAD;AACE,YAAA,KAAK,EAAE/H,MAAM,CAACO,GAAP,CAAW,mBAAX,CADT;AAEE,YAAA,SAAS,EAAEP,MAAM,CAACO,GAAP,CAAW,WAAX,CAFb;AAGE,YAAA,MAAM,EAAE,GAHV;AAIE,YAAA,WAAW,EAAE,MAAI,CAACgD,eAJpB;AAKE,YAAA,UAAU,EAAE,MAAI,CAAC5B,KAAL,CAAWqG,eALzB;AAME,YAAA,YAAY,EAAE,MAAI,CAACrG,KAAL,CAAWkG,gBAN3B;AAOE,YAAA,OAAO,EAAE,MAAI,CAACpG,KAAL,CAAWC,SAPtB;AAQE,YAAA,kBAAkB,EAAE,MAAI,CAACG,2BAR3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ;AAAA,SADZ,CADF;AAgBD;AACF,KAzEM,MAyEA,IAAI7B,MAAM,CAACO,GAAP,CAAW,cAAX,EAA2BF,MAA3B,KAAsC,CAAtC,IAA2CL,MAAM,CAACO,GAAP,CAAW,MAAX,CAA/C,EAAmE;AACxEiD,MAAAA,KAAK,gBACH,oBAAC,IAAD;AACE,QAAA,WAAW,EAAE,KAAKD,eADpB;AAEE,QAAA,IAAI,EAAEvD,MAAM,CAACO,GAAP,CAAW,MAAX,CAFR;AAGE,QAAA,OAAO,MAHT;AAIE,QAAA,UAAU,EAAE,KAAKoB,KAAL,CAAWqG,eAJzB;AAKE,QAAA,YAAY,EAAE,KAAKrG,KAAL,CAAWkG,gBAL3B;AAME,QAAA,SAAS,EAAE7H,MAAM,CAACO,GAAP,CAAW,WAAX,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;AAED,QAAI2F,aAAa,IAAIA,aAAa,CAACtC,IAAd,GAAqB,CAA1C,EAA6C;AAC3CkC,MAAAA,YAAY,gBAAG,oBAAC,eAAD;AAAiB,QAAA,QAAQ,EAAEI,aAA3B;AAA0C,QAAA,IAAI,EAAE,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACD,KAFD,MAEO,IAAIK,OAAO,KAAKtF,SAAZ,IAAyBsF,OAAO,KAAK,IAAzC,EAA+C;AACpDT,MAAAA,YAAY,gBAAG,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE9F,MAAM,CAACO,GAAP,CAAW,SAAX,CAAjB;AAAwC,QAAA,IAAI,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACD,KAFM,MAEA;AACLuF,MAAAA,YAAY,gBAAG,oBAAC,aAAD;AAAe,QAAA,OAAO,EAAE9F,MAAM,CAACO,GAAP,CAAW,SAAX,CAAxB;AAA+C,QAAA,MAAM,EAAEgG,OAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf;AACD;;AAED,QAAM0B,kBAAkB,GAAG;AACzB,gBAAU;AAAEC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,IAAI,EAAEpI,IAAI,CAAC4H,aAAL,CAAmBzG,QAAQ,CAACC,YAA5B;AAAvB,OADe;AAEzB,kBAAY;AAAE+G,QAAAA,IAAI,EAAE,QAAR;AAAkBC,QAAAA,IAAI,EAAEpI,IAAI,CAAC4H,aAAL,CAAmBzG,QAAQ,CAACE,cAA5B;AAAxB,OAFa;AAGzB,iBAAW;AAAE8G,QAAAA,IAAI,EAAE,MAAR;AAAgBC,QAAAA,IAAI,EAAEpI,IAAI,CAAC4H,aAAL,CAAmBzG,QAAQ,CAACG,aAA5B;AAAtB,OAHc;AAIzB,gBAAU;AAAE6G,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,IAAI,EAAEpI,IAAI,CAAC4H,aAAL,CAAmBzG,QAAQ,CAACI,YAA5B;AAA1B;AAJe,KAA3B;AAOA,QAAM8G,cAAc,GAAGH,kBAAkB,CAACjI,MAAM,CAACO,GAAP,CAAW,YAAX,CAAD,CAAzC;AAEA,wBACE,oBAAC,OAAD;AAAS,MAAA,QAAQ,EAAEkG,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEhH,UAAU,CAAC,iBAAD,uBAAuCO,MAAM,CAACO,GAAP,CAAW,YAAX,CAAvC,EAAmE;AAAE,iCAAyB,CAAC,CAACP,MAAM,CAACO,GAAP,CAAW,gBAAX,CAA7B;AAA2D4F,QAAAA,MAA3D;AAAmEmB,QAAAA,SAAS,EAAE,CAAC,KAAK3F,KAAL,CAAW+E;AAA1F,OAAnE,CAA1B;AAAiM,MAAA,QAAQ,EAAE,KAAK/E,KAAL,CAAW+E,KAAX,GAAmB,IAAnB,GAA0B,CAArO;AAAwO,uBAAeT,QAAQ,GAAG,MAAH,GAAY,IAA3Q;AAAiR,oBAAYnG,mBAAmB,CAACC,IAAD,EAAOC,MAAP,EAAeC,eAAf,CAAhT;AAAiV,MAAA,GAAG,EAAE,KAAKkF,SAA3V;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGY,OADH,eAGE;AAAK,MAAA,SAAS,EAAEtG,UAAU,CAAC,QAAD,cAAqBO,MAAM,CAACO,GAAP,CAAW,YAAX,CAArB,EAAiD;AAAE,wBAAgB,CAAC,CAACP,MAAM,CAACO,GAAP,CAAW,gBAAX,CAApB;AAAkDmG,QAAAA,KAAK,EAAE,KAAK/E,KAAL,CAAW+E;AAApE,OAAjD,CAA1B;AAAyJ,iBAAS1G,MAAM,CAACO,GAAP,CAAW,IAAX,CAAlK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,OAAO,EAAE,KAAK6B,iBAA9C;AAAiE,MAAA,IAAI,EAAC,cAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,IAAI,EAAEpC,MAAM,CAACO,GAAP,CAAW,KAAX,CAAT;AAA4B,MAAA,SAAS,EAAC,uBAAtC;AAA8D,MAAA,MAAM,EAAC,QAArE;AAA8E,MAAA,GAAG,EAAC,qBAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0C,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE6H,cAAc,CAACF,IAAzB;AAA+B,MAAA,KAAK,EAAEE,cAAc,CAACD,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA1C,CADF,eAEE,oBAAC,iBAAD;AAAmB,MAAA,SAAS,EAAEnI,MAAM,CAACO,GAAP,CAAW,YAAX,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAME;AAAG,MAAA,OAAO,EAAE,KAAKgC,kBAAjB;AAAqC,iBAASvC,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,IAAZ,CAAb,CAA9C;AAA+E,MAAA,IAAI,EAAEH,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,KAAZ,CAAb,CAArF;AAAuH,MAAA,KAAK,EAAEH,MAAM,CAACG,KAAP,CAAa,CAAC,SAAD,EAAY,MAAZ,CAAb,CAA9H;AAAiK,MAAA,SAAS,EAAC,sBAA3K;AAAkM,MAAA,MAAM,EAAC,QAAzM;AAAkN,MAAA,GAAG,EAAC,qBAAtN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG2F,YADH,CADF,eAKE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE9F,MAAM,CAACO,GAAP,CAAW,SAAX,CAAtB;AAA6C,MAAA,MAAM,EAAE2F,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CANF,CAFF,eAiBE,oBAAC,aAAD;AAAe,MAAA,MAAM,EAAElG,MAAvB;AAA+B,MAAA,OAAO,EAAE,KAAK+B,WAA7C;AAA0D,MAAA,QAAQ,EAAE,CAAC/B,MAAM,CAACO,GAAP,CAAW,QAAX,CAArE;AAA2F,MAAA,UAAU,EAAE6F,UAAvG;AAAmH,MAAA,gBAAgB,EAAE,KAAKtD,oBAA1I;AAAgK,MAAA,WAAW,MAA3K;AAA4K,MAAA,iBAAiB,EAAE,KAAKG,qBAApM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,EAmBGO,KAnBH,eAqBE,oBAAC,eAAD;AAAiB,MAAA,SAAS,EAAE6C,SAA5B;AAAuC,MAAA,MAAM,EAAErG,MAA/C;AAAuD,MAAA,OAAO,EAAEuG;AAAhE,OAA6EC,KAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OArBF,CAHF,CADF,CADF;AA+BD,G;;;EA9akBpH,sB,WAEZiJ,Y,GAAe;AACpBnG,EAAAA,MAAM,EAAE3D,SAAS,CAAC+J;AADE,C,UAIfC,S,GAAY;AACjBvI,EAAAA,MAAM,EAAE1B,kBAAkB,CAACkK,GADV;AAEjBjC,EAAAA,OAAO,EAAEjI,kBAAkB,CAACkK,GAFX;AAGjBtC,EAAAA,aAAa,EAAE5H,kBAAkB,CAACmK,IAHjB;AAIjBzG,EAAAA,OAAO,EAAEzD,SAAS,CAACmK,IAJF;AAKjBvE,EAAAA,OAAO,EAAE5F,SAAS,CAACmK,IALF;AAMjBrE,EAAAA,WAAW,EAAE9F,SAAS,CAACmK,IANN;AAOjBnE,EAAAA,QAAQ,EAAEhG,SAAS,CAACmK,IAPH;AAQjBC,EAAAA,QAAQ,EAAEpK,SAAS,CAACmK,IARH;AASjBE,EAAAA,QAAQ,EAAErK,SAAS,CAACmK,IATH;AAUjBjE,EAAAA,SAAS,EAAElG,SAAS,CAACmK,IAVJ;AAWjBG,EAAAA,KAAK,EAAEtK,SAAS,CAACmK,IAXA;AAYjBhF,EAAAA,WAAW,EAAEnF,SAAS,CAACmK,IAZN;AAajBpF,EAAAA,WAAW,EAAE/E,SAAS,CAACmK,IAbN;AAcjBI,EAAAA,OAAO,EAAEvK,SAAS,CAACmK,IAdF;AAejBK,EAAAA,OAAO,EAAExK,SAAS,CAACmK,IAfF;AAgBjBM,EAAAA,cAAc,EAAEzK,SAAS,CAACmK,IAhBT;AAiBjB3F,EAAAA,cAAc,EAAExE,SAAS,CAACmK,IAjBT;AAkBjBvF,EAAAA,iBAAiB,EAAE5E,SAAS,CAACmK,IAlBZ;AAmBjBhC,EAAAA,KAAK,EAAEnI,SAAS,CAAC0K,IAnBA;AAoBjBjD,EAAAA,MAAM,EAAEzH,SAAS,CAAC0K,IApBD;AAqBjB9C,EAAAA,MAAM,EAAE5H,SAAS,CAAC0K,IArBD;AAsBjBpE,EAAAA,QAAQ,EAAEtG,SAAS,CAACmK,IAtBH;AAuBjB1D,EAAAA,UAAU,EAAEzG,SAAS,CAACmK,IAvBL;AAwBjBtC,EAAAA,UAAU,EAAE7H,SAAS,CAAC0K,IAxBL;AAyBjBC,EAAAA,iBAAiB,EAAE3K,SAAS,CAACmK,IAzBZ;AA0BjBS,EAAAA,kBAAkB,EAAE5K,SAAS,CAACmK,IA1Bb;AA2BjBV,EAAAA,eAAe,EAAEzJ,SAAS,CAACmK,IA3BV;AA4BjBb,EAAAA,gBAAgB,EAAEtJ,SAAS,CAAC6K,MA5BX;AA6BjB/C,EAAAA,SAAS,EAAE9H,SAAS,CAAC8K,MA7BJ;AA8BjBpF,EAAAA,sBAAsB,EAAE1F,SAAS,CAACmK,IA9BjB;AA+BjBpC,EAAAA,gBAAgB,EAAEhI,kBAAkB,CAACgL,QAAnB,CAA4B;AAC5CC,IAAAA,KAAK,EAAEhL,SAAS,CAAC0K,IAD2B;AAE5CO,IAAAA,SAAS,EAAEjL,SAAS,CAAC0K;AAFuB,GAA5B;AA/BD,C;;SANf1H,M","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from './avatar';\nimport AvatarOverlay from './avatar_overlay';\nimport AvatarComposite from './avatar_composite';\nimport RelativeTimestamp from './relative_timestamp';\nimport DisplayName from './display_name';\nimport StatusContent from './status_content';\nimport StatusActionBar from './status_action_bar';\nimport AttachmentList from './attachment_list';\nimport Card from '../features/status/components/card';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { MediaGallery, Video, Audio } from '../features/ui/util/async-components';\nimport { HotKeys } from 'react-hotkeys';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { displayMedia } from '../initial_state';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\n\n// We use the component (and not the container) since we do not want\n// to use the progress bar to show download progress\nimport Bundle from '../features/ui/components/bundle';\n\nexport const textForScreenReader = (intl, status, rebloggedByText = false) => {\n  const displayName = status.getIn(['account', 'display_name']);\n\n  const values = [\n    displayName.length === 0 ? status.getIn(['account', 'acct']).split('@')[0] : displayName,\n    status.get('spoiler_text') && status.get('hidden') ? status.get('spoiler_text') : status.get('search_index').slice(status.get('spoiler_text').length),\n    intl.formatDate(status.get('created_at'), { hour: '2-digit', minute: '2-digit', month: 'short', day: 'numeric' }),\n    status.getIn(['account', 'acct']),\n  ];\n\n  if (rebloggedByText) {\n    values.push(rebloggedByText);\n  }\n\n  return values.join(', ');\n};\n\nexport const defaultMediaVisibility = (status) => {\n  if (!status) {\n    return undefined;\n  }\n\n  if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n    status = status.get('reblog');\n  }\n\n  return (displayMedia !== 'hide_all' && !status.get('sensitive') || displayMedia === 'show_all');\n};\n\nconst messages = defineMessages({\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n});\n\nexport default @injectIntl\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    account: ImmutablePropTypes.map,\n    otherAccounts: ImmutablePropTypes.list,\n    onClick: PropTypes.func,\n    onReply: PropTypes.func,\n    onFavourite: PropTypes.func,\n    onReblog: PropTypes.func,\n    onDelete: PropTypes.func,\n    onDirect: PropTypes.func,\n    onMention: PropTypes.func,\n    onPin: PropTypes.func,\n    onOpenMedia: PropTypes.func,\n    onOpenVideo: PropTypes.func,\n    onBlock: PropTypes.func,\n    onEmbed: PropTypes.func,\n    onHeightChange: PropTypes.func,\n    onToggleHidden: PropTypes.func,\n    onToggleCollapsed: PropTypes.func,\n    muted: PropTypes.bool,\n    hidden: PropTypes.bool,\n    unread: PropTypes.bool,\n    onMoveUp: PropTypes.func,\n    onMoveDown: PropTypes.func,\n    showThread: PropTypes.bool,\n    getScrollPosition: PropTypes.func,\n    updateScrollBottom: PropTypes.func,\n    cacheMediaWidth: PropTypes.func,\n    cachedMediaWidth: PropTypes.number,\n    scrollKey: PropTypes.string,\n    deployPictureInPicture: PropTypes.func,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n  };\n\n  // Avoid checking props that are functions (and whose equality will always\n  // evaluate to false. See react-immutable-pure-component for usage.\n  updateOnProps = [\n    'status',\n    'account',\n    'muted',\n    'hidden',\n    'unread',\n    'pictureInPicture',\n  ];\n\n  state = {\n    showMedia: defaultMediaVisibility(this.props.status),\n    statusId: undefined,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.status && nextProps.status.get('id') !== prevState.statusId) {\n      return {\n        showMedia: defaultMediaVisibility(nextProps.status),\n        statusId: nextProps.status.get('id'),\n      };\n    } else {\n      return null;\n    }\n  }\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  }\n\n  handleClick = () => {\n    if (this.props.onClick) {\n      this.props.onClick();\n      return;\n    }\n\n    if (!this.context.router) {\n      return;\n    }\n\n    const { status } = this.props;\n    this.context.router.history.push(`/statuses/${status.getIn(['reblog', 'id'], status.get('id'))}`);\n  }\n\n  handleExpandClick = (e) => {\n    if (this.props.onClick) {\n      this.props.onClick();\n      return;\n    }\n\n    if (e.button === 0) {\n      if (!this.context.router) {\n        return;\n      }\n\n      const { status } = this.props;\n      this.context.router.history.push(`/statuses/${status.getIn(['reblog', 'id'], status.get('id'))}`);\n    }\n  }\n\n  handleAccountClick = (e) => {\n    if (this.context.router && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      const id = e.currentTarget.getAttribute('data-id');\n      e.preventDefault();\n      this.context.router.history.push(`/accounts/${id}`);\n    }\n  }\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this._properStatus());\n  }\n\n  handleCollapsedToggle = isCollapsed => {\n    this.props.onToggleCollapsed(this._properStatus(), isCollapsed);\n  }\n\n  renderLoadingMediaGallery () {\n    return <div className='media-gallery' style={{ height: '110px' }} />;\n  }\n\n  renderLoadingVideoPlayer () {\n    return <div className='video-player' style={{ height: '110px' }} />;\n  }\n\n  renderLoadingAudioPlayer () {\n    return <div className='audio-player' style={{ height: '110px' }} />;\n  }\n\n  handleOpenVideo = (options) => {\n    const status = this._properStatus();\n    this.props.onOpenVideo(status.get('id'), status.getIn(['media_attachments', 0]), options);\n  }\n\n  handleOpenMedia = (media, index) => {\n    this.props.onOpenMedia(this._properStatus().get('id'), media, index);\n  }\n\n  handleHotkeyOpenMedia = e => {\n    const { onOpenMedia, onOpenVideo } = this.props;\n    const status = this._properStatus();\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        onOpenVideo(status.get('id'), status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        onOpenMedia(status.get('id'), status.get('media_attachments'), 0);\n      }\n    }\n  }\n\n  handleDeployPictureInPicture = (type, mediaProps) => {\n    const { deployPictureInPicture } = this.props;\n    const status = this._properStatus();\n\n    deployPictureInPicture(status, type, mediaProps);\n  }\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.props.onReply(this._properStatus(), this.context.router.history);\n  }\n\n  handleHotkeyFavourite = () => {\n    this.props.onFavourite(this._properStatus());\n  }\n\n  handleHotkeyBoost = e => {\n    this.props.onReblog(this._properStatus(), e);\n  }\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.props.onMention(this._properStatus().get('account'), this.context.router.history);\n  }\n\n  handleHotkeyOpen = () => {\n    this.context.router.history.push(`/statuses/${this._properStatus().get('id')}`);\n  }\n\n  handleHotkeyOpenProfile = () => {\n    this.context.router.history.push(`/accounts/${this._properStatus().getIn(['account', 'id'])}`);\n  }\n\n  handleHotkeyMoveUp = e => {\n    this.props.onMoveUp(this.props.status.get('id'), e.target.getAttribute('data-featured'));\n  }\n\n  handleHotkeyMoveDown = e => {\n    this.props.onMoveDown(this.props.status.get('id'), e.target.getAttribute('data-featured'));\n  }\n\n  handleHotkeyToggleHidden = () => {\n    this.props.onToggleHidden(this._properStatus());\n  }\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  }\n\n  _properStatus () {\n    const { status } = this.props;\n\n    if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      return status.get('reblog');\n    } else {\n      return status;\n    }\n  }\n\n  handleRef = c => {\n    this.node = c;\n  }\n\n  render () {\n    let media = null;\n    let statusAvatar, prepend, rebloggedByText;\n\n    const { intl, hidden, featured, otherAccounts, unread, showThread, scrollKey, pictureInPicture } = this.props;\n\n    let { status, account, ...other } = this.props;\n\n    if (status === null) {\n      return null;\n    }\n\n    const handlers = this.props.muted ? {} : {\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      mention: this.handleHotkeyMention,\n      open: this.handleHotkeyOpen,\n      openProfile: this.handleHotkeyOpenProfile,\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      toggleHidden: this.handleHotkeyToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    if (hidden) {\n      return (\n        <HotKeys handlers={handlers}>\n          <div ref={this.handleRef} className={classNames('status__wrapper', { focusable: !this.props.muted })} tabIndex='0'>\n            <span>{status.getIn(['account', 'display_name']) || status.getIn(['account', 'username'])}</span>\n            <span>{status.get('content')}</span>\n          </div>\n        </HotKeys>\n      );\n    }\n\n    if (status.get('filtered') || status.getIn(['reblog', 'filtered'])) {\n      const minHandlers = this.props.muted ? {} : {\n        moveUp: this.handleHotkeyMoveUp,\n        moveDown: this.handleHotkeyMoveDown,\n      };\n\n      return (\n        <HotKeys handlers={minHandlers}>\n          <div className='status__wrapper status__wrapper--filtered focusable' tabIndex='0' ref={this.handleRef}>\n            <FormattedMessage id='status.filtered' defaultMessage='Filtered' />\n          </div>\n        </HotKeys>\n      );\n    }\n\n    if (featured) {\n      prepend = (\n        <div className='status__prepend'>\n          <div className='status__prepend-icon-wrapper'><Icon id='thumb-tack' className='status__prepend-icon' fixedWidth /></div>\n          <FormattedMessage id='status.pinned' defaultMessage='Pinned toot' />\n        </div>\n      );\n    } else if (status.get('reblog', null) !== null && typeof status.get('reblog') === 'object') {\n      const display_name_html = { __html: status.getIn(['account', 'display_name_html']) };\n\n      prepend = (\n        <div className='status__prepend'>\n          <div className='status__prepend-icon-wrapper'><Icon id='retweet' className='status__prepend-icon' fixedWidth /></div>\n          <FormattedMessage id='status.reblogged_by' defaultMessage='{name} boosted' values={{ name: <a onClick={this.handleAccountClick} data-id={status.getIn(['account', 'id'])} href={status.getIn(['account', 'url'])} className='status__display-name muted'><bdi><strong dangerouslySetInnerHTML={display_name_html} /></bdi></a> }} />\n        </div>\n      );\n\n      rebloggedByText = intl.formatMessage({ id: 'status.reblogged_by', defaultMessage: '{name} boosted' }, { name: status.getIn(['account', 'acct']) });\n\n      account = status.get('account');\n      status  = status.get('reblog');\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder width={this.props.cachedMediaWidth} />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (this.props.muted) {\n        media = (\n          <AttachmentList\n            compact\n            media={status.get('media_attachments')}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Bundle fetchComponent={Audio} loading={this.renderLoadingAudioPlayer} >\n            {Component => (\n              <Component\n                src={attachment.get('url')}\n                alt={attachment.get('description')}\n                poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n                backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n                foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n                accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n                duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n                width={this.props.cachedMediaWidth}\n                height={110}\n                cacheWidth={this.props.cacheMediaWidth}\n                deployPictureInPicture={pictureInPicture.get('available') ? this.handleDeployPictureInPicture : undefined}\n              />\n            )}\n          </Bundle>\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Bundle fetchComponent={Video} loading={this.renderLoadingVideoPlayer} >\n            {Component => (\n              <Component\n                preview={attachment.get('preview_url')}\n                frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n                blurhash={attachment.get('blurhash')}\n                src={attachment.get('url')}\n                alt={attachment.get('description')}\n                width={this.props.cachedMediaWidth}\n                height={110}\n                inline\n                sensitive={status.get('sensitive')}\n                onOpenVideo={this.handleOpenVideo}\n                cacheWidth={this.props.cacheMediaWidth}\n                deployPictureInPicture={pictureInPicture.get('available') ? this.handleDeployPictureInPicture : undefined}\n                visible={this.state.showMedia}\n                onToggleVisibility={this.handleToggleMediaVisibility}\n              />\n            )}\n          </Bundle>\n        );\n      } else {\n        media = (\n          <Bundle fetchComponent={MediaGallery} loading={this.renderLoadingMediaGallery}>\n            {Component => (\n              <Component\n                media={status.get('media_attachments')}\n                sensitive={status.get('sensitive')}\n                height={110}\n                onOpenMedia={this.handleOpenMedia}\n                cacheWidth={this.props.cacheMediaWidth}\n                defaultWidth={this.props.cachedMediaWidth}\n                visible={this.state.showMedia}\n                onToggleVisibility={this.handleToggleMediaVisibility}\n              />\n            )}\n          </Bundle>\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0 && status.get('card')) {\n      media = (\n        <Card\n          onOpenMedia={this.handleOpenMedia}\n          card={status.get('card')}\n          compact\n          cacheWidth={this.props.cacheMediaWidth}\n          defaultWidth={this.props.cachedMediaWidth}\n          sensitive={status.get('sensitive')}\n        />\n      );\n    }\n\n    if (otherAccounts && otherAccounts.size > 0) {\n      statusAvatar = <AvatarComposite accounts={otherAccounts} size={48} />;\n    } else if (account === undefined || account === null) {\n      statusAvatar = <Avatar account={status.get('account')} size={48} />;\n    } else {\n      statusAvatar = <AvatarOverlay account={status.get('account')} friend={account} />;\n    }\n\n    const visibilityIconInfo = {\n      'public': { icon: 'globe', text: intl.formatMessage(messages.public_short) },\n      'unlisted': { icon: 'unlock', text: intl.formatMessage(messages.unlisted_short) },\n      'private': { icon: 'lock', text: intl.formatMessage(messages.private_short) },\n      'direct': { icon: 'envelope', text: intl.formatMessage(messages.direct_short) },\n    };\n\n    const visibilityIcon = visibilityIconInfo[status.get('visibility')];\n\n    return (\n      <HotKeys handlers={handlers}>\n        <div className={classNames('status__wrapper', `status__wrapper-${status.get('visibility')}`, { 'status__wrapper-reply': !!status.get('in_reply_to_id'), unread, focusable: !this.props.muted })} tabIndex={this.props.muted ? null : 0} data-featured={featured ? 'true' : null} aria-label={textForScreenReader(intl, status, rebloggedByText)} ref={this.handleRef}>\n          {prepend}\n\n          <div className={classNames('status', `status-${status.get('visibility')}`, { 'status-reply': !!status.get('in_reply_to_id'), muted: this.props.muted })} data-id={status.get('id')}>\n            <div className='status__expand' onClick={this.handleExpandClick} role='presentation' />\n            <div className='status__info'>\n              <a href={status.get('url')} className='status__relative-time' target='_blank' rel='noopener noreferrer'>\n                <span className='status__visibility-icon'><Icon id={visibilityIcon.icon} title={visibilityIcon.text} /></span>\n                <RelativeTimestamp timestamp={status.get('created_at')} />\n              </a>\n\n              <a onClick={this.handleAccountClick} data-id={status.getIn(['account', 'id'])} href={status.getIn(['account', 'url'])} title={status.getIn(['account', 'acct'])} className='status__display-name' target='_blank' rel='noopener noreferrer'>\n                <div className='status__avatar'>\n                  {statusAvatar}\n                </div>\n\n                <DisplayName account={status.get('account')} others={otherAccounts} />\n              </a>\n            </div>\n\n            <StatusContent status={status} onClick={this.handleClick} expanded={!status.get('hidden')} showThread={showThread} onExpandedToggle={this.handleExpandedToggle} collapsable onCollapsedToggle={this.handleCollapsedToggle} />\n\n            {media}\n\n            <StatusActionBar scrollKey={scrollKey} status={status} account={account} {...other} />\n          </div>\n        </div>\n      </HotKeys>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"privacy.public.short","defaultMessage":"Public"},{"id":"privacy.unlisted.short","defaultMessage":"Unlisted"},{"id":"privacy.private.short","defaultMessage":"Followers-only"},{"id":"privacy.direct.short","defaultMessage":"Direct"},{"id":"status.filtered","defaultMessage":"Filtered"},{"id":"status.pinned","defaultMessage":"Pinned toot"},{"id":"status.reblogged_by","defaultMessage":"{name} boosted"}]}},"sourceType":"module"}