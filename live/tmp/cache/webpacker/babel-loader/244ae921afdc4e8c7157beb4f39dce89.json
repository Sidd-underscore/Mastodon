{"ast":null,"code":"import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { NotificationStack } from 'react-notification';\nimport { dismissAlert } from '../../../actions/alerts';\nimport { getAlerts } from '../../../selectors';\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var intl = _ref.intl;\n  var notifications = getAlerts(state);\n  notifications.forEach(function (notification) {\n    return ['title', 'message'].forEach(function (key) {\n      var value = notification[key];\n\n      if (typeof value === 'object') {\n        notification[key] = intl.formatMessage(value, notification[key + \"_values\"]);\n      }\n    });\n  });\n  return {\n    notifications\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDismiss: function onDismiss(alert) {\n      dispatch(dismissAlert(alert));\n    }\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(NotificationStack));","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/containers/notifications_container.js"],"names":["injectIntl","connect","NotificationStack","dismissAlert","getAlerts","mapStateToProps","state","intl","notifications","forEach","notification","key","value","formatMessage","mapDispatchToProps","dispatch","onDismiss","alert"],"mappings":"AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,SAAT,QAA0B,oBAA1B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAqB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3C,MAAMC,aAAa,GAAGJ,SAAS,CAACE,KAAD,CAA/B;AAEAE,EAAAA,aAAa,CAACC,OAAd,CAAsB,UAAAC,YAAY;AAAA,WAAI,CAAC,OAAD,EAAU,SAAV,EAAqBD,OAArB,CAA6B,UAAAE,GAAG,EAAI;AACxE,UAAMC,KAAK,GAAGF,YAAY,CAACC,GAAD,CAA1B;;AAEA,UAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC7BF,QAAAA,YAAY,CAACC,GAAD,CAAZ,GAAoBJ,IAAI,CAACM,aAAL,CAAmBD,KAAnB,EAA0BF,YAAY,CAAIC,GAAJ,aAAtC,CAApB;AACD;AACF,KANqC,CAAJ;AAAA,GAAlC;AAQA,SAAO;AAAEH,IAAAA;AAAF,GAAP;AACD,CAZD;;AAcA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLC,IAAAA,SAAS,EAAE,mBAAAC,KAAK,EAAI;AAClBF,MAAAA,QAAQ,CAACZ,YAAY,CAACc,KAAD,CAAb,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAejB,UAAU,CAACC,OAAO,CAACI,eAAD,EAAkBS,kBAAlB,CAAP,CAA6CZ,iBAA7C,CAAD,CAAzB","sourcesContent":["import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { NotificationStack } from 'react-notification';\nimport { dismissAlert } from '../../../actions/alerts';\nimport { getAlerts } from '../../../selectors';\n\nconst mapStateToProps = (state, { intl }) => {\n  const notifications = getAlerts(state);\n\n  notifications.forEach(notification => ['title', 'message'].forEach(key => {\n    const value = notification[key];\n\n    if (typeof value === 'object') {\n      notification[key] = intl.formatMessage(value, notification[`${key}_values`]);\n    }\n  }));\n\n  return { notifications };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDismiss: alert => {\n      dispatch(dismissAlert(alert));\n    },\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(NotificationStack));\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}