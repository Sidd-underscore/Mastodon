{"ast":null,"code":"import api from '../api';\nimport { debounce } from 'lodash';\nimport { showAlertForError } from './alerts';\nexport var SETTING_CHANGE = 'SETTING_CHANGE';\nexport var SETTING_SAVE = 'SETTING_SAVE';\nexport function changeSetting(path, value) {\n  return function (dispatch) {\n    dispatch({\n      type: SETTING_CHANGE,\n      path,\n      value\n    });\n    dispatch(saveSettings());\n  };\n}\n;\nvar debouncedSave = debounce(function (dispatch, getState) {\n  if (getState().getIn(['settings', 'saved'])) {\n    return;\n  }\n\n  var data = getState().get('settings').filter(function (_, path) {\n    return path !== 'saved';\n  }).toJS();\n  api().put('/api/web/settings', {\n    data\n  }).then(function () {\n    return dispatch({\n      type: SETTING_SAVE\n    });\n  }).catch(function (error) {\n    return dispatch(showAlertForError(error));\n  });\n}, 5000, {\n  trailing: true\n});\nexport function saveSettings() {\n  return function (dispatch, getState) {\n    return debouncedSave(dispatch, getState);\n  };\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/settings.js"],"names":["api","debounce","showAlertForError","SETTING_CHANGE","SETTING_SAVE","changeSetting","path","value","dispatch","type","saveSettings","debouncedSave","getState","getIn","data","get","filter","_","toJS","put","then","catch","error","trailing"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,iBAAT,QAAkC,UAAlC;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,YAAY,GAAK,cAAvB;AAEP,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;AACzC,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEN,cADC;AAEPG,MAAAA,IAFO;AAGPC,MAAAA;AAHO,KAAD,CAAR;AAMAC,IAAAA,QAAQ,CAACE,YAAY,EAAb,CAAR;AACD,GARD;AASD;AAAA;AAED,IAAMC,aAAa,GAAGV,QAAQ,CAAC,UAACO,QAAD,EAAWI,QAAX,EAAwB;AACrD,MAAIA,QAAQ,GAAGC,KAAX,CAAiB,CAAC,UAAD,EAAa,OAAb,CAAjB,CAAJ,EAA6C;AAC3C;AACD;;AAED,MAAMC,IAAI,GAAGF,QAAQ,GAAGG,GAAX,CAAe,UAAf,EAA2BC,MAA3B,CAAkC,UAACC,CAAD,EAAIX,IAAJ;AAAA,WAAaA,IAAI,KAAK,OAAtB;AAAA,GAAlC,EAAiEY,IAAjE,EAAb;AAEAlB,EAAAA,GAAG,GAAGmB,GAAN,CAAU,mBAAV,EAA+B;AAAEL,IAAAA;AAAF,GAA/B,EACGM,IADH,CACQ;AAAA,WAAMZ,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAd;AAAA,GADR,EAEGiB,KAFH,CAES,UAAAC,KAAK;AAAA,WAAId,QAAQ,CAACN,iBAAiB,CAACoB,KAAD,CAAlB,CAAZ;AAAA,GAFd;AAGD,CAV6B,EAU3B,IAV2B,EAUrB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAVqB,CAA9B;AAYA,OAAO,SAASb,YAAT,GAAwB;AAC7B,SAAO,UAACF,QAAD,EAAWI,QAAX;AAAA,WAAwBD,aAAa,CAACH,QAAD,EAAWI,QAAX,CAArC;AAAA,GAAP;AACD;AAAA","sourcesContent":["import api from '../api';\nimport { debounce } from 'lodash';\nimport { showAlertForError } from './alerts';\n\nexport const SETTING_CHANGE = 'SETTING_CHANGE';\nexport const SETTING_SAVE   = 'SETTING_SAVE';\n\nexport function changeSetting(path, value) {\n  return dispatch => {\n    dispatch({\n      type: SETTING_CHANGE,\n      path,\n      value,\n    });\n\n    dispatch(saveSettings());\n  };\n};\n\nconst debouncedSave = debounce((dispatch, getState) => {\n  if (getState().getIn(['settings', 'saved'])) {\n    return;\n  }\n\n  const data = getState().get('settings').filter((_, path) => path !== 'saved').toJS();\n\n  api().put('/api/web/settings', { data })\n    .then(() => dispatch({ type: SETTING_SAVE }))\n    .catch(error => dispatch(showAlertForError(error)));\n}, 5000, { trailing: true });\n\nexport function saveSettings() {\n  return (dispatch, getState) => debouncedSave(dispatch, getState);\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}