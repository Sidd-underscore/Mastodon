{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/util/reduced_motion.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// Like react-motion's Motion, but reduces all animations to cross-fades\n// for the benefit of users with motion sickness.\nimport React from 'react';\nimport Motion from 'react-motion/lib/Motion';\nimport PropTypes from 'prop-types';\nvar stylesToKeep = ['opacity', 'backgroundOpacity'];\n\nvar extractValue = function extractValue(value) {\n  // This is either an object with a \"val\" property or it's a number\n  return typeof value === 'object' && value && 'val' in value ? value.val : value;\n};\n\nvar ReducedMotion = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(ReducedMotion, _React$Component);\n\n  function ReducedMotion() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ReducedMotion.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        style = _this$props.style,\n        defaultStyle = _this$props.defaultStyle,\n        children = _this$props.children;\n    Object.keys(style).forEach(function (key) {\n      if (stylesToKeep.includes(key)) {\n        return;\n      } // If it's setting an x or height or scale or some other value, we need\n      // to preserve the end-state value without actually animating it\n\n\n      style[key] = defaultStyle[key] = extractValue(style[key]);\n    });\n    return /*#__PURE__*/React.createElement(Motion, {\n      style: style,\n      defaultStyle: defaultStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return ReducedMotion;\n}(React.Component);\n\nReducedMotion.propTypes = {\n  defaultStyle: PropTypes.object,\n  style: PropTypes.object,\n  children: PropTypes.func\n};\nexport default ReducedMotion;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/util/reduced_motion.js"],"names":["React","Motion","PropTypes","stylesToKeep","extractValue","value","val","ReducedMotion","render","props","style","defaultStyle","children","Object","keys","forEach","key","includes","Component","propTypes","object","func"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,YAAY,GAAG,CAAC,SAAD,EAAY,mBAAZ,CAArB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B;AACA,SAAQ,OAAOA,KAAP,KAAiB,QAAjB,IAA6BA,KAA7B,IAAsC,SAASA,KAAhD,GAAyDA,KAAK,CAACC,GAA/D,GAAqED,KAA5E;AACD,CAHD;;IAKME,a;;;;;;;;;SAQJC,M,GAAA,kBAAS;AAEP,sBAA0C,KAAKC,KAA/C;AAAA,QAAQC,KAAR,eAAQA,KAAR;AAAA,QAAeC,YAAf,eAAeA,YAAf;AAAA,QAA6BC,QAA7B,eAA6BA,QAA7B;AAEAC,IAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAAAC,GAAG,EAAI;AAChC,UAAIb,YAAY,CAACc,QAAb,CAAsBD,GAAtB,CAAJ,EAAgC;AAC9B;AACD,OAH+B,CAIhC;AACA;;;AACAN,MAAAA,KAAK,CAACM,GAAD,CAAL,GAAaL,YAAY,CAACK,GAAD,CAAZ,GAAoBZ,YAAY,CAACM,KAAK,CAACM,GAAD,CAAN,CAA7C;AACD,KAPD;AASA,wBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAEN,KAAf;AAAsB,MAAA,YAAY,EAAEC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,QADH,CADF;AAKD,G;;;EA1ByBZ,KAAK,CAACkB,S;;AAA5BX,a,CAEGY,S,GAAY;AACjBR,EAAAA,YAAY,EAAET,SAAS,CAACkB,MADP;AAEjBV,EAAAA,KAAK,EAAER,SAAS,CAACkB,MAFA;AAGjBR,EAAAA,QAAQ,EAAEV,SAAS,CAACmB;AAHH,C;AA4BrB,eAAed,aAAf","sourcesContent":["// Like react-motion's Motion, but reduces all animations to cross-fades\n// for the benefit of users with motion sickness.\nimport React from 'react';\nimport Motion from 'react-motion/lib/Motion';\nimport PropTypes from 'prop-types';\n\nconst stylesToKeep = ['opacity', 'backgroundOpacity'];\n\nconst extractValue = (value) => {\n  // This is either an object with a \"val\" property or it's a number\n  return (typeof value === 'object' && value && 'val' in value) ? value.val : value;\n};\n\nclass ReducedMotion extends React.Component {\n\n  static propTypes = {\n    defaultStyle: PropTypes.object,\n    style: PropTypes.object,\n    children: PropTypes.func,\n  }\n\n  render() {\n\n    const { style, defaultStyle, children } = this.props;\n\n    Object.keys(style).forEach(key => {\n      if (stylesToKeep.includes(key)) {\n        return;\n      }\n      // If it's setting an x or height or scale or some other value, we need\n      // to preserve the end-state value without actually animating it\n      style[key] = defaultStyle[key] = extractValue(style[key]);\n    });\n\n    return (\n      <Motion style={style} defaultStyle={defaultStyle}>\n        {children}\n      </Motion>\n    );\n  }\n\n}\n\nexport default ReducedMotion;\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}