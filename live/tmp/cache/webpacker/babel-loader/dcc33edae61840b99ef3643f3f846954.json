{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/components/search.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nvar messages = defineMessages({\n  search: {\n    \"id\": \"lists.search\",\n    \"defaultMessage\": \"Search among people you follow\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    value: state.getIn(['listEditor', 'suggestions', 'value'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onSubmit: function onSubmit(value) {\n      return dispatch(fetchListSuggestions(value));\n    },\n    onClear: function onClear() {\n      return dispatch(clearListSuggestions());\n    },\n    onChange: function onChange(value) {\n      return dispatch(changeListSuggestions(value));\n    }\n  };\n};\n\nvar Search = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Search, _React$PureComponent);\n\n  function Search() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleChange = function (e) {\n      _this.props.onChange(e.target.value);\n    };\n\n    _this.handleKeyUp = function (e) {\n      if (e.keyCode === 13) {\n        _this.props.onSubmit(_this.props.value);\n      }\n    };\n\n    _this.handleClear = function () {\n      _this.props.onClear();\n    };\n\n    return _this;\n  }\n\n  var _proto = Search.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        value = _this$props.value,\n        intl = _this$props.intl;\n    var hasValue = value.length > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-editor__search search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, intl.formatMessage(messages.search)), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"search__input\",\n      type: \"text\",\n      value: value,\n      onChange: this.handleChange,\n      onKeyUp: this.handleKeyUp,\n      placeholder: intl.formatMessage(messages.search),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      tabIndex: \"0\",\n      className: \"search__icon\",\n      onClick: this.handleClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"search\",\n      className: classNames({\n        active: !hasValue\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Icon, {\n      id: \"times-circle\",\n      \"aria-label\": intl.formatMessage(messages.search),\n      className: classNames({\n        active: hasValue\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return Search;\n}(React.PureComponent), _class2.propTypes = {\n  intl: PropTypes.object.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired\n}, _temp)) || _class) || _class);\nexport { Search as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/components/search.js"],"names":["React","PropTypes","connect","defineMessages","injectIntl","fetchListSuggestions","clearListSuggestions","changeListSuggestions","classNames","Icon","messages","search","mapStateToProps","state","value","getIn","mapDispatchToProps","dispatch","onSubmit","onClear","onChange","Search","handleChange","e","props","target","handleKeyUp","keyCode","handleClear","render","intl","hasValue","length","display","formatMessage","active","PureComponent","propTypes","object","isRequired","string","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { fetchListSuggestions, clearListSuggestions, changeListSuggestions } from '../../../actions/lists';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  search: { id: 'lists.search', defaultMessage: 'Search among people you follow' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'suggestions', 'value']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: value => dispatch(fetchListSuggestions(value)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onChange: value => dispatch(changeListSuggestions(value)),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass Search extends React.PureComponent {\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleKeyUp = e => {\n    if (e.keyCode === 13) {\n      this.props.onSubmit(this.props.value);\n    }\n  }\n\n  handleClear = () => {\n    this.props.onClear();\n  }\n\n  render () {\n    const { value, intl } = this.props;\n    const hasValue = value.length > 0;\n\n    return (\n      <div className='list-editor__search search'>\n        <label>\n          <span style={{ display: 'none' }}>{intl.formatMessage(messages.search)}</span>\n\n          <input\n            className='search__input'\n            type='text'\n            value={value}\n            onChange={this.handleChange}\n            onKeyUp={this.handleKeyUp}\n            placeholder={intl.formatMessage(messages.search)}\n          />\n        </label>\n\n        <div role='button' tabIndex='0' className='search__icon' onClick={this.handleClear}>\n          <Icon id='search' className={classNames({ active: !hasValue })} />\n          <Icon id='times-circle' aria-label={intl.formatMessage(messages.search)} className={classNames({ active: hasValue })} />\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lists.search","defaultMessage":"Search among people you follow"}]}},"sourceType":"module"}