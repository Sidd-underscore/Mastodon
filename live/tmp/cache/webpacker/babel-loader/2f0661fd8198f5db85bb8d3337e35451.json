{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/lists/components/new_list_form.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nvar messages = defineMessages({\n  label: {\n    \"id\": \"lists.new.title_placeholder\",\n    \"defaultMessage\": \"New list title\"\n  },\n  title: {\n    \"id\": \"lists.new.create\",\n    \"defaultMessage\": \"Add list\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    value: state.getIn(['listEditor', 'title']),\n    disabled: state.getIn(['listEditor', 'isSubmitting'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onChange: function onChange(value) {\n      return dispatch(changeListEditorTitle(value));\n    },\n    onSubmit: function onSubmit() {\n      return dispatch(submitListEditor(true));\n    }\n  };\n};\n\nvar NewListForm = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(NewListForm, _React$PureComponent);\n\n  function NewListForm() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleChange = function (e) {\n      _this.props.onChange(e.target.value);\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.onSubmit();\n    };\n\n    _this.handleClick = function () {\n      _this.props.onSubmit();\n    };\n\n    return _this;\n  }\n\n  var _proto = NewListForm.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        value = _this$props.value,\n        disabled = _this$props.disabled,\n        intl = _this$props.intl;\n    var label = intl.formatMessage(messages.label);\n    var title = intl.formatMessage(messages.title);\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"column-inline-form\",\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, label), /*#__PURE__*/React.createElement(\"input\", {\n      className: \"setting-text\",\n      value: value,\n      disabled: disabled,\n      onChange: this.handleChange,\n      placeholder: label,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(IconButton, {\n      disabled: disabled || !value,\n      icon: \"plus\",\n      title: title,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return NewListForm;\n}(React.PureComponent), _class2.propTypes = {\n  value: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  intl: PropTypes.object.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired\n}, _temp)) || _class) || _class);\nexport { NewListForm as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/lists/components/new_list_form.js"],"names":["React","connect","PropTypes","changeListEditorTitle","submitListEditor","IconButton","defineMessages","injectIntl","messages","label","title","mapStateToProps","state","value","getIn","disabled","mapDispatchToProps","dispatch","onChange","onSubmit","NewListForm","handleChange","e","props","target","handleSubmit","preventDefault","handleClick","render","intl","formatMessage","display","PureComponent","propTypes","string","isRequired","bool","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { changeListEditorTitle, submitListEditor } from '../../../actions/lists';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  label: { id: 'lists.new.title_placeholder', defaultMessage: 'New list title' },\n  title: { id: 'lists.new.create', defaultMessage: 'Add list' },\n});\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['listEditor', 'title']),\n  disabled: state.getIn(['listEditor', 'isSubmitting']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: value => dispatch(changeListEditorTitle(value)),\n  onSubmit: () => dispatch(submitListEditor(true)),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass NewListForm extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = e => {\n    this.props.onChange(e.target.value);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit();\n  }\n\n  handleClick = () => {\n    this.props.onSubmit();\n  }\n\n  render () {\n    const { value, disabled, intl } = this.props;\n\n    const label = intl.formatMessage(messages.label);\n    const title = intl.formatMessage(messages.title);\n\n    return (\n      <form className='column-inline-form' onSubmit={this.handleSubmit}>\n        <label>\n          <span style={{ display: 'none' }}>{label}</span>\n\n          <input\n            className='setting-text'\n            value={value}\n            disabled={disabled}\n            onChange={this.handleChange}\n            placeholder={label}\n          />\n        </label>\n\n        <IconButton\n          disabled={disabled || !value}\n          icon='plus'\n          title={title}\n          onClick={this.handleClick}\n        />\n      </form>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lists.new.title_placeholder","defaultMessage":"New list title"},{"id":"lists.new.create","defaultMessage":"Add list"}]}},"sourceType":"module"}