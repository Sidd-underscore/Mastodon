{"ast":null,"code":"import { connect } from 'react-redux';\nimport { makeGetNotification, makeGetStatus } from '../../../selectors';\nimport Notification from '../components/notification';\nimport { initBoostModal } from '../../../actions/boosts';\nimport { mentionCompose } from '../../../actions/compose';\nimport { reblog, favourite, unreblog, unfavourite } from '../../../actions/interactions';\nimport { hideStatus, revealStatus } from '../../../actions/statuses';\nimport { boostModal } from '../../../initial_state';\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getNotification = makeGetNotification();\n  var getStatus = makeGetStatus();\n\n  var mapStateToProps = function mapStateToProps(state, props) {\n    var notification = getNotification(state, props.notification, props.accountId);\n    return {\n      notification: notification,\n      status: notification.get('status') ? getStatus(state, {\n        id: notification.get('status')\n      }) : null\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onMention: function onMention(account, router) {\n      dispatch(mentionCompose(account, router));\n    },\n\n    onModalReblog(status, privacy) {\n      dispatch(reblog(status, privacy));\n    },\n\n    onReblog(status, e) {\n      if (status.get('reblogged')) {\n        dispatch(unreblog(status));\n      } else {\n        if (e.shiftKey || !boostModal) {\n          this.onModalReblog(status);\n        } else {\n          dispatch(initBoostModal({\n            status,\n            onReblog: this.onModalReblog\n          }));\n        }\n      }\n    },\n\n    onFavourite(status) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    },\n\n    onToggleHidden(status) {\n      if (status.get('hidden')) {\n        dispatch(revealStatus(status.get('id')));\n      } else {\n        dispatch(hideStatus(status.get('id')));\n      }\n    }\n\n  };\n};\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(Notification);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/containers/notification_container.js"],"names":["connect","makeGetNotification","makeGetStatus","Notification","initBoostModal","mentionCompose","reblog","favourite","unreblog","unfavourite","hideStatus","revealStatus","boostModal","makeMapStateToProps","getNotification","getStatus","mapStateToProps","state","props","notification","accountId","status","get","id","mapDispatchToProps","dispatch","onMention","account","router","onModalReblog","privacy","onReblog","e","shiftKey","onFavourite","onToggleHidden"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\nimport { makeGetNotification, makeGetStatus } from '../../../selectors';\nimport Notification from '../components/notification';\nimport { initBoostModal } from '../../../actions/boosts';\nimport { mentionCompose } from '../../../actions/compose';\nimport {\n  reblog,\n  favourite,\n  unreblog,\n  unfavourite,\n} from '../../../actions/interactions';\nimport {\n  hideStatus,\n  revealStatus,\n} from '../../../actions/statuses';\nimport { boostModal } from '../../../initial_state';\n\nconst makeMapStateToProps = () => {\n  const getNotification = makeGetNotification();\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = (state, props) => {\n    const notification = getNotification(state, props.notification, props.accountId);\n    return {\n      notification: notification,\n      status: notification.get('status') ? getStatus(state, { id: notification.get('status') }) : null,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onMention: (account, router) => {\n    dispatch(mentionCompose(account, router));\n  },\n\n  onModalReblog (status, privacy) {\n    dispatch(reblog(status, privacy));\n  },\n\n  onReblog (status, e) {\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      if (e.shiftKey || !boostModal) {\n        this.onModalReblog(status);\n      } else {\n        dispatch(initBoostModal({ status, onReblog: this.onModalReblog }));\n      }\n    }\n  },\n\n  onFavourite (status) {\n    if (status.get('favourited')) {\n      dispatch(unfavourite(status));\n    } else {\n      dispatch(favourite(status));\n    }\n  },\n\n  onToggleHidden (status) {\n    if (status.get('hidden')) {\n      dispatch(revealStatus(status.get('id')));\n    } else {\n      dispatch(hideStatus(status.get('id')));\n    }\n  },\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(Notification);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}