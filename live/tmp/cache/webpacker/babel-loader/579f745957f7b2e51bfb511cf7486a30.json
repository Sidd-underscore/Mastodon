{"ast":null,"code":"var _excluded = [\"media\", \"card\", \"poll\", \"hashtag\"];\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/containers/media_container.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { PureComponent, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { fromJS } from 'immutable';\nimport { getLocale } from 'mastodon/locales';\nimport { getScrollbarWidth } from 'mastodon/utils/scrollbar';\nimport MediaGallery from 'mastodon/components/media_gallery';\nimport Poll from 'mastodon/components/poll';\nimport Hashtag from 'mastodon/components/hashtag';\nimport ModalRoot from 'mastodon/components/modal_root';\nimport MediaModal from 'mastodon/features/ui/components/media_modal';\nimport Video from 'mastodon/features/video';\nimport Card from 'mastodon/features/status/components/card';\nimport Audio from 'mastodon/features/audio';\n\nvar _getLocale = getLocale(),\n    localeData = _getLocale.localeData,\n    messages = _getLocale.messages;\n\naddLocaleData(localeData);\nvar MEDIA_COMPONENTS = {\n  MediaGallery,\n  Video,\n  Card,\n  Poll,\n  Hashtag,\n  Audio\n};\n\nvar MediaContainer = /*#__PURE__*/function (_PureComponent) {\n  _inheritsLoose(MediaContainer, _PureComponent);\n\n  function MediaContainer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _PureComponent.call.apply(_PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      media: null,\n      index: null,\n      time: null,\n      backgroundColor: null,\n      options: null\n    };\n\n    _this.handleOpenMedia = function (media, index) {\n      document.body.classList.add('with-modals--active');\n      document.documentElement.style.marginRight = getScrollbarWidth() + \"px\";\n\n      _this.setState({\n        media,\n        index\n      });\n    };\n\n    _this.handleOpenVideo = function (options) {\n      var components = _this.props.components;\n\n      var _JSON$parse = JSON.parse(components[options.componetIndex].getAttribute('data-props')),\n          media = _JSON$parse.media;\n\n      var mediaList = fromJS(media);\n      document.body.classList.add('with-modals--active');\n      document.documentElement.style.marginRight = getScrollbarWidth() + \"px\";\n\n      _this.setState({\n        media: mediaList,\n        options\n      });\n    };\n\n    _this.handleCloseMedia = function () {\n      document.body.classList.remove('with-modals--active');\n      document.documentElement.style.marginRight = 0;\n\n      _this.setState({\n        media: null,\n        index: null,\n        time: null,\n        backgroundColor: null,\n        options: null\n      });\n    };\n\n    _this.setBackgroundColor = function (color) {\n      _this.setState({\n        backgroundColor: color\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = MediaContainer.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this,\n        _this$state$options,\n        _this$state$options2,\n        _this$state$options3;\n\n    var _this$props = this.props,\n        locale = _this$props.locale,\n        components = _this$props.components;\n    return /*#__PURE__*/React.createElement(IntlProvider, {\n      locale: locale,\n      messages: messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, [].map.call(components, function (component, i) {\n      var componentName = component.getAttribute('data-component');\n      var Component = MEDIA_COMPONENTS[componentName];\n\n      var _JSON$parse2 = JSON.parse(component.getAttribute('data-props')),\n          media = _JSON$parse2.media,\n          card = _JSON$parse2.card,\n          poll = _JSON$parse2.poll,\n          hashtag = _JSON$parse2.hashtag,\n          props = _objectWithoutPropertiesLoose(_JSON$parse2, _excluded);\n\n      Object.assign(props, _extends({}, media ? {\n        media: fromJS(media)\n      } : {}, card ? {\n        card: fromJS(card)\n      } : {}, poll ? {\n        poll: fromJS(poll)\n      } : {}, hashtag ? {\n        hashtag: fromJS(hashtag)\n      } : {}, componentName === 'Video' ? {\n        componetIndex: i,\n        onOpenVideo: _this2.handleOpenVideo\n      } : {\n        onOpenMedia: _this2.handleOpenMedia\n      }));\n      return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n        key: \"media-\" + i,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }\n      })), component);\n    }), /*#__PURE__*/React.createElement(ModalRoot, {\n      backgroundColor: this.state.backgroundColor,\n      onClose: this.handleCloseMedia,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, this.state.media && /*#__PURE__*/React.createElement(MediaModal, {\n      media: this.state.media,\n      index: this.state.index || 0,\n      currentTime: (_this$state$options = this.state.options) == null ? void 0 : _this$state$options.startTime,\n      autoPlay: (_this$state$options2 = this.state.options) == null ? void 0 : _this$state$options2.autoPlay,\n      volume: (_this$state$options3 = this.state.options) == null ? void 0 : _this$state$options3.defaultVolume,\n      onClose: this.handleCloseMedia,\n      onChangeBackgroundColor: this.setBackgroundColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  return MediaContainer;\n}(PureComponent);\n\nMediaContainer.propTypes = {\n  locale: PropTypes.string.isRequired,\n  components: PropTypes.object.isRequired\n};\nexport { MediaContainer as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/containers/media_container.js"],"names":["React","PureComponent","Fragment","ReactDOM","PropTypes","IntlProvider","addLocaleData","fromJS","getLocale","getScrollbarWidth","MediaGallery","Poll","Hashtag","ModalRoot","MediaModal","Video","Card","Audio","localeData","messages","MEDIA_COMPONENTS","MediaContainer","state","media","index","time","backgroundColor","options","handleOpenMedia","document","body","classList","add","documentElement","style","marginRight","setState","handleOpenVideo","components","props","JSON","parse","componetIndex","getAttribute","mediaList","handleCloseMedia","remove","setBackgroundColor","color","render","locale","map","call","component","i","componentName","Component","card","poll","hashtag","Object","assign","onOpenVideo","onOpenMedia","createPortal","startTime","autoPlay","defaultVolume","propTypes","string","isRequired","object"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { fromJS } from 'immutable';\nimport { getLocale } from 'mastodon/locales';\nimport { getScrollbarWidth } from 'mastodon/utils/scrollbar';\nimport MediaGallery from 'mastodon/components/media_gallery';\nimport Poll from 'mastodon/components/poll';\nimport Hashtag from 'mastodon/components/hashtag';\nimport ModalRoot from 'mastodon/components/modal_root';\nimport MediaModal from 'mastodon/features/ui/components/media_modal';\nimport Video from 'mastodon/features/video';\nimport Card from 'mastodon/features/status/components/card';\nimport Audio from 'mastodon/features/audio';\n\nconst { localeData, messages } = getLocale();\naddLocaleData(localeData);\n\nconst MEDIA_COMPONENTS = { MediaGallery, Video, Card, Poll, Hashtag, Audio };\n\nexport default class MediaContainer extends PureComponent {\n\n  static propTypes = {\n    locale: PropTypes.string.isRequired,\n    components: PropTypes.object.isRequired,\n  };\n\n  state = {\n    media: null,\n    index: null,\n    time: null,\n    backgroundColor: null,\n    options: null,\n  };\n\n  handleOpenMedia = (media, index) => {\n    document.body.classList.add('with-modals--active');\n    document.documentElement.style.marginRight = `${getScrollbarWidth()}px`;\n\n    this.setState({ media, index });\n  }\n\n  handleOpenVideo = (options) => {\n    const { components } = this.props;\n    const { media } = JSON.parse(components[options.componetIndex].getAttribute('data-props'));\n    const mediaList = fromJS(media);\n\n    document.body.classList.add('with-modals--active');\n    document.documentElement.style.marginRight = `${getScrollbarWidth()}px`;\n\n    this.setState({ media: mediaList, options });\n  }\n\n  handleCloseMedia = () => {\n    document.body.classList.remove('with-modals--active');\n    document.documentElement.style.marginRight = 0;\n\n    this.setState({\n      media: null,\n      index: null,\n      time: null,\n      backgroundColor: null,\n      options: null,\n    });\n  }\n\n  setBackgroundColor = color => {\n    this.setState({ backgroundColor: color });\n  }\n\n  render () {\n    const { locale, components } = this.props;\n\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <Fragment>\n          {[].map.call(components, (component, i) => {\n            const componentName = component.getAttribute('data-component');\n            const Component = MEDIA_COMPONENTS[componentName];\n            const { media, card, poll, hashtag, ...props } = JSON.parse(component.getAttribute('data-props'));\n\n            Object.assign(props, {\n              ...(media   ? { media:   fromJS(media)   } : {}),\n              ...(card    ? { card:    fromJS(card)    } : {}),\n              ...(poll    ? { poll:    fromJS(poll)    } : {}),\n              ...(hashtag ? { hashtag: fromJS(hashtag) } : {}),\n\n              ...(componentName === 'Video' ? {\n                componetIndex: i,\n                onOpenVideo: this.handleOpenVideo,\n              } : {\n                onOpenMedia: this.handleOpenMedia,\n              }),\n            });\n\n            return ReactDOM.createPortal(\n              <Component {...props} key={`media-${i}`} />,\n              component,\n            );\n          })}\n\n          <ModalRoot backgroundColor={this.state.backgroundColor} onClose={this.handleCloseMedia}>\n            {this.state.media && (\n              <MediaModal\n                media={this.state.media}\n                index={this.state.index || 0}\n                currentTime={this.state.options?.startTime}\n                autoPlay={this.state.options?.autoPlay}\n                volume={this.state.options?.defaultVolume}\n                onClose={this.handleCloseMedia}\n                onChangeBackgroundColor={this.setBackgroundColor}\n              />\n            )}\n          </ModalRoot>\n        </Fragment>\n      </IntlProvider>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}