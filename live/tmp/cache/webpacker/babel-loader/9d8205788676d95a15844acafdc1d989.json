{"ast":null,"code":"// This code is largely borrowed from:\n// https://github.com/missive/emoji-mart/blob/5f2ffcc/src/utils/emoji-index.js\nimport data from './emoji_mart_data_light';\nimport { getData, getSanitizedData, uniq, intersect } from './emoji_utils';\nvar originalPool = {};\nvar index = {};\nvar emojisList = {};\nvar emoticonsList = {};\nvar customEmojisList = [];\n\nvar _loop = function _loop(emoji) {\n  var emojiData = data.emojis[emoji];\n  var short_names = emojiData.short_names,\n      emoticons = emojiData.emoticons;\n  var id = short_names[0];\n\n  if (emoticons) {\n    emoticons.forEach(function (emoticon) {\n      if (emoticonsList[emoticon]) {\n        return;\n      }\n\n      emoticonsList[emoticon] = id;\n    });\n  }\n\n  emojisList[id] = getSanitizedData(id);\n  originalPool[id] = emojiData;\n};\n\nfor (var emoji in data.emojis) {\n  _loop(emoji);\n}\n\nfunction clearCustomEmojis(pool) {\n  customEmojisList.forEach(function (emoji) {\n    var emojiId = emoji.id || emoji.short_names[0];\n    delete pool[emojiId];\n    delete emojisList[emojiId];\n  });\n}\n\nfunction addCustomToPool(custom, pool) {\n  if (customEmojisList.length) clearCustomEmojis(pool);\n  custom.forEach(function (emoji) {\n    var emojiId = emoji.id || emoji.short_names[0];\n\n    if (emojiId && !pool[emojiId]) {\n      pool[emojiId] = getData(emoji);\n      emojisList[emojiId] = getSanitizedData(emoji);\n    }\n  });\n  customEmojisList = custom;\n  index = {};\n}\n\nfunction search(value, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      emojisToShowFilter = _ref.emojisToShowFilter,\n      maxResults = _ref.maxResults,\n      include = _ref.include,\n      exclude = _ref.exclude,\n      custom = _ref.custom;\n\n  if (custom !== undefined) {\n    if (customEmojisList !== custom) addCustomToPool(custom, originalPool);\n  } else {\n    custom = [];\n  }\n\n  maxResults = maxResults || 75;\n  include = include || [];\n  exclude = exclude || [];\n  var results = null,\n      pool = originalPool;\n\n  if (value.length) {\n    if (value === '-' || value === '-1') {\n      return [emojisList['-1']];\n    }\n\n    var values = value.toLowerCase().split(/[\\s|,\\-_]+/),\n        allResults = [];\n\n    if (values.length > 2) {\n      values = [values[0], values[1]];\n    }\n\n    if (include.length || exclude.length) {\n      pool = {};\n      data.categories.forEach(function (category) {\n        var isIncluded = include && include.length ? include.indexOf(category.name.toLowerCase()) > -1 : true;\n        var isExcluded = exclude && exclude.length ? exclude.indexOf(category.name.toLowerCase()) > -1 : false;\n\n        if (!isIncluded || isExcluded) {\n          return;\n        }\n\n        category.emojis.forEach(function (emojiId) {\n          return pool[emojiId] = data.emojis[emojiId];\n        });\n      });\n\n      if (custom.length) {\n        var customIsIncluded = include && include.length ? include.indexOf('custom') > -1 : true;\n        var customIsExcluded = exclude && exclude.length ? exclude.indexOf('custom') > -1 : false;\n\n        if (customIsIncluded && !customIsExcluded) {\n          addCustomToPool(custom, pool);\n        }\n      }\n    }\n\n    var searchValue = function searchValue(value) {\n      var aPool = pool,\n          aIndex = index,\n          length = 0;\n\n      for (var charIndex = 0; charIndex < value.length; charIndex++) {\n        var char = value[charIndex];\n        length++;\n        aIndex[char] = aIndex[char] || {};\n        aIndex = aIndex[char];\n\n        if (!aIndex.results) {\n          (function () {\n            var scores = {};\n            aIndex.results = [];\n            aIndex.pool = {};\n\n            for (var id in aPool) {\n              var _emoji = aPool[id],\n                  _search = _emoji.search,\n                  sub = value.substr(0, length),\n                  subIndex = _search.indexOf(sub);\n\n              if (subIndex !== -1) {\n                var score = subIndex + 1;\n                if (sub === id) score = 0;\n                aIndex.results.push(emojisList[id]);\n                aIndex.pool[id] = _emoji;\n                scores[id] = score;\n              }\n            }\n\n            aIndex.results.sort(function (a, b) {\n              var aScore = scores[a.id],\n                  bScore = scores[b.id];\n              return aScore - bScore;\n            });\n          })();\n        }\n\n        aPool = aIndex.pool;\n      }\n\n      return aIndex.results;\n    };\n\n    if (values.length > 1) {\n      results = searchValue(value);\n    } else {\n      results = [];\n    }\n\n    allResults = values.map(searchValue).filter(function (a) {\n      return a;\n    });\n\n    if (allResults.length > 1) {\n      allResults = intersect.apply(null, allResults);\n    } else if (allResults.length) {\n      allResults = allResults[0];\n    }\n\n    results = uniq(results.concat(allResults));\n  }\n\n  if (results) {\n    if (emojisToShowFilter) {\n      results = results.filter(function (result) {\n        return emojisToShowFilter(data.emojis[result.id]);\n      });\n    }\n\n    if (results && results.length > maxResults) {\n      results = results.slice(0, maxResults);\n    }\n  }\n\n  return results;\n}\n\nexport { search };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/emoji/emoji_mart_search_light.js"],"names":["data","getData","getSanitizedData","uniq","intersect","originalPool","index","emojisList","emoticonsList","customEmojisList","emoji","emojiData","emojis","short_names","emoticons","id","forEach","emoticon","clearCustomEmojis","pool","emojiId","addCustomToPool","custom","length","search","value","emojisToShowFilter","maxResults","include","exclude","undefined","results","values","toLowerCase","split","allResults","categories","category","isIncluded","indexOf","name","isExcluded","customIsIncluded","customIsExcluded","searchValue","aPool","aIndex","charIndex","char","scores","sub","substr","subIndex","score","push","sort","a","b","aScore","bScore","map","filter","apply","concat","result","slice"],"mappings":"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","sourcesContent":["// This code is largely borrowed from:\n// https://github.com/missive/emoji-mart/blob/5f2ffcc/src/utils/emoji-index.js\n\nimport data from './emoji_mart_data_light';\nimport { getData, getSanitizedData, uniq, intersect } from './emoji_utils';\n\nlet originalPool = {};\nlet index = {};\nlet emojisList = {};\nlet emoticonsList = {};\nlet customEmojisList = [];\n\nfor (let emoji in data.emojis) {\n  let emojiData = data.emojis[emoji];\n  let { short_names, emoticons } = emojiData;\n  let id = short_names[0];\n\n  if (emoticons) {\n    emoticons.forEach(emoticon => {\n      if (emoticonsList[emoticon]) {\n        return;\n      }\n\n      emoticonsList[emoticon] = id;\n    });\n  }\n\n  emojisList[id] = getSanitizedData(id);\n  originalPool[id] = emojiData;\n}\n\nfunction clearCustomEmojis(pool) {\n  customEmojisList.forEach((emoji) => {\n    let emojiId = emoji.id || emoji.short_names[0];\n\n    delete pool[emojiId];\n    delete emojisList[emojiId];\n  });\n}\n\nfunction addCustomToPool(custom, pool) {\n  if (customEmojisList.length) clearCustomEmojis(pool);\n\n  custom.forEach((emoji) => {\n    let emojiId = emoji.id || emoji.short_names[0];\n\n    if (emojiId && !pool[emojiId]) {\n      pool[emojiId] = getData(emoji);\n      emojisList[emojiId] = getSanitizedData(emoji);\n    }\n  });\n\n  customEmojisList = custom;\n  index = {};\n}\n\nfunction search(value, { emojisToShowFilter, maxResults, include, exclude, custom } = {}) {\n  if (custom !== undefined) {\n    if (customEmojisList !== custom)\n      addCustomToPool(custom, originalPool);\n  } else {\n    custom = [];\n  }\n\n  maxResults = maxResults || 75;\n  include = include || [];\n  exclude = exclude || [];\n\n  let results = null,\n    pool = originalPool;\n\n  if (value.length) {\n    if (value === '-' || value === '-1') {\n      return [emojisList['-1']];\n    }\n\n    let values = value.toLowerCase().split(/[\\s|,\\-_]+/),\n      allResults = [];\n\n    if (values.length > 2) {\n      values = [values[0], values[1]];\n    }\n\n    if (include.length || exclude.length) {\n      pool = {};\n\n      data.categories.forEach(category => {\n        let isIncluded = include && include.length ? include.indexOf(category.name.toLowerCase()) > -1 : true;\n        let isExcluded = exclude && exclude.length ? exclude.indexOf(category.name.toLowerCase()) > -1 : false;\n        if (!isIncluded || isExcluded) {\n          return;\n        }\n\n        category.emojis.forEach(emojiId => pool[emojiId] = data.emojis[emojiId]);\n      });\n\n      if (custom.length) {\n        let customIsIncluded = include && include.length ? include.indexOf('custom') > -1 : true;\n        let customIsExcluded = exclude && exclude.length ? exclude.indexOf('custom') > -1 : false;\n        if (customIsIncluded && !customIsExcluded) {\n          addCustomToPool(custom, pool);\n        }\n      }\n    }\n\n    const searchValue = (value) => {\n      let aPool = pool,\n        aIndex = index,\n        length = 0;\n\n      for (let charIndex = 0; charIndex < value.length; charIndex++) {\n        const char = value[charIndex];\n        length++;\n\n        aIndex[char] = aIndex[char] || {};\n        aIndex = aIndex[char];\n\n        if (!aIndex.results) {\n          let scores = {};\n\n          aIndex.results = [];\n          aIndex.pool = {};\n\n          for (let id in aPool) {\n            let emoji = aPool[id],\n              { search } = emoji,\n              sub = value.substr(0, length),\n              subIndex = search.indexOf(sub);\n\n            if (subIndex !== -1) {\n              let score = subIndex + 1;\n              if (sub === id) score = 0;\n\n              aIndex.results.push(emojisList[id]);\n              aIndex.pool[id] = emoji;\n\n              scores[id] = score;\n            }\n          }\n\n          aIndex.results.sort((a, b) => {\n            let aScore = scores[a.id],\n              bScore = scores[b.id];\n\n            return aScore - bScore;\n          });\n        }\n\n        aPool = aIndex.pool;\n      }\n\n      return aIndex.results;\n    };\n\n    if (values.length > 1) {\n      results = searchValue(value);\n    } else {\n      results = [];\n    }\n\n    allResults = values.map(searchValue).filter(a => a);\n\n    if (allResults.length > 1) {\n      allResults = intersect.apply(null, allResults);\n    } else if (allResults.length) {\n      allResults = allResults[0];\n    }\n\n    results = uniq(results.concat(allResults));\n  }\n\n  if (results) {\n    if (emojisToShowFilter) {\n      results = results.filter((result) => emojisToShowFilter(data.emojis[result.id]));\n    }\n\n    if (results && results.length > maxResults) {\n      results = results.slice(0, maxResults);\n    }\n  }\n\n  return results;\n}\n\nexport { search };\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}