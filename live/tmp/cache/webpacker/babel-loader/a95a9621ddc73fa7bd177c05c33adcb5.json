{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/upload_button.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nvar messages = defineMessages({\n  upload: {\n    \"id\": \"upload_button.label\",\n    \"defaultMessage\": \"Add images, a video or an audio file\"\n  }\n});\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      acceptContentTypes: state.getIn(['media_attachments', 'accept_content_types'])\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar iconStyle = {\n  height: null,\n  lineHeight: '27px'\n};\nvar UploadButton = (_dec = connect(makeMapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(UploadButton, _ImmutablePureCompone);\n\n  function UploadButton() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleChange = function (e) {\n      if (e.target.files.length > 0) {\n        _this.props.onSelectFile(e.target.files);\n      }\n    };\n\n    _this.handleClick = function () {\n      _this.fileElement.click();\n    };\n\n    _this.setRef = function (c) {\n      _this.fileElement = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = UploadButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        resetFileKey = _this$props.resetFileKey,\n        unavailable = _this$props.unavailable,\n        disabled = _this$props.disabled,\n        acceptContentTypes = _this$props.acceptContentTypes;\n\n    if (unavailable) {\n      return null;\n    }\n\n    var message = intl.formatMessage(messages.upload);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose-form__upload-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      icon: \"paperclip\",\n      title: message,\n      disabled: disabled,\n      onClick: this.handleClick,\n      className: \"compose-form__upload-button-icon\",\n      size: 18,\n      inverted: true,\n      style: iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, message), /*#__PURE__*/React.createElement(\"input\", {\n      key: resetFileKey,\n      ref: this.setRef,\n      type: \"file\",\n      multiple: true,\n      accept: acceptContentTypes.toArray().join(','),\n      onChange: this.handleChange,\n      disabled: disabled,\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return UploadButton;\n}(ImmutablePureComponent), _class2.propTypes = {\n  disabled: PropTypes.bool,\n  unavailable: PropTypes.bool,\n  onSelectFile: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  resetFileKey: PropTypes.number,\n  acceptContentTypes: ImmutablePropTypes.listOf(PropTypes.string).isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class) || _class);\nexport { UploadButton as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/upload_button.js"],"names":["React","IconButton","PropTypes","defineMessages","injectIntl","connect","ImmutablePureComponent","ImmutablePropTypes","messages","upload","makeMapStateToProps","mapStateToProps","state","acceptContentTypes","getIn","iconStyle","height","lineHeight","UploadButton","handleChange","e","target","files","length","props","onSelectFile","handleClick","fileElement","click","setRef","c","render","intl","resetFileKey","unavailable","disabled","message","formatMessage","display","toArray","join","propTypes","bool","func","isRequired","style","object","number","listOf","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nconst messages = defineMessages({\n  upload: { id: 'upload_button.label', defaultMessage: 'Add images, a video or an audio file' },\n});\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    acceptContentTypes: state.getIn(['media_attachments', 'accept_content_types']),\n  });\n\n  return mapStateToProps;\n};\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass UploadButton extends ImmutablePureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    onSelectFile: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    resetFileKey: PropTypes.number,\n    acceptContentTypes: ImmutablePropTypes.listOf(PropTypes.string).isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleChange = (e) => {\n    if (e.target.files.length > 0) {\n      this.props.onSelectFile(e.target.files);\n    }\n  }\n\n  handleClick = () => {\n    this.fileElement.click();\n  }\n\n  setRef = (c) => {\n    this.fileElement = c;\n  }\n\n  render () {\n    const { intl, resetFileKey, unavailable, disabled, acceptContentTypes } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    const message = intl.formatMessage(messages.upload);\n\n    return (\n      <div className='compose-form__upload-button'>\n        <IconButton icon='paperclip' title={message} disabled={disabled} onClick={this.handleClick} className='compose-form__upload-button-icon' size={18} inverted style={iconStyle} />\n        <label>\n          <span style={{ display: 'none' }}>{message}</span>\n          <input\n            key={resetFileKey}\n            ref={this.setRef}\n            type='file'\n            multiple\n            accept={acceptContentTypes.toArray().join(',')}\n            onChange={this.handleChange}\n            disabled={disabled}\n            style={{ display: 'none' }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"upload_button.label","defaultMessage":"Add images, a video or an audio file"}]}},"sourceType":"module"}