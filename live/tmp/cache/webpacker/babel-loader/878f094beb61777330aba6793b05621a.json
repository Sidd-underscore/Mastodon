{"ast":null,"code":"import { connect } from 'react-redux';\nimport ColumnSettings from '../components/column_settings';\nimport { changeSetting } from '../../../actions/settings';\nimport { changeColumnParams } from '../../../actions/columns';\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var columnId = _ref.columnId;\n  var uuid = columnId;\n  var columns = state.getIn(['settings', 'columns']);\n  var index = columns.findIndex(function (c) {\n    return c.get('uuid') === uuid;\n  });\n  return {\n    settings: uuid && index >= 0 ? columns.get(index).get('params') : state.getIn(['settings', 'community'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {\n  var columnId = _ref2.columnId;\n  return {\n    onChange(key, checked) {\n      if (columnId) {\n        dispatch(changeColumnParams(columnId, key, checked));\n      } else {\n        dispatch(changeSetting(['community'].concat(key), checked));\n      }\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnSettings);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/community_timeline/containers/column_settings_container.js"],"names":["connect","ColumnSettings","changeSetting","changeColumnParams","mapStateToProps","state","columnId","uuid","columns","getIn","index","findIndex","c","get","settings","mapDispatchToProps","dispatch","onChange","key","checked"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/C,MAAMC,IAAI,GAAGD,QAAb;AACA,MAAME,OAAO,GAAGH,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAa,SAAb,CAAZ,CAAhB;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,SAAR,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,MAAkBN,IAAtB;AAAA,GAAnB,CAAd;AAEA,SAAO;AACLO,IAAAA,QAAQ,EAAGP,IAAI,IAAIG,KAAK,IAAI,CAAlB,GAAuBF,OAAO,CAACK,GAAR,CAAYH,KAAZ,EAAmBG,GAAnB,CAAuB,QAAvB,CAAvB,GAA0DR,KAAK,CAACI,KAAN,CAAY,CAAC,UAAD,EAAa,WAAb,CAAZ;AAD/D,GAAP;AAGD,CARD;;AAUA,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,SAA4B;AAAA,MAAfV,QAAe,SAAfA,QAAe;AACrD,SAAO;AACLW,IAAAA,QAAQ,CAAEC,GAAF,EAAOC,OAAP,EAAgB;AACtB,UAAIb,QAAJ,EAAc;AACZU,QAAAA,QAAQ,CAACb,kBAAkB,CAACG,QAAD,EAAWY,GAAX,EAAgBC,OAAhB,CAAnB,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACd,aAAa,EAAE,WAAF,SAAkBgB,GAAlB,GAAwBC,OAAxB,CAAd,CAAR;AACD;AACF;;AAPI,GAAP;AASD,CAVD;;AAYA,eAAenB,OAAO,CAACI,eAAD,EAAkBW,kBAAlB,CAAP,CAA6Cd,cAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport ColumnSettings from '../components/column_settings';\nimport { changeSetting } from '../../../actions/settings';\nimport { changeColumnParams } from '../../../actions/columns';\n\nconst mapStateToProps = (state, { columnId }) => {\n  const uuid = columnId;\n  const columns = state.getIn(['settings', 'columns']);\n  const index = columns.findIndex(c => c.get('uuid') === uuid);\n\n  return {\n    settings: (uuid && index >= 0) ? columns.get(index).get('params') : state.getIn(['settings', 'community']),\n  };\n};\n\nconst mapDispatchToProps = (dispatch, { columnId }) => {\n  return {\n    onChange (key, checked) {\n      if (columnId) {\n        dispatch(changeColumnParams(columnId, key, checked));\n      } else {\n        dispatch(changeSetting(['community', ...key], checked));\n      }\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnSettings);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}