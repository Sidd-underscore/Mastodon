{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/pinned_statuses/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nvar messages = defineMessages({\n  heading: {\n    \"id\": \"column.pins\",\n    \"defaultMessage\": \"Pinned toot\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    statusIds: state.getIn(['status_lists', 'pins', 'items']),\n    hasMore: !!state.getIn(['status_lists', 'pins', 'next'])\n  };\n};\n\nvar PinnedStatuses = (_dec = connect(mapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(PinnedStatuses, _ImmutablePureCompone);\n\n  function PinnedStatuses() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleHeaderClick = function () {\n      _this.column.scrollTop();\n    };\n\n    _this.setRef = function (c) {\n      _this.column = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = PinnedStatuses.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.props.dispatch(fetchPinnedStatuses());\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        statusIds = _this$props.statusIds,\n        hasMore = _this$props.hasMore,\n        multiColumn = _this$props.multiColumn;\n    return /*#__PURE__*/React.createElement(Column, {\n      bindToDocument: !multiColumn,\n      icon: \"thumb-tack\",\n      heading: intl.formatMessage(messages.heading),\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnBackButtonSlim, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StatusList, {\n      statusIds: statusIds,\n      scrollKey: \"pinned_statuses\",\n      hasMore: hasMore,\n      bindToDocument: !multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return PinnedStatuses;\n}(ImmutablePureComponent), _class2.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  statusIds: ImmutablePropTypes.list.isRequired,\n  intl: PropTypes.object.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  multiColumn: PropTypes.bool\n}, _temp)) || _class) || _class);\nexport { PinnedStatuses as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/pinned_statuses/index.js"],"names":["React","connect","PropTypes","ImmutablePropTypes","fetchPinnedStatuses","Column","ColumnBackButtonSlim","StatusList","defineMessages","injectIntl","ImmutablePureComponent","messages","heading","mapStateToProps","state","statusIds","getIn","hasMore","PinnedStatuses","handleHeaderClick","column","scrollTop","setRef","c","componentWillMount","props","dispatch","render","intl","multiColumn","formatMessage","propTypes","func","isRequired","list","object","bool"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,oBAAP,MAAiC,0CAAjC;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AAEA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,OAAO;AAAA;AAAA;AAAA;AADuB,CAAD,CAA/B;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,SAAS,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,CAAZ,CADqB;AAEhCC,IAAAA,OAAO,EAAE,CAAC,CAACH,KAAK,CAACE,KAAN,CAAY,CAAC,cAAD,EAAiB,MAAjB,EAAyB,MAAzB,CAAZ;AAFqB,GAAL;AAAA,CAA7B;;IAOME,c,WAFUjB,OAAO,CAACY,eAAD,C,gBACtBJ,U;;;;;;;;;;;;UAeCU,iB,GAAoB,YAAM;AACxB,YAAKC,MAAL,CAAYC,SAAZ;AACD,K;;UAEDC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,YAAKH,MAAL,GAAcG,CAAd;AACD,K;;;;;;;SAVDC,kB,GAAA,8BAAsB;AACpB,SAAKC,KAAL,CAAWC,QAAX,CAAoBtB,mBAAmB,EAAvC;AACD,G;;SAUDuB,M,GAAA,kBAAU;AACR,sBAAkD,KAAKF,KAAvD;AAAA,QAAQG,IAAR,eAAQA,IAAR;AAAA,QAAcb,SAAd,eAAcA,SAAd;AAAA,QAAyBE,OAAzB,eAAyBA,OAAzB;AAAA,QAAkCY,WAAlC,eAAkCA,WAAlC;AAEA,wBACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,CAACA,WAAzB;AAAsC,MAAA,IAAI,EAAC,YAA3C;AAAwD,MAAA,OAAO,EAAED,IAAI,CAACE,aAAL,CAAmBnB,QAAQ,CAACC,OAA5B,CAAjE;AAAuG,MAAA,GAAG,EAAE,KAAKU,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEP,SADb;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,OAAO,EAAEE,OAHX;AAIE,MAAA,cAAc,EAAE,CAACY,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAWD,G;;;EApC0BnB,sB,WAEpBqB,S,GAAY;AACjBL,EAAAA,QAAQ,EAAExB,SAAS,CAAC8B,IAAV,CAAeC,UADR;AAEjBlB,EAAAA,SAAS,EAAEZ,kBAAkB,CAAC+B,IAAnB,CAAwBD,UAFlB;AAGjBL,EAAAA,IAAI,EAAE1B,SAAS,CAACiC,MAAV,CAAiBF,UAHN;AAIjBhB,EAAAA,OAAO,EAAEf,SAAS,CAACkC,IAAV,CAAeH,UAJP;AAKjBJ,EAAAA,WAAW,EAAE3B,SAAS,CAACkC;AALN,C;SAFflB,c","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned toot' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'pins', 'items']),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  render () {\n    const { intl, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          bindToDocument={!multiColumn}\n        />\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column.pins","defaultMessage":"Pinned toot"}]}},"sourceType":"module"}