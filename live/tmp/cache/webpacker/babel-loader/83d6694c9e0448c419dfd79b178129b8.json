{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/gifv.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar GIFV = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(GIFV, _React$PureComponent);\n\n  function GIFV() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      loading: true\n    };\n\n    _this.handleLoadedData = function () {\n      _this.setState({\n        loading: false\n      });\n    };\n\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n\n      if (onClick) {\n        e.stopPropagation();\n        onClick();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = GIFV.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.src !== this.props.src) {\n      this.setState({\n        loading: true\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        src = _this$props.src,\n        width = _this$props.width,\n        height = _this$props.height,\n        alt = _this$props.alt;\n    var loading = this.state.loading;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"gifv\",\n      style: {\n        position: 'relative'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }\n    }, loading && /*#__PURE__*/React.createElement(\"canvas\", {\n      width: width,\n      height: height,\n      role: \"button\",\n      tabIndex: \"0\",\n      \"aria-label\": alt,\n      title: alt,\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      src: src,\n      role: \"button\",\n      tabIndex: \"0\",\n      \"aria-label\": alt,\n      title: alt,\n      muted: true,\n      loop: true,\n      autoPlay: true,\n      playsInline: true,\n      onClick: this.handleClick,\n      onLoadedData: this.handleLoadedData,\n      style: {\n        position: loading ? 'absolute' : 'static',\n        top: 0,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return GIFV;\n}(React.PureComponent);\n\nGIFV.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onClick: PropTypes.func\n};\nexport { GIFV as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/gifv.js"],"names":["React","PropTypes","GIFV","state","loading","handleLoadedData","setState","handleClick","e","onClick","props","stopPropagation","componentWillReceiveProps","nextProps","src","render","width","height","alt","position","top","left","PureComponent","propTypes","string","isRequired","number","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,I;;;;;;;;;;;UAUnBC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UAIRC,gB,GAAmB,YAAM;AACvB,YAAKC,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAQDG,W,GAAc,UAAAC,CAAC,EAAI;AACjB,UAAQC,OAAR,GAAoB,MAAKC,KAAzB,CAAQD,OAAR;;AAEA,UAAIA,OAAJ,EAAa;AACXD,QAAAA,CAAC,CAACG,eAAF;AACAF,QAAAA,OAAO;AACR;AACF,K;;;;;;;SAbDG,yB,GAAA,mCAA2BC,SAA3B,EAAsC;AACpC,QAAIA,SAAS,CAACC,GAAV,KAAkB,KAAKJ,KAAL,CAAWI,GAAjC,EAAsC;AACpC,WAAKR,QAAL,CAAc;AAAEF,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD;AACF,G;;SAWDW,M,GAAA,kBAAU;AACR,sBAAoC,KAAKL,KAAzC;AAAA,QAAQI,GAAR,eAAQA,GAAR;AAAA,QAAaE,KAAb,eAAaA,KAAb;AAAA,QAAoBC,MAApB,eAAoBA,MAApB;AAAA,QAA4BC,GAA5B,eAA4BA,GAA5B;AACA,QAAQd,OAAR,GAAoB,KAAKD,KAAzB,CAAQC,OAAR;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAsB,MAAA,KAAK,EAAE;AAAEe,QAAAA,QAAQ,EAAE;AAAZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGf,OAAO,iBACN;AACE,MAAA,KAAK,EAAEY,KADT;AAEE,MAAA,MAAM,EAAEC,MAFV;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,QAAQ,EAAC,GAJX;AAKE,oBAAYC,GALd;AAME,MAAA,KAAK,EAAEA,GANT;AAOE,MAAA,OAAO,EAAE,KAAKX,WAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAaE;AACE,MAAA,GAAG,EAAEO,GADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAC,GAHX;AAIE,oBAAYI,GAJd;AAKE,MAAA,KAAK,EAAEA,GALT;AAME,MAAA,KAAK,MANP;AAOE,MAAA,IAAI,MAPN;AAQE,MAAA,QAAQ,MARV;AASE,MAAA,WAAW,MATb;AAUE,MAAA,OAAO,EAAE,KAAKX,WAVhB;AAWE,MAAA,YAAY,EAAE,KAAKF,gBAXrB;AAYE,MAAA,KAAK,EAAE;AAAEc,QAAAA,QAAQ,EAAEf,OAAO,GAAG,UAAH,GAAgB,QAAnC;AAA6CgB,QAAAA,GAAG,EAAE,CAAlD;AAAqDC,QAAAA,IAAI,EAAE;AAA3D,OAZT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF;AA8BD,G;;;EAnE+BrB,KAAK,CAACsB,a;;AAAnBpB,I,CAEZqB,S,GAAY;AACjBT,EAAAA,GAAG,EAAEb,SAAS,CAACuB,MAAV,CAAiBC,UADL;AAEjBP,EAAAA,GAAG,EAAEjB,SAAS,CAACuB,MAFE;AAGjBR,EAAAA,KAAK,EAAEf,SAAS,CAACyB,MAHA;AAIjBT,EAAAA,MAAM,EAAEhB,SAAS,CAACyB,MAJD;AAKjBjB,EAAAA,OAAO,EAAER,SAAS,CAAC0B;AALF,C;SAFAzB,I","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class GIFV extends React.PureComponent {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    onClick: PropTypes.func,\n  };\n\n  state = {\n    loading: true,\n  };\n\n  handleLoadedData = () => {\n    this.setState({ loading: false });\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.src !== this.props.src) {\n      this.setState({ loading: true });\n    }\n  }\n\n  handleClick = e => {\n    const { onClick } = this.props;\n\n    if (onClick) {\n      e.stopPropagation();\n      onClick();\n    }\n  }\n\n  render () {\n    const { src, width, height, alt } = this.props;\n    const { loading } = this.state;\n\n    return (\n      <div className='gifv' style={{ position: 'relative' }}>\n        {loading && (\n          <canvas\n            width={width}\n            height={height}\n            role='button'\n            tabIndex='0'\n            aria-label={alt}\n            title={alt}\n            onClick={this.handleClick}\n          />\n        )}\n\n        <video\n          src={src}\n          role='button'\n          tabIndex='0'\n          aria-label={alt}\n          title={alt}\n          muted\n          loop\n          autoPlay\n          playsInline\n          onClick={this.handleClick}\n          onLoadedData={this.handleLoadedData}\n          style={{ position: loading ? 'absolute' : 'static', top: 0, left: 0 }}\n        />\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}