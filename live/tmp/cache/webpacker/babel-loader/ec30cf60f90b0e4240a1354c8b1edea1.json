{"ast":null,"code":"import { connect } from 'react-redux';\nimport ConversationsList from '../components/conversations_list';\nimport { expandConversations } from '../../../actions/conversations';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    conversations: state.getIn(['conversations', 'items']),\n    isLoading: state.getIn(['conversations', 'isLoading'], true),\n    hasMore: state.getIn(['conversations', 'hasMore'], false)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onLoadMore: function onLoadMore(maxId) {\n      return dispatch(expandConversations({\n        maxId\n      }));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConversationsList);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/direct_timeline/containers/conversations_list_container.js"],"names":["connect","ConversationsList","expandConversations","mapStateToProps","state","conversations","getIn","isLoading","hasMore","mapDispatchToProps","dispatch","onLoadMore","maxId"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,SAASC,mBAAT,QAAoC,gCAApC;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,aAAa,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,OAAlB,CAAZ,CADiB;AAEhCC,IAAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,WAAlB,CAAZ,EAA4C,IAA5C,CAFqB;AAGhCE,IAAAA,OAAO,EAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,SAAlB,CAAZ,EAA0C,KAA1C;AAHuB,GAAL;AAAA,CAA7B;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCC,IAAAA,UAAU,EAAE,oBAAAC,KAAK;AAAA,aAAIF,QAAQ,CAACR,mBAAmB,CAAC;AAAEU,QAAAA;AAAF,OAAD,CAApB,CAAZ;AAAA;AADqB,GAAL;AAAA,CAAnC;;AAIA,eAAeZ,OAAO,CAACG,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,iBAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport ConversationsList from '../components/conversations_list';\nimport { expandConversations } from '../../../actions/conversations';\n\nconst mapStateToProps = state => ({\n  conversations: state.getIn(['conversations', 'items']),\n  isLoading: state.getIn(['conversations', 'isLoading'], true),\n  hasMore: state.getIn(['conversations', 'hasMore'], false),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onLoadMore: maxId => dispatch(expandConversations({ maxId })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ConversationsList);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}