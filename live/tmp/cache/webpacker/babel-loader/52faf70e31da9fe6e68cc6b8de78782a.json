{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Account from './components/account';\nimport Search from './components/search';\nimport EditListForm from './components/edit_list_form';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n    searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onInitialize: function onInitialize(listId) {\n      return dispatch(setupListEditor(listId));\n    },\n    onClear: function onClear() {\n      return dispatch(clearListSuggestions());\n    },\n    onReset: function onReset() {\n      return dispatch(resetListEditor());\n    }\n  };\n};\n\nvar ListEditor = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ListEditor, _ImmutablePureCompone);\n\n  function ListEditor() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = ListEditor.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        onInitialize = _this$props.onInitialize,\n        listId = _this$props.listId;\n    onInitialize(listId);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var onReset = this.props.onReset;\n    onReset();\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props2 = this.props,\n        accountIds = _this$props2.accountIds,\n        searchAccountIds = _this$props2.searchAccountIds,\n        onClear = _this$props2.onClear;\n    var showSearch = searchAccountIds.size > 0;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal list-editor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EditListForm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Search, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drawer__pager\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drawer__inner list-editor__accounts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, accountIds.map(function (accountId) {\n      return /*#__PURE__*/React.createElement(Account, {\n        key: accountId,\n        accountId: accountId,\n        added: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 42\n        }\n      });\n    })), showSearch && /*#__PURE__*/React.createElement(\"div\", {\n      role: \"button\",\n      tabIndex: \"-1\",\n      className: \"drawer__backdrop\",\n      onClick: onClear,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Motion, {\n      defaultStyle: {\n        x: -100\n      },\n      style: {\n        x: spring(showSearch ? 0 : -100, {\n          stiffness: 210,\n          damping: 20\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, function (_ref) {\n      var x = _ref.x;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drawer__inner backdrop\",\n        style: {\n          transform: x === 0 ? null : \"translateX(\" + x + \"%)\",\n          visibility: x === -100 ? 'hidden' : 'visible'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }\n      }, searchAccountIds.map(function (accountId) {\n        return /*#__PURE__*/React.createElement(Account, {\n          key: accountId,\n          accountId: accountId,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 52\n          }\n        });\n      }));\n    })));\n  };\n\n  return ListEditor;\n}(ImmutablePureComponent), _class2.propTypes = {\n  listId: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired,\n  onInitialize: PropTypes.func.isRequired,\n  onClear: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired,\n  accountIds: ImmutablePropTypes.list.isRequired,\n  searchAccountIds: ImmutablePropTypes.list.isRequired\n}, _temp)) || _class) || _class);\nexport { ListEditor as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/index.js"],"names":["React","PropTypes","ImmutablePropTypes","connect","ImmutablePureComponent","injectIntl","setupListEditor","clearListSuggestions","resetListEditor","Account","Search","EditListForm","Motion","spring","mapStateToProps","state","accountIds","getIn","searchAccountIds","mapDispatchToProps","dispatch","onInitialize","listId","onClear","onReset","ListEditor","componentDidMount","props","componentWillUnmount","render","showSearch","size","map","accountId","x","stiffness","damping","transform","visibility","propTypes","string","isRequired","onClose","func","intl","object","list"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { injectIntl } from 'react-intl';\nimport { setupListEditor, clearListSuggestions, resetListEditor } from '../../actions/lists';\nimport Account from './components/account';\nimport Search from './components/search';\nimport EditListForm from './components/edit_list_form';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['listEditor', 'accounts', 'items']),\n  searchAccountIds: state.getIn(['listEditor', 'suggestions', 'items']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onInitialize: listId => dispatch(setupListEditor(listId)),\n  onClear: () => dispatch(clearListSuggestions()),\n  onReset: () => dispatch(resetListEditor()),\n});\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass ListEditor extends ImmutablePureComponent {\n\n  static propTypes = {\n    listId: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    onInitialize: PropTypes.func.isRequired,\n    onClear: PropTypes.func.isRequired,\n    onReset: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list.isRequired,\n    searchAccountIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  componentDidMount () {\n    const { onInitialize, listId } = this.props;\n    onInitialize(listId);\n  }\n\n  componentWillUnmount () {\n    const { onReset } = this.props;\n    onReset();\n  }\n\n  render () {\n    const { accountIds, searchAccountIds, onClear } = this.props;\n    const showSearch = searchAccountIds.size > 0;\n\n    return (\n      <div className='modal-root__modal list-editor'>\n        <EditListForm />\n\n        <Search />\n\n        <div className='drawer__pager'>\n          <div className='drawer__inner list-editor__accounts'>\n            {accountIds.map(accountId => <Account key={accountId} accountId={accountId} added />)}\n          </div>\n\n          {showSearch && <div role='button' tabIndex='-1' className='drawer__backdrop' onClick={onClear} />}\n\n          <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n            {({ x }) => (\n              <div className='drawer__inner backdrop' style={{ transform: x === 0 ? null : `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                {searchAccountIds.map(accountId => <Account key={accountId} accountId={accountId} />)}\n              </div>\n            )}\n          </Motion>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}