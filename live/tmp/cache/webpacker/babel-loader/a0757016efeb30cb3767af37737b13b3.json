{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/emoji_picker_dropdown.js\",\n    _this = this,\n    _class,\n    _class2,\n    _temp,\n    _class3,\n    _class4,\n    _temp2;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { EmojiPicker as EmojiPickerAsync } from '../../ui/util/async-components';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { buildCustomEmojis, categoriesFromEmojis } from '../../emoji/emoji';\nimport { assetHost } from 'mastodon/utils/config';\nvar messages = defineMessages({\n  emoji: {\n    \"id\": \"emoji_button.label\",\n    \"defaultMessage\": \"Insert emoji\"\n  },\n  emoji_search: {\n    \"id\": \"emoji_button.search\",\n    \"defaultMessage\": \"Search...\"\n  },\n  custom: {\n    \"id\": \"emoji_button.custom\",\n    \"defaultMessage\": \"Custom\"\n  },\n  recent: {\n    \"id\": \"emoji_button.recent\",\n    \"defaultMessage\": \"Frequently used\"\n  },\n  search_results: {\n    \"id\": \"emoji_button.search_results\",\n    \"defaultMessage\": \"Search results\"\n  },\n  people: {\n    \"id\": \"emoji_button.people\",\n    \"defaultMessage\": \"People\"\n  },\n  nature: {\n    \"id\": \"emoji_button.nature\",\n    \"defaultMessage\": \"Nature\"\n  },\n  food: {\n    \"id\": \"emoji_button.food\",\n    \"defaultMessage\": \"Food & Drink\"\n  },\n  activity: {\n    \"id\": \"emoji_button.activity\",\n    \"defaultMessage\": \"Activity\"\n  },\n  travel: {\n    \"id\": \"emoji_button.travel\",\n    \"defaultMessage\": \"Travel & Places\"\n  },\n  objects: {\n    \"id\": \"emoji_button.objects\",\n    \"defaultMessage\": \"Objects\"\n  },\n  symbols: {\n    \"id\": \"emoji_button.symbols\",\n    \"defaultMessage\": \"Symbols\"\n  },\n  flags: {\n    \"id\": \"emoji_button.flags\",\n    \"defaultMessage\": \"Flags\"\n  }\n});\nvar EmojiPicker, Emoji; // load asynchronously\n\nvar listenerOptions = supportsPassiveEvents ? {\n  passive: true\n} : false;\n\nvar backgroundImageFn = function backgroundImageFn() {\n  return assetHost + \"/emoji/sheet_13.png\";\n};\n\nvar notFoundFn = function notFoundFn() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-mart-no-results\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Emoji, {\n    emoji: \"sleuth_or_spy\",\n    set: \"twitter\",\n    size: 32,\n    sheetSize: 32,\n    backgroundImageFn: backgroundImageFn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"emoji-mart-no-results-label\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"emoji_button.not_found\",\n    defaultMessage: \"No matching emojis found\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  })));\n};\n\nvar ModifierPickerMenu = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ModifierPickerMenu, _React$PureComponent);\n\n  function ModifierPickerMenu() {\n    var _this2;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this2.handleClick = function (e) {\n      _this2.props.onSelect(e.currentTarget.getAttribute('data-index') * 1);\n    };\n\n    _this2.handleDocumentClick = function (e) {\n      if (_this2.node && !_this2.node.contains(e.target)) {\n        _this2.props.onClose();\n      }\n    };\n\n    _this2.setRef = function (c) {\n      _this2.node = c;\n    };\n\n    return _this2;\n  }\n\n  var _proto = ModifierPickerMenu.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.active) {\n      this.attachListeners();\n    } else {\n      this.removeListeners();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removeListeners();\n  };\n\n  _proto.attachListeners = function attachListeners() {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  };\n\n  _proto.removeListeners = function removeListeners() {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  };\n\n  _proto.render = function render() {\n    var active = this.props.active;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emoji-picker-dropdown__modifiers__menu\",\n      style: {\n        display: active ? 'block' : 'none'\n      },\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 1,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 2,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 3,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 4,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 5,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 59\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      \"data-index\": 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: 6,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 59\n      }\n    })));\n  };\n\n  return ModifierPickerMenu;\n}(React.PureComponent);\n\nModifierPickerMenu.propTypes = {\n  active: PropTypes.bool,\n  onSelect: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired\n};\n\nvar ModifierPicker = /*#__PURE__*/function (_React$PureComponent2) {\n  _inheritsLoose(ModifierPicker, _React$PureComponent2);\n\n  function ModifierPicker() {\n    var _this3;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _React$PureComponent2.call.apply(_React$PureComponent2, [this].concat(args)) || this;\n\n    _this3.handleClick = function () {\n      if (_this3.props.active) {\n        _this3.props.onClose();\n      } else {\n        _this3.props.onOpen();\n      }\n    };\n\n    _this3.handleSelect = function (modifier) {\n      _this3.props.onChange(modifier);\n\n      _this3.props.onClose();\n    };\n\n    return _this3;\n  }\n\n  var _proto2 = ModifierPicker.prototype;\n\n  _proto2.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        modifier = _this$props.modifier;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emoji-picker-dropdown__modifiers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Emoji, {\n      emoji: \"fist\",\n      set: \"twitter\",\n      size: 22,\n      sheetSize: 32,\n      skin: modifier,\n      onClick: this.handleClick,\n      backgroundImageFn: backgroundImageFn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ModifierPickerMenu, {\n      active: active,\n      onSelect: this.handleSelect,\n      onClose: this.props.onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return ModifierPicker;\n}(React.PureComponent);\n\nModifierPicker.propTypes = {\n  active: PropTypes.bool,\n  modifier: PropTypes.number,\n  onChange: PropTypes.func,\n  onClose: PropTypes.func,\n  onOpen: PropTypes.func\n};\n\nvar EmojiPickerMenu = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent3) {\n  _inheritsLoose(EmojiPickerMenu, _React$PureComponent3);\n\n  function EmojiPickerMenu() {\n    var _this4;\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    _this4 = _React$PureComponent3.call.apply(_React$PureComponent3, [this].concat(args)) || this;\n    _this4.state = {\n      modifierOpen: false,\n      placement: null\n    };\n\n    _this4.handleDocumentClick = function (e) {\n      if (_this4.node && !_this4.node.contains(e.target)) {\n        _this4.props.onClose();\n      }\n    };\n\n    _this4.setRef = function (c) {\n      _this4.node = c;\n    };\n\n    _this4.getI18n = function () {\n      var intl = _this4.props.intl;\n      return {\n        search: intl.formatMessage(messages.emoji_search),\n        categories: {\n          search: intl.formatMessage(messages.search_results),\n          recent: intl.formatMessage(messages.recent),\n          people: intl.formatMessage(messages.people),\n          nature: intl.formatMessage(messages.nature),\n          foods: intl.formatMessage(messages.food),\n          activity: intl.formatMessage(messages.activity),\n          places: intl.formatMessage(messages.travel),\n          objects: intl.formatMessage(messages.objects),\n          symbols: intl.formatMessage(messages.symbols),\n          flags: intl.formatMessage(messages.flags),\n          custom: intl.formatMessage(messages.custom)\n        }\n      };\n    };\n\n    _this4.handleClick = function (emoji, event) {\n      if (!emoji.native) {\n        emoji.native = emoji.colons;\n      }\n\n      if (!(event.ctrlKey || event.metaKey)) {\n        _this4.props.onClose();\n      }\n\n      _this4.props.onPick(emoji);\n    };\n\n    _this4.handleModifierOpen = function () {\n      _this4.setState({\n        modifierOpen: true\n      });\n    };\n\n    _this4.handleModifierClose = function () {\n      _this4.setState({\n        modifierOpen: false\n      });\n    };\n\n    _this4.handleModifierChange = function (modifier) {\n      _this4.props.onSkinTone(modifier);\n    };\n\n    return _this4;\n  }\n\n  var _proto3 = EmojiPickerMenu.prototype;\n\n  _proto3.componentDidMount = function componentDidMount() {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  };\n\n  _proto3.componentWillUnmount = function componentWillUnmount() {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  };\n\n  _proto3.render = function render() {\n    var _this$props2 = this.props,\n        loading = _this$props2.loading,\n        style = _this$props2.style,\n        intl = _this$props2.intl,\n        custom_emojis = _this$props2.custom_emojis,\n        skinTone = _this$props2.skinTone,\n        frequentlyUsedEmojis = _this$props2.frequentlyUsedEmojis;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: 299\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var title = intl.formatMessage(messages.emoji);\n    var modifierOpen = this.state.modifierOpen;\n    var categoriesSort = ['recent', 'people', 'nature', 'foods', 'activity', 'places', 'objects', 'symbols', 'flags'];\n    categoriesSort.splice.apply(categoriesSort, [1, 0].concat(Array.from(categoriesFromEmojis(custom_emojis)).sort()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('emoji-picker-dropdown__menu', {\n        selecting: modifierOpen\n      }),\n      style: style,\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EmojiPicker, {\n      perLine: 8,\n      emojiSize: 22,\n      sheetSize: 32,\n      custom: buildCustomEmojis(custom_emojis),\n      color: \"\",\n      emoji: \"\",\n      set: \"twitter\",\n      title: title,\n      i18n: this.getI18n(),\n      onClick: this.handleClick,\n      include: categoriesSort,\n      recent: frequentlyUsedEmojis,\n      skin: skinTone,\n      showPreview: false,\n      showSkinTones: false,\n      backgroundImageFn: backgroundImageFn,\n      notFound: notFoundFn,\n      autoFocus: true,\n      emojiTooltip: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ModifierPicker, {\n      active: modifierOpen,\n      modifier: skinTone,\n      onOpen: this.handleModifierOpen,\n      onClose: this.handleModifierClose,\n      onChange: this.handleModifierChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return EmojiPickerMenu;\n}(React.PureComponent), _class2.propTypes = {\n  custom_emojis: ImmutablePropTypes.list,\n  frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n  loading: PropTypes.bool,\n  onClose: PropTypes.func.isRequired,\n  onPick: PropTypes.func.isRequired,\n  style: PropTypes.object,\n  placement: PropTypes.string,\n  arrowOffsetLeft: PropTypes.string,\n  arrowOffsetTop: PropTypes.string,\n  intl: PropTypes.object.isRequired,\n  skinTone: PropTypes.number.isRequired,\n  onSkinTone: PropTypes.func.isRequired\n}, _class2.defaultProps = {\n  style: {},\n  loading: true,\n  frequentlyUsedEmojis: []\n}, _temp)) || _class;\n\nvar EmojiPickerDropdown = injectIntl(_class3 = (_temp2 = _class4 = /*#__PURE__*/function (_React$PureComponent4) {\n  _inheritsLoose(EmojiPickerDropdown, _React$PureComponent4);\n\n  function EmojiPickerDropdown() {\n    var _this5;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    _this5 = _React$PureComponent4.call.apply(_React$PureComponent4, [this].concat(args)) || this;\n    _this5.state = {\n      active: false,\n      loading: false\n    };\n\n    _this5.setRef = function (c) {\n      _this5.dropdown = c;\n    };\n\n    _this5.onShowDropdown = function (_ref) {\n      var target = _ref.target;\n\n      _this5.setState({\n        active: true\n      });\n\n      if (!EmojiPicker) {\n        _this5.setState({\n          loading: true\n        });\n\n        EmojiPickerAsync().then(function (EmojiMart) {\n          EmojiPicker = EmojiMart.Picker;\n          Emoji = EmojiMart.Emoji;\n\n          _this5.setState({\n            loading: false\n          });\n        }).catch(function () {\n          _this5.setState({\n            loading: false,\n            active: false\n          });\n        });\n      }\n\n      var _target$getBoundingCl = target.getBoundingClientRect(),\n          top = _target$getBoundingCl.top;\n\n      _this5.setState({\n        placement: top * 2 < innerHeight ? 'bottom' : 'top'\n      });\n    };\n\n    _this5.onHideDropdown = function () {\n      _this5.setState({\n        active: false\n      });\n    };\n\n    _this5.onToggle = function (e) {\n      if (!_this5.state.loading && (!e.key || e.key === 'Enter')) {\n        if (_this5.state.active) {\n          _this5.onHideDropdown();\n        } else {\n          _this5.onShowDropdown(e);\n        }\n      }\n    };\n\n    _this5.handleKeyDown = function (e) {\n      if (e.key === 'Escape') {\n        _this5.onHideDropdown();\n      }\n    };\n\n    _this5.setTargetRef = function (c) {\n      _this5.target = c;\n    };\n\n    _this5.findTarget = function () {\n      return _this5.target;\n    };\n\n    return _this5;\n  }\n\n  var _proto4 = EmojiPickerDropdown.prototype;\n\n  _proto4.render = function render() {\n    var _this$props3 = this.props,\n        intl = _this$props3.intl,\n        onPickEmoji = _this$props3.onPickEmoji,\n        onSkinTone = _this$props3.onSkinTone,\n        skinTone = _this$props3.skinTone,\n        frequentlyUsedEmojis = _this$props3.frequentlyUsedEmojis,\n        button = _this$props3.button;\n    var title = intl.formatMessage(messages.emoji);\n    var _this$state = this.state,\n        active = _this$state.active,\n        loading = _this$state.loading,\n        placement = _this$state.placement;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"emoji-picker-dropdown\",\n      onKeyDown: this.handleKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setTargetRef,\n      className: \"emoji-button\",\n      title: title,\n      \"aria-label\": title,\n      \"aria-expanded\": active,\n      role: \"button\",\n      onClick: this.onToggle,\n      onKeyDown: this.onToggle,\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }\n    }, button || /*#__PURE__*/React.createElement(\"img\", {\n      className: classNames('emojione', {\n        'pulse-loading': active && loading\n      }),\n      alt: \"\\uD83D\\uDE42\",\n      src: assetHost + \"/emoji/1f602.svg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 22\n      }\n    })), /*#__PURE__*/React.createElement(Overlay, {\n      show: active,\n      placement: placement,\n      target: this.findTarget,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(EmojiPickerMenu, {\n      custom_emojis: this.props.custom_emojis,\n      loading: loading,\n      onClose: this.onHideDropdown,\n      onPick: onPickEmoji,\n      onSkinTone: onSkinTone,\n      skinTone: skinTone,\n      frequentlyUsedEmojis: frequentlyUsedEmojis,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return EmojiPickerDropdown;\n}(React.PureComponent), _class4.propTypes = {\n  custom_emojis: ImmutablePropTypes.list,\n  frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n  intl: PropTypes.object.isRequired,\n  onPickEmoji: PropTypes.func.isRequired,\n  onSkinTone: PropTypes.func.isRequired,\n  skinTone: PropTypes.number.isRequired,\n  button: PropTypes.node\n}, _temp2)) || _class3;\n\nexport { EmojiPickerDropdown as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/emoji_picker_dropdown.js"],"names":["React","PropTypes","defineMessages","injectIntl","FormattedMessage","EmojiPicker","EmojiPickerAsync","Overlay","classNames","ImmutablePropTypes","supportsPassiveEvents","buildCustomEmojis","categoriesFromEmojis","assetHost","messages","emoji","emoji_search","custom","recent","search_results","people","nature","food","activity","travel","objects","symbols","flags","Emoji","listenerOptions","passive","backgroundImageFn","notFoundFn","ModifierPickerMenu","handleClick","e","props","onSelect","currentTarget","getAttribute","handleDocumentClick","node","contains","target","onClose","setRef","c","componentWillReceiveProps","nextProps","active","attachListeners","removeListeners","componentWillUnmount","document","addEventListener","removeEventListener","render","display","PureComponent","propTypes","bool","func","isRequired","ModifierPicker","onOpen","handleSelect","modifier","onChange","number","EmojiPickerMenu","state","modifierOpen","placement","getI18n","intl","search","formatMessage","categories","foods","places","event","native","colons","ctrlKey","metaKey","onPick","handleModifierOpen","setState","handleModifierClose","handleModifierChange","onSkinTone","componentDidMount","loading","style","custom_emojis","skinTone","frequentlyUsedEmojis","width","title","categoriesSort","splice","Array","from","sort","selecting","list","arrayOf","string","object","arrowOffsetLeft","arrowOffsetTop","defaultProps","EmojiPickerDropdown","dropdown","onShowDropdown","then","EmojiMart","Picker","catch","getBoundingClientRect","top","innerHeight","onHideDropdown","onToggle","key","handleKeyDown","setTargetRef","findTarget","onPickEmoji","button"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,gBAArC,QAA6D,YAA7D;AACA,SAASC,WAAW,IAAIC,gBAAxB,QAAgD,gCAAhD;AACA,OAAOC,OAAP,MAAoB,4BAApB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,mBAAxD;AACA,SAASC,SAAT,QAA0B,uBAA1B;AAEA,IAAMC,QAAQ,GAAGZ,cAAc,CAAC;AAC9Ba,EAAAA,KAAK;AAAA;AAAA;AAAA,GADyB;AAE9BC,EAAAA,YAAY;AAAA;AAAA;AAAA,GAFkB;AAG9BC,EAAAA,MAAM;AAAA;AAAA;AAAA,GAHwB;AAI9BC,EAAAA,MAAM;AAAA;AAAA;AAAA,GAJwB;AAK9BC,EAAAA,cAAc;AAAA;AAAA;AAAA,GALgB;AAM9BC,EAAAA,MAAM;AAAA;AAAA;AAAA,GANwB;AAO9BC,EAAAA,MAAM;AAAA;AAAA;AAAA,GAPwB;AAQ9BC,EAAAA,IAAI;AAAA;AAAA;AAAA,GAR0B;AAS9BC,EAAAA,QAAQ;AAAA;AAAA;AAAA,GATsB;AAU9BC,EAAAA,MAAM;AAAA;AAAA;AAAA,GAVwB;AAW9BC,EAAAA,OAAO;AAAA;AAAA;AAAA,GAXuB;AAY9BC,EAAAA,OAAO;AAAA;AAAA;AAAA,GAZuB;AAa9BC,EAAAA,KAAK;AAAA;AAAA;AAAA;AAbyB,CAAD,CAA/B;AAgBA,IAAItB,WAAJ,EAAiBuB,KAAjB,C,CAAwB;;AAExB,IAAMC,eAAe,GAAGnB,qBAAqB,GAAG;AAAEoB,EAAAA,OAAO,EAAE;AAAX,CAAH,GAAuB,KAApE;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAASlB,SAAT;AAAA,CAA1B;;AAEA,IAAMmB,UAAU,GAAG,SAAbA,UAAa;AAAA,sBACjB;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,GAAG,EAAC,SAFN;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,SAAS,EAAE,EAJb;AAKE,IAAA,iBAAiB,EAAED,iBALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eASE;AAAK,IAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,wBAArB;AAA8C,IAAA,cAAc,EAAC,0BAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,CADiB;AAAA,CAAnB;;IAgBME,kB;;;;;;;;;;;;WAQJC,W,GAAc,UAAAC,CAAC,EAAI;AACjB,aAAKC,KAAL,CAAWC,QAAX,CAAoBF,CAAC,CAACG,aAAF,CAAgBC,YAAhB,CAA6B,YAA7B,IAA6C,CAAjE;AACD,K;;WAcDC,mB,GAAsB,UAAAL,CAAC,EAAI;AACzB,UAAI,OAAKM,IAAL,IAAa,CAAC,OAAKA,IAAL,CAAUC,QAAV,CAAmBP,CAAC,CAACQ,MAArB,CAAlB,EAAgD;AAC9C,eAAKP,KAAL,CAAWQ,OAAX;AACD;AACF,K;;WAYDC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,aAAKL,IAAL,GAAYK,CAAZ;AACD,K;;;;;;;SA9BDC,yB,GAAA,mCAA2BC,SAA3B,EAAsC;AACpC,QAAIA,SAAS,CAACC,MAAd,EAAsB;AACpB,WAAKC,eAAL;AACD,KAFD,MAEO;AACL,WAAKC,eAAL;AACD;AACF,G;;SAEDC,oB,GAAA,gCAAwB;AACtB,SAAKD,eAAL;AACD,G;;SAQDD,e,GAAA,2BAAmB;AACjBG,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKd,mBAAxC,EAA6D,KAA7D;AACAa,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKd,mBAA3C,EAAgEX,eAAhE;AACD,G;;SAEDsB,e,GAAA,2BAAmB;AACjBE,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKf,mBAA3C,EAAgE,KAAhE;AACAa,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,UAA7B,EAAyC,KAAKf,mBAA9C,EAAmEX,eAAnE;AACD,G;;SAMD2B,M,GAAA,kBAAU;AACR,QAAQP,MAAR,GAAmB,KAAKb,KAAxB,CAAQa,MAAR;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAwD,MAAA,KAAK,EAAE;AAAEQ,QAAAA,OAAO,EAAER,MAAM,GAAG,OAAH,GAAa;AAA9B,OAA/D;AAAuG,MAAA,GAAG,EAAE,KAAKJ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAE,KAAKX,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CADF,eAEE;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CAFF,eAGE;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CAHF,eAIE;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CAJF,eAKE;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CALF,eAME;AAAQ,MAAA,OAAO,EAAE,KAAKG,WAAtB;AAAmC,oBAAY,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkD,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAE,CAAjE;AAAoE,MAAA,iBAAiB,EAAEH,iBAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAlD,CANF,CADF;AAUD,G;;;EAzD8B/B,KAAK,CAAC0D,a;;AAAjCzB,kB,CAEG0B,S,GAAY;AACjBV,EAAAA,MAAM,EAAEhD,SAAS,CAAC2D,IADD;AAEjBvB,EAAAA,QAAQ,EAAEpC,SAAS,CAAC4D,IAAV,CAAeC,UAFR;AAGjBlB,EAAAA,OAAO,EAAE3C,SAAS,CAAC4D,IAAV,CAAeC;AAHP,C;;IA2DfC,c;;;;;;;;;;;;WAUJ7B,W,GAAc,YAAM;AAClB,UAAI,OAAKE,KAAL,CAAWa,MAAf,EAAuB;AACrB,eAAKb,KAAL,CAAWQ,OAAX;AACD,OAFD,MAEO;AACL,eAAKR,KAAL,CAAW4B,MAAX;AACD;AACF,K;;WAEDC,Y,GAAe,UAAAC,QAAQ,EAAI;AACzB,aAAK9B,KAAL,CAAW+B,QAAX,CAAoBD,QAApB;;AACA,aAAK9B,KAAL,CAAWQ,OAAX;AACD,K;;;;;;;UAEDY,M,GAAA,kBAAU;AACR,sBAA6B,KAAKpB,KAAlC;AAAA,QAAQa,MAAR,eAAQA,MAAR;AAAA,QAAgBiB,QAAhB,eAAgBA,QAAhB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAE,EAAxC;AAA4C,MAAA,SAAS,EAAE,EAAvD;AAA2D,MAAA,IAAI,EAAEA,QAAjE;AAA2E,MAAA,OAAO,EAAE,KAAKhC,WAAzF;AAAsG,MAAA,iBAAiB,EAAEH,iBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,kBAAD;AAAoB,MAAA,MAAM,EAAEkB,MAA5B;AAAoC,MAAA,QAAQ,EAAE,KAAKgB,YAAnD;AAAiE,MAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWQ,OAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD,G;;;EAhC0B5C,KAAK,CAAC0D,a;;AAA7BK,c,CAEGJ,S,GAAY;AACjBV,EAAAA,MAAM,EAAEhD,SAAS,CAAC2D,IADD;AAEjBM,EAAAA,QAAQ,EAAEjE,SAAS,CAACmE,MAFH;AAGjBD,EAAAA,QAAQ,EAAElE,SAAS,CAAC4D,IAHH;AAIjBjB,EAAAA,OAAO,EAAE3C,SAAS,CAAC4D,IAJF;AAKjBG,EAAAA,MAAM,EAAE/D,SAAS,CAAC4D;AALD,C;;IAmCfQ,e,GADLlE,U;;;;;;;;;;;WAwBCmE,K,GAAQ;AACNC,MAAAA,YAAY,EAAE,KADR;AAENC,MAAAA,SAAS,EAAE;AAFL,K;;WAKRhC,mB,GAAsB,UAAAL,CAAC,EAAI;AACzB,UAAI,OAAKM,IAAL,IAAa,CAAC,OAAKA,IAAL,CAAUC,QAAV,CAAmBP,CAAC,CAACQ,MAArB,CAAlB,EAAgD;AAC9C,eAAKP,KAAL,CAAWQ,OAAX;AACD;AACF,K;;WAYDC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,aAAKL,IAAL,GAAYK,CAAZ;AACD,K;;WAED2B,O,GAAU,YAAM;AACd,UAAQC,IAAR,GAAiB,OAAKtC,KAAtB,CAAQsC,IAAR;AAEA,aAAO;AACLC,QAAAA,MAAM,EAAED,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACE,YAA5B,CADH;AAEL6D,QAAAA,UAAU,EAAE;AACVF,UAAAA,MAAM,EAAED,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACK,cAA5B,CADE;AAEVD,UAAAA,MAAM,EAAEwD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACI,MAA5B,CAFE;AAGVE,UAAAA,MAAM,EAAEsD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACM,MAA5B,CAHE;AAIVC,UAAAA,MAAM,EAAEqD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACO,MAA5B,CAJE;AAKVyD,UAAAA,KAAK,EAAEJ,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACQ,IAA5B,CALG;AAMVC,UAAAA,QAAQ,EAAEmD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACS,QAA5B,CANA;AAOVwD,UAAAA,MAAM,EAAEL,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACU,MAA5B,CAPE;AAQVC,UAAAA,OAAO,EAAEiD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACW,OAA5B,CARC;AASVC,UAAAA,OAAO,EAAEgD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACY,OAA5B,CATC;AAUVC,UAAAA,KAAK,EAAE+C,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACa,KAA5B,CAVG;AAWVV,UAAAA,MAAM,EAAEyD,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACG,MAA5B;AAXE;AAFP,OAAP;AAgBD,K;;WAEDiB,W,GAAc,UAACnB,KAAD,EAAQiE,KAAR,EAAkB;AAC9B,UAAI,CAACjE,KAAK,CAACkE,MAAX,EAAmB;AACjBlE,QAAAA,KAAK,CAACkE,MAAN,GAAelE,KAAK,CAACmE,MAArB;AACD;;AACD,UAAI,EAAEF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACI,OAAzB,CAAJ,EAAuC;AACrC,eAAKhD,KAAL,CAAWQ,OAAX;AACD;;AACD,aAAKR,KAAL,CAAWiD,MAAX,CAAkBtE,KAAlB;AACD,K;;WAEDuE,kB,GAAqB,YAAM;AACzB,aAAKC,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,K;;WAEDiB,mB,GAAsB,YAAM;AAC1B,aAAKD,QAAL,CAAc;AAAEhB,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD,K;;WAEDkB,oB,GAAuB,UAAAvB,QAAQ,EAAI;AACjC,aAAK9B,KAAL,CAAWsD,UAAX,CAAsBxB,QAAtB;AACD,K;;;;;;;UAvDDyB,iB,GAAA,6BAAqB;AACnBtC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmC,KAAKd,mBAAxC,EAA6D,KAA7D;AACAa,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,UAA1B,EAAsC,KAAKd,mBAA3C,EAAgEX,eAAhE;AACD,G;;UAEDuB,oB,GAAA,gCAAwB;AACtBC,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,OAA7B,EAAsC,KAAKf,mBAA3C,EAAgE,KAAhE;AACAa,IAAAA,QAAQ,CAACE,mBAAT,CAA6B,UAA7B,EAAyC,KAAKf,mBAA9C,EAAmEX,eAAnE;AACD,G;;UAiDD2B,M,GAAA,kBAAU;AACR,uBAAgF,KAAKpB,KAArF;AAAA,QAAQwD,OAAR,gBAAQA,OAAR;AAAA,QAAiBC,KAAjB,gBAAiBA,KAAjB;AAAA,QAAwBnB,IAAxB,gBAAwBA,IAAxB;AAAA,QAA8BoB,aAA9B,gBAA8BA,aAA9B;AAAA,QAA6CC,QAA7C,gBAA6CA,QAA7C;AAAA,QAAuDC,oBAAvD,gBAAuDA,oBAAvD;;AAEA,QAAIJ,OAAJ,EAAa;AACX,0BAAO;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAMC,KAAK,GAAGxB,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACC,KAA5B,CAAd;AAEA,QAAQwD,YAAR,GAAyB,KAAKD,KAA9B,CAAQC,YAAR;AAEA,QAAM4B,cAAc,GAAG,CACrB,QADqB,EAErB,QAFqB,EAGrB,QAHqB,EAIrB,OAJqB,EAKrB,UALqB,EAMrB,QANqB,EAOrB,SAPqB,EAQrB,SARqB,EASrB,OATqB,CAAvB;AAYAA,IAAAA,cAAc,CAACC,MAAf,OAAAD,cAAc,GAAQ,CAAR,EAAW,CAAX,SAAiBE,KAAK,CAACC,IAAN,CAAW1F,oBAAoB,CAACkF,aAAD,CAA/B,EAAgDS,IAAhD,EAAjB,EAAd;AAEA,wBACE;AAAK,MAAA,SAAS,EAAE/F,UAAU,CAAC,6BAAD,EAAgC;AAAEgG,QAAAA,SAAS,EAAEjC;AAAb,OAAhC,CAA1B;AAAwF,MAAA,KAAK,EAAEsB,KAA/F;AAAsG,MAAA,GAAG,EAAE,KAAKhD,MAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AACE,MAAA,OAAO,EAAE,CADX;AAEE,MAAA,SAAS,EAAE,EAFb;AAGE,MAAA,SAAS,EAAE,EAHb;AAIE,MAAA,MAAM,EAAElC,iBAAiB,CAACmF,aAAD,CAJ3B;AAKE,MAAA,KAAK,EAAC,EALR;AAME,MAAA,KAAK,EAAC,EANR;AAOE,MAAA,GAAG,EAAC,SAPN;AAQE,MAAA,KAAK,EAAEI,KART;AASE,MAAA,IAAI,EAAE,KAAKzB,OAAL,EATR;AAUE,MAAA,OAAO,EAAE,KAAKvC,WAVhB;AAWE,MAAA,OAAO,EAAEiE,cAXX;AAYE,MAAA,MAAM,EAAEH,oBAZV;AAaE,MAAA,IAAI,EAAED,QAbR;AAcE,MAAA,WAAW,EAAE,KAdf;AAeE,MAAA,aAAa,EAAE,KAfjB;AAgBE,MAAA,iBAAiB,EAAEhE,iBAhBrB;AAiBE,MAAA,QAAQ,EAAEC,UAjBZ;AAkBE,MAAA,SAAS,MAlBX;AAmBE,MAAA,YAAY,MAnBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAuBE,oBAAC,cAAD;AACE,MAAA,MAAM,EAAEuC,YADV;AAEE,MAAA,QAAQ,EAAEwB,QAFZ;AAGE,MAAA,MAAM,EAAE,KAAKT,kBAHf;AAIE,MAAA,OAAO,EAAE,KAAKE,mBAJhB;AAKE,MAAA,QAAQ,EAAE,KAAKC,oBALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AAiCD,G;;;EArJ2BzF,KAAK,CAAC0D,a,WAE3BC,S,GAAY;AACjBmC,EAAAA,aAAa,EAAErF,kBAAkB,CAACgG,IADjB;AAEjBT,EAAAA,oBAAoB,EAAE/F,SAAS,CAACyG,OAAV,CAAkBzG,SAAS,CAAC0G,MAA5B,CAFL;AAGjBf,EAAAA,OAAO,EAAE3F,SAAS,CAAC2D,IAHF;AAIjBhB,EAAAA,OAAO,EAAE3C,SAAS,CAAC4D,IAAV,CAAeC,UAJP;AAKjBuB,EAAAA,MAAM,EAAEpF,SAAS,CAAC4D,IAAV,CAAeC,UALN;AAMjB+B,EAAAA,KAAK,EAAE5F,SAAS,CAAC2G,MANA;AAOjBpC,EAAAA,SAAS,EAAEvE,SAAS,CAAC0G,MAPJ;AAQjBE,EAAAA,eAAe,EAAE5G,SAAS,CAAC0G,MARV;AASjBG,EAAAA,cAAc,EAAE7G,SAAS,CAAC0G,MATT;AAUjBjC,EAAAA,IAAI,EAAEzE,SAAS,CAAC2G,MAAV,CAAiB9C,UAVN;AAWjBiC,EAAAA,QAAQ,EAAE9F,SAAS,CAACmE,MAAV,CAAiBN,UAXV;AAYjB4B,EAAAA,UAAU,EAAEzF,SAAS,CAAC4D,IAAV,CAAeC;AAZV,C,UAeZiD,Y,GAAe;AACpBlB,EAAAA,KAAK,EAAE,EADa;AAEpBD,EAAAA,OAAO,EAAE,IAFW;AAGpBI,EAAAA,oBAAoB,EAAE;AAHF,C;;IAyIlBgB,mB,GADU7G,U;;;;;;;;;;;WAadmE,K,GAAQ;AACNrB,MAAAA,MAAM,EAAE,KADF;AAEN2C,MAAAA,OAAO,EAAE;AAFH,K;;WAKR/C,M,GAAS,UAACC,CAAD,EAAO;AACd,aAAKmE,QAAL,GAAgBnE,CAAhB;AACD,K;;WAEDoE,c,GAAiB,gBAAgB;AAAA,UAAbvE,MAAa,QAAbA,MAAa;;AAC/B,aAAK4C,QAAL,CAAc;AAAEtC,QAAAA,MAAM,EAAE;AAAV,OAAd;;AAEA,UAAI,CAAC5C,WAAL,EAAkB;AAChB,eAAKkF,QAAL,CAAc;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAAd;;AAEAtF,QAAAA,gBAAgB,GAAG6G,IAAnB,CAAwB,UAAAC,SAAS,EAAI;AACnC/G,UAAAA,WAAW,GAAG+G,SAAS,CAACC,MAAxB;AACAzF,UAAAA,KAAK,GAASwF,SAAS,CAACxF,KAAxB;;AAEA,iBAAK2D,QAAL,CAAc;AAAEK,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SALD,EAKG0B,KALH,CAKS,YAAM;AACb,iBAAK/B,QAAL,CAAc;AAAEK,YAAAA,OAAO,EAAE,KAAX;AAAkB3C,YAAAA,MAAM,EAAE;AAA1B,WAAd;AACD,SAPD;AAQD;;AAED,kCAAgBN,MAAM,CAAC4E,qBAAP,EAAhB;AAAA,UAAQC,GAAR,yBAAQA,GAAR;;AACA,aAAKjC,QAAL,CAAc;AAAEf,QAAAA,SAAS,EAAEgD,GAAG,GAAG,CAAN,GAAUC,WAAV,GAAwB,QAAxB,GAAmC;AAAhD,OAAd;AACD,K;;WAEDC,c,GAAiB,YAAM;AACrB,aAAKnC,QAAL,CAAc;AAAEtC,QAAAA,MAAM,EAAE;AAAV,OAAd;AACD,K;;WAED0E,Q,GAAW,UAACxF,CAAD,EAAO;AAChB,UAAI,CAAC,OAAKmC,KAAL,CAAWsB,OAAZ,KAAwB,CAACzD,CAAC,CAACyF,GAAH,IAAUzF,CAAC,CAACyF,GAAF,KAAU,OAA5C,CAAJ,EAA0D;AACxD,YAAI,OAAKtD,KAAL,CAAWrB,MAAf,EAAuB;AACrB,iBAAKyE,cAAL;AACD,SAFD,MAEO;AACL,iBAAKR,cAAL,CAAoB/E,CAApB;AACD;AACF;AACF,K;;WAED0F,a,GAAgB,UAAA1F,CAAC,EAAI;AACnB,UAAIA,CAAC,CAACyF,GAAF,KAAU,QAAd,EAAwB;AACtB,eAAKF,cAAL;AACD;AACF,K;;WAEDI,Y,GAAe,UAAAhF,CAAC,EAAI;AAClB,aAAKH,MAAL,GAAcG,CAAd;AACD,K;;WAEDiF,U,GAAa,YAAM;AACjB,aAAO,OAAKpF,MAAZ;AACD,K;;;;;;;UAEDa,M,GAAA,kBAAU;AACR,uBAAkF,KAAKpB,KAAvF;AAAA,QAAQsC,IAAR,gBAAQA,IAAR;AAAA,QAAcsD,WAAd,gBAAcA,WAAd;AAAA,QAA2BtC,UAA3B,gBAA2BA,UAA3B;AAAA,QAAuCK,QAAvC,gBAAuCA,QAAvC;AAAA,QAAiDC,oBAAjD,gBAAiDA,oBAAjD;AAAA,QAAuEiC,MAAvE,gBAAuEA,MAAvE;AACA,QAAM/B,KAAK,GAAGxB,IAAI,CAACE,aAAL,CAAmB9D,QAAQ,CAACC,KAA5B,CAAd;AACA,sBAAuC,KAAKuD,KAA5C;AAAA,QAAQrB,MAAR,eAAQA,MAAR;AAAA,QAAgB2C,OAAhB,eAAgBA,OAAhB;AAAA,QAAyBpB,SAAzB,eAAyBA,SAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,SAAS,EAAE,KAAKqD,aAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAE,KAAKC,YAAf;AAA6B,MAAA,SAAS,EAAC,cAAvC;AAAsD,MAAA,KAAK,EAAE5B,KAA7D;AAAoE,oBAAYA,KAAhF;AAAuF,uBAAejD,MAAtG;AAA8G,MAAA,IAAI,EAAC,QAAnH;AAA4H,MAAA,OAAO,EAAE,KAAK0E,QAA1I;AAAoJ,MAAA,SAAS,EAAE,KAAKA,QAApK;AAA8K,MAAA,QAAQ,EAAE,CAAxL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,MAAM,iBAAI;AACT,MAAA,SAAS,EAAEzH,UAAU,CAAC,UAAD,EAAa;AAAE,yBAAiByC,MAAM,IAAI2C;AAA7B,OAAb,CADZ;AAET,MAAA,GAAG,EAAC,cAFK;AAGT,MAAA,GAAG,EAAK/E,SAAL,qBAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADb,CADF,eASE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEoC,MAAf;AAAuB,MAAA,SAAS,EAAEuB,SAAlC;AAA6C,MAAA,MAAM,EAAE,KAAKuD,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AACE,MAAA,aAAa,EAAE,KAAK3F,KAAL,CAAW0D,aAD5B;AAEE,MAAA,OAAO,EAAEF,OAFX;AAGE,MAAA,OAAO,EAAE,KAAK8B,cAHhB;AAIE,MAAA,MAAM,EAAEM,WAJV;AAKE,MAAA,UAAU,EAAEtC,UALd;AAME,MAAA,QAAQ,EAAEK,QANZ;AAOE,MAAA,oBAAoB,EAAEC,oBAPxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CATF,CADF;AAuBD,G;;;EAjG+BhG,KAAK,CAAC0D,a,WAE/BC,S,GAAY;AACjBmC,EAAAA,aAAa,EAAErF,kBAAkB,CAACgG,IADjB;AAEjBT,EAAAA,oBAAoB,EAAE/F,SAAS,CAACyG,OAAV,CAAkBzG,SAAS,CAAC0G,MAA5B,CAFL;AAGjBjC,EAAAA,IAAI,EAAEzE,SAAS,CAAC2G,MAAV,CAAiB9C,UAHN;AAIjBkE,EAAAA,WAAW,EAAE/H,SAAS,CAAC4D,IAAV,CAAeC,UAJX;AAKjB4B,EAAAA,UAAU,EAAEzF,SAAS,CAAC4D,IAAV,CAAeC,UALV;AAMjBiC,EAAAA,QAAQ,EAAE9F,SAAS,CAACmE,MAAV,CAAiBN,UANV;AAOjBmE,EAAAA,MAAM,EAAEhI,SAAS,CAACwC;AAPD,C;;SAFfuE,mB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { EmojiPicker as EmojiPickerAsync } from '../../ui/util/async-components';\nimport Overlay from 'react-overlays/lib/Overlay';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { buildCustomEmojis, categoriesFromEmojis } from '../../emoji/emoji';\nimport { assetHost } from 'mastodon/utils/config';\n\nconst messages = defineMessages({\n  emoji: { id: 'emoji_button.label', defaultMessage: 'Insert emoji' },\n  emoji_search: { id: 'emoji_button.search', defaultMessage: 'Search...' },\n  custom: { id: 'emoji_button.custom', defaultMessage: 'Custom' },\n  recent: { id: 'emoji_button.recent', defaultMessage: 'Frequently used' },\n  search_results: { id: 'emoji_button.search_results', defaultMessage: 'Search results' },\n  people: { id: 'emoji_button.people', defaultMessage: 'People' },\n  nature: { id: 'emoji_button.nature', defaultMessage: 'Nature' },\n  food: { id: 'emoji_button.food', defaultMessage: 'Food & Drink' },\n  activity: { id: 'emoji_button.activity', defaultMessage: 'Activity' },\n  travel: { id: 'emoji_button.travel', defaultMessage: 'Travel & Places' },\n  objects: { id: 'emoji_button.objects', defaultMessage: 'Objects' },\n  symbols: { id: 'emoji_button.symbols', defaultMessage: 'Symbols' },\n  flags: { id: 'emoji_button.flags', defaultMessage: 'Flags' },\n});\n\nlet EmojiPicker, Emoji; // load asynchronously\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nconst backgroundImageFn = () => `${assetHost}/emoji/sheet_13.png`;\n\nconst notFoundFn = () => (\n  <div className='emoji-mart-no-results'>\n    <Emoji\n      emoji='sleuth_or_spy'\n      set='twitter'\n      size={32}\n      sheetSize={32}\n      backgroundImageFn={backgroundImageFn}\n    />\n\n    <div className='emoji-mart-no-results-label'>\n      <FormattedMessage id='emoji_button.not_found' defaultMessage='No matching emojis found' />\n    </div>\n  </div>\n);\n\nclass ModifierPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  handleClick = e => {\n    this.props.onSelect(e.currentTarget.getAttribute('data-index') * 1);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.active) {\n      this.attachListeners();\n    } else {\n      this.removeListeners();\n    }\n  }\n\n  componentWillUnmount () {\n    this.removeListeners();\n  }\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  attachListeners () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  removeListeners () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  render () {\n    const { active } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers__menu' style={{ display: active ? 'block' : 'none' }} ref={this.setRef}>\n        <button onClick={this.handleClick} data-index={1}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={1} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={2}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={2} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={3}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={3} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={4}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={4} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={5}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={5} backgroundImageFn={backgroundImageFn} /></button>\n        <button onClick={this.handleClick} data-index={6}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={6} backgroundImageFn={backgroundImageFn} /></button>\n      </div>\n    );\n  }\n\n}\n\nclass ModifierPicker extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    modifier: PropTypes.number,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n  };\n\n  handleClick = () => {\n    if (this.props.active) {\n      this.props.onClose();\n    } else {\n      this.props.onOpen();\n    }\n  }\n\n  handleSelect = modifier => {\n    this.props.onChange(modifier);\n    this.props.onClose();\n  }\n\n  render () {\n    const { active, modifier } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers'>\n        <Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={modifier} onClick={this.handleClick} backgroundImageFn={backgroundImageFn} />\n        <ModifierPickerMenu active={active} onSelect={this.handleSelect} onClose={this.props.onClose} />\n      </div>\n    );\n  }\n\n}\n\n@injectIntl\nclass EmojiPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onPick: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    placement: PropTypes.string,\n    arrowOffsetLeft: PropTypes.string,\n    arrowOffsetTop: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    style: {},\n    loading: true,\n    frequentlyUsedEmojis: [],\n  };\n\n  state = {\n    modifierOpen: false,\n    placement: null,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  }\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  getI18n = () => {\n    const { intl } = this.props;\n\n    return {\n      search: intl.formatMessage(messages.emoji_search),\n      categories: {\n        search: intl.formatMessage(messages.search_results),\n        recent: intl.formatMessage(messages.recent),\n        people: intl.formatMessage(messages.people),\n        nature: intl.formatMessage(messages.nature),\n        foods: intl.formatMessage(messages.food),\n        activity: intl.formatMessage(messages.activity),\n        places: intl.formatMessage(messages.travel),\n        objects: intl.formatMessage(messages.objects),\n        symbols: intl.formatMessage(messages.symbols),\n        flags: intl.formatMessage(messages.flags),\n        custom: intl.formatMessage(messages.custom),\n      },\n    };\n  }\n\n  handleClick = (emoji, event) => {\n    if (!emoji.native) {\n      emoji.native = emoji.colons;\n    }\n    if (!(event.ctrlKey || event.metaKey)) {\n      this.props.onClose();\n    }\n    this.props.onPick(emoji);\n  }\n\n  handleModifierOpen = () => {\n    this.setState({ modifierOpen: true });\n  }\n\n  handleModifierClose = () => {\n    this.setState({ modifierOpen: false });\n  }\n\n  handleModifierChange = modifier => {\n    this.props.onSkinTone(modifier);\n  }\n\n  render () {\n    const { loading, style, intl, custom_emojis, skinTone, frequentlyUsedEmojis } = this.props;\n\n    if (loading) {\n      return <div style={{ width: 299 }} />;\n    }\n\n    const title = intl.formatMessage(messages.emoji);\n\n    const { modifierOpen } = this.state;\n\n    const categoriesSort = [\n      'recent',\n      'people',\n      'nature',\n      'foods',\n      'activity',\n      'places',\n      'objects',\n      'symbols',\n      'flags',\n    ];\n\n    categoriesSort.splice(1, 0, ...Array.from(categoriesFromEmojis(custom_emojis)).sort());\n\n    return (\n      <div className={classNames('emoji-picker-dropdown__menu', { selecting: modifierOpen })} style={style} ref={this.setRef}>\n        <EmojiPicker\n          perLine={8}\n          emojiSize={22}\n          sheetSize={32}\n          custom={buildCustomEmojis(custom_emojis)}\n          color=''\n          emoji=''\n          set='twitter'\n          title={title}\n          i18n={this.getI18n()}\n          onClick={this.handleClick}\n          include={categoriesSort}\n          recent={frequentlyUsedEmojis}\n          skin={skinTone}\n          showPreview={false}\n          showSkinTones={false}\n          backgroundImageFn={backgroundImageFn}\n          notFound={notFoundFn}\n          autoFocus\n          emojiTooltip\n        />\n\n        <ModifierPicker\n          active={modifierOpen}\n          modifier={skinTone}\n          onOpen={this.handleModifierOpen}\n          onClose={this.handleModifierClose}\n          onChange={this.handleModifierChange}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass EmojiPickerDropdown extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    button: PropTypes.node,\n  };\n\n  state = {\n    active: false,\n    loading: false,\n  };\n\n  setRef = (c) => {\n    this.dropdown = c;\n  }\n\n  onShowDropdown = ({ target }) => {\n    this.setState({ active: true });\n\n    if (!EmojiPicker) {\n      this.setState({ loading: true });\n\n      EmojiPickerAsync().then(EmojiMart => {\n        EmojiPicker = EmojiMart.Picker;\n        Emoji       = EmojiMart.Emoji;\n\n        this.setState({ loading: false });\n      }).catch(() => {\n        this.setState({ loading: false, active: false });\n      });\n    }\n\n    const { top } = target.getBoundingClientRect();\n    this.setState({ placement: top * 2 < innerHeight ? 'bottom' : 'top' });\n  }\n\n  onHideDropdown = () => {\n    this.setState({ active: false });\n  }\n\n  onToggle = (e) => {\n    if (!this.state.loading && (!e.key || e.key === 'Enter')) {\n      if (this.state.active) {\n        this.onHideDropdown();\n      } else {\n        this.onShowDropdown(e);\n      }\n    }\n  }\n\n  handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      this.onHideDropdown();\n    }\n  }\n\n  setTargetRef = c => {\n    this.target = c;\n  }\n\n  findTarget = () => {\n    return this.target;\n  }\n\n  render () {\n    const { intl, onPickEmoji, onSkinTone, skinTone, frequentlyUsedEmojis, button } = this.props;\n    const title = intl.formatMessage(messages.emoji);\n    const { active, loading, placement } = this.state;\n\n    return (\n      <div className='emoji-picker-dropdown' onKeyDown={this.handleKeyDown}>\n        <div ref={this.setTargetRef} className='emoji-button' title={title} aria-label={title} aria-expanded={active} role='button' onClick={this.onToggle} onKeyDown={this.onToggle} tabIndex={0}>\n          {button || <img\n            className={classNames('emojione', { 'pulse-loading': active && loading })}\n            alt='🙂'\n            src={`${assetHost}/emoji/1f602.svg`}\n          />}\n        </div>\n\n        <Overlay show={active} placement={placement} target={this.findTarget}>\n          <EmojiPickerMenu\n            custom_emojis={this.props.custom_emojis}\n            loading={loading}\n            onClose={this.onHideDropdown}\n            onPick={onPickEmoji}\n            onSkinTone={onSkinTone}\n            skinTone={skinTone}\n            frequentlyUsedEmojis={frequentlyUsedEmojis}\n          />\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"emoji_button.label","defaultMessage":"Insert emoji"},{"id":"emoji_button.search","defaultMessage":"Search..."},{"id":"emoji_button.custom","defaultMessage":"Custom"},{"id":"emoji_button.recent","defaultMessage":"Frequently used"},{"id":"emoji_button.search_results","defaultMessage":"Search results"},{"id":"emoji_button.people","defaultMessage":"People"},{"id":"emoji_button.nature","defaultMessage":"Nature"},{"id":"emoji_button.food","defaultMessage":"Food & Drink"},{"id":"emoji_button.activity","defaultMessage":"Activity"},{"id":"emoji_button.travel","defaultMessage":"Travel & Places"},{"id":"emoji_button.objects","defaultMessage":"Objects"},{"id":"emoji_button.symbols","defaultMessage":"Symbols"},{"id":"emoji_button.flags","defaultMessage":"Flags"},{"id":"emoji_button.not_found","defaultMessage":"No matching emojis found"}]}},"sourceType":"module"}