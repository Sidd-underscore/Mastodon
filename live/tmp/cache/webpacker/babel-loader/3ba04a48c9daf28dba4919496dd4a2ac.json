{"ast":null,"code":"import { connect } from 'react-redux';\nimport TextIconButton from '../components/text_icon_button';\nimport { changeComposeSpoilerness } from '../../../actions/compose';\nimport { injectIntl, defineMessages } from 'react-intl';\nvar messages = defineMessages({\n  marked: {\n    \"id\": \"compose_form.spoiler.marked\",\n    \"defaultMessage\": \"Text is hidden behind warning\"\n  },\n  unmarked: {\n    \"id\": \"compose_form.spoiler.unmarked\",\n    \"defaultMessage\": \"Text is not hidden\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var intl = _ref.intl;\n  return {\n    label: 'CW',\n    title: intl.formatMessage(state.getIn(['compose', 'spoiler']) ? messages.marked : messages.unmarked),\n    active: state.getIn(['compose', 'spoiler']),\n    ariaControls: 'cw-spoiler-input'\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onClick() {\n      dispatch(changeComposeSpoilerness());\n    }\n\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TextIconButton));","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/containers/spoiler_button_container.js"],"names":["connect","TextIconButton","changeComposeSpoilerness","injectIntl","defineMessages","messages","marked","unmarked","mapStateToProps","state","intl","label","title","formatMessage","getIn","active","ariaControls","mapDispatchToProps","dispatch","onClick"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,wBAAT,QAAyC,0BAAzC;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,YAA3C;AAEA,IAAMC,QAAQ,GAAGD,cAAc,CAAC;AAC9BE,EAAAA,MAAM;AAAA;AAAA;AAAA,GADwB;AAE9BC,EAAAA,QAAQ;AAAA;AAAA;AAAA;AAFsB,CAAD,CAA/B;;AAKA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,SAAsB;AAC5CC,IAAAA,KAAK,EAAE,IADqC;AAE5CC,IAAAA,KAAK,EAAEF,IAAI,CAACG,aAAL,CAAmBJ,KAAK,CAACK,KAAN,CAAY,CAAC,SAAD,EAAY,SAAZ,CAAZ,IAAsCT,QAAQ,CAACC,MAA/C,GAAwDD,QAAQ,CAACE,QAApF,CAFqC;AAG5CQ,IAAAA,MAAM,EAAEN,KAAK,CAACK,KAAN,CAAY,CAAC,SAAD,EAAY,SAAZ,CAAZ,CAHoC;AAI5CE,IAAAA,YAAY,EAAE;AAJ8B,GAAtB;AAAA,CAAxB;;AAOA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AAEtCC,IAAAA,OAAO,GAAI;AACTD,MAAAA,QAAQ,CAAChB,wBAAwB,EAAzB,CAAR;AACD;;AAJqC,GAAL;AAAA,CAAnC;;AAQA,eAAeC,UAAU,CAACH,OAAO,CAACQ,eAAD,EAAkBS,kBAAlB,CAAP,CAA6ChB,cAA7C,CAAD,CAAzB","sourcesContent":["import { connect } from 'react-redux';\nimport TextIconButton from '../components/text_icon_button';\nimport { changeComposeSpoilerness } from '../../../actions/compose';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: { id: 'compose_form.spoiler.marked', defaultMessage: 'Text is hidden behind warning' },\n  unmarked: { id: 'compose_form.spoiler.unmarked', defaultMessage: 'Text is not hidden' },\n});\n\nconst mapStateToProps = (state, { intl }) => ({\n  label: 'CW',\n  title: intl.formatMessage(state.getIn(['compose', 'spoiler']) ? messages.marked : messages.unmarked),\n  active: state.getIn(['compose', 'spoiler']),\n  ariaControls: 'cw-spoiler-input',\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSpoilerness());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TextIconButton));\n"]},"metadata":{"react-intl":{"messages":[{"id":"compose_form.spoiler.marked","defaultMessage":"Text is hidden behind warning"},{"id":"compose_form.spoiler.unmarked","defaultMessage":"Text is not hidden"}]}},"sourceType":"module"}