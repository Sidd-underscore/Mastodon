{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/picture_in_picture/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport { removePictureInPicture } from 'mastodon/actions/picture_in_picture';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _extends({}, state.get('picture_in_picture'));\n};\n\nvar PictureInPicture = (_dec = connect(mapStateToProps), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(PictureInPicture, _React$Component);\n\n  function PictureInPicture() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.handleClose = function () {\n      var dispatch = _this.props.dispatch;\n      dispatch(removePictureInPicture());\n    };\n\n    return _this;\n  }\n\n  var _proto = PictureInPicture.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        type = _this$props.type,\n        src = _this$props.src,\n        currentTime = _this$props.currentTime,\n        accountId = _this$props.accountId,\n        statusId = _this$props.statusId;\n\n    if (!currentTime) {\n      return null;\n    }\n\n    var player;\n\n    if (type === 'video') {\n      player = /*#__PURE__*/React.createElement(Video, {\n        src: src,\n        currentTime: this.props.currentTime,\n        volume: this.props.volume,\n        muted: this.props.muted,\n        autoPlay: true,\n        inline: true,\n        alwaysVisible: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      });\n    } else if (type === 'audio') {\n      player = /*#__PURE__*/React.createElement(Audio, {\n        src: src,\n        currentTime: this.props.currentTime,\n        volume: this.props.volume,\n        muted: this.props.muted,\n        poster: this.props.poster,\n        backgroundColor: this.props.backgroundColor,\n        foregroundColor: this.props.foregroundColor,\n        accentColor: this.props.accentColor,\n        autoPlay: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"picture-in-picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      accountId: accountId,\n      statusId: statusId,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), player, /*#__PURE__*/React.createElement(Footer, {\n      statusId: statusId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return PictureInPicture;\n}(React.Component), _class2.propTypes = {\n  statusId: PropTypes.string,\n  accountId: PropTypes.string,\n  type: PropTypes.string,\n  src: PropTypes.string,\n  muted: PropTypes.bool,\n  volume: PropTypes.number,\n  currentTime: PropTypes.number,\n  poster: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  foregroundColor: PropTypes.string,\n  accentColor: PropTypes.string,\n  dispatch: PropTypes.func.isRequired\n}, _temp)) || _class);\nexport { PictureInPicture as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/picture_in_picture/index.js"],"names":["React","connect","PropTypes","Video","Audio","removePictureInPicture","Header","Footer","mapStateToProps","state","get","PictureInPicture","handleClose","dispatch","props","render","type","src","currentTime","accountId","statusId","player","volume","muted","poster","backgroundColor","foregroundColor","accentColor","Component","propTypes","string","bool","number","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport { removePictureInPicture } from 'mastodon/actions/picture_in_picture';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nconst mapStateToProps = state => ({\n  ...state.get('picture_in_picture'),\n});\n\nexport default @connect(mapStateToProps)\nclass PictureInPicture extends React.Component {\n\n  static propTypes = {\n    statusId: PropTypes.string,\n    accountId: PropTypes.string,\n    type: PropTypes.string,\n    src: PropTypes.string,\n    muted: PropTypes.bool,\n    volume: PropTypes.number,\n    currentTime: PropTypes.number,\n    poster: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    foregroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleClose = () => {\n    const { dispatch } = this.props;\n    dispatch(removePictureInPicture());\n  }\n\n  render () {\n    const { type, src, currentTime, accountId, statusId } = this.props;\n\n    if (!currentTime) {\n      return null;\n    }\n\n    let player;\n\n    if (type === 'video') {\n      player = (\n        <Video\n          src={src}\n          currentTime={this.props.currentTime}\n          volume={this.props.volume}\n          muted={this.props.muted}\n          autoPlay\n          inline\n          alwaysVisible\n        />\n      );\n    } else if (type === 'audio') {\n      player = (\n        <Audio\n          src={src}\n          currentTime={this.props.currentTime}\n          volume={this.props.volume}\n          muted={this.props.muted}\n          poster={this.props.poster}\n          backgroundColor={this.props.backgroundColor}\n          foregroundColor={this.props.foregroundColor}\n          accentColor={this.props.accentColor}\n          autoPlay\n        />\n      );\n    }\n\n    return (\n      <div className='picture-in-picture'>\n        <Header accountId={accountId} statusId={statusId} onClose={this.handleClose} />\n\n        {player}\n\n        <Footer statusId={statusId} />\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}