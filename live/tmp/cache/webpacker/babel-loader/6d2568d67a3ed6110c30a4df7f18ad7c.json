{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/report_modal.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changeReportComment, changeReportForward, submitReport } from '../../../actions/reports';\nimport { expandAccountTimeline } from '../../../actions/timelines';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { makeGetAccount } from '../../../selectors';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport StatusCheckBox from '../../report/containers/status_check_box_container';\nimport { OrderedSet } from 'immutable';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Button from '../../../components/button';\nimport Toggle from 'react-toggle';\nimport IconButton from '../../../components/icon_button';\nvar messages = defineMessages({\n  close: {\n    \"id\": \"lightbox.close\",\n    \"defaultMessage\": \"Close\"\n  },\n  placeholder: {\n    \"id\": \"report.placeholder\",\n    \"defaultMessage\": \"Additional comments\"\n  },\n  submit: {\n    \"id\": \"report.submit\",\n    \"defaultMessage\": \"Submit\"\n  }\n});\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getAccount = makeGetAccount();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    var accountId = state.getIn(['reports', 'new', 'account_id']);\n    return {\n      isSubmitting: state.getIn(['reports', 'new', 'isSubmitting']),\n      account: getAccount(state, accountId),\n      comment: state.getIn(['reports', 'new', 'comment']),\n      forward: state.getIn(['reports', 'new', 'forward']),\n      statusIds: OrderedSet(state.getIn(['timelines', \"account:\" + accountId + \":with_replies\", 'items'])).union(state.getIn(['reports', 'new', 'status_ids']))\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar ReportModal = (_dec = connect(makeMapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ReportModal, _ImmutablePureCompone);\n\n  function ReportModal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleCommentChange = function (e) {\n      _this.props.dispatch(changeReportComment(e.target.value));\n    };\n\n    _this.handleForwardChange = function (e) {\n      _this.props.dispatch(changeReportForward(e.target.checked));\n    };\n\n    _this.handleSubmit = function () {\n      _this.props.dispatch(submitReport());\n    };\n\n    _this.handleKeyDown = function (e) {\n      if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n        _this.handleSubmit();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = ReportModal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.props.dispatch(expandAccountTimeline(this.props.account.get('id'), {\n      withReplies: true\n    }));\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.account !== nextProps.account && nextProps.account) {\n      this.props.dispatch(expandAccountTimeline(nextProps.account.get('id'), {\n        withReplies: true\n      }));\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        account = _this$props.account,\n        comment = _this$props.comment,\n        intl = _this$props.intl,\n        statusIds = _this$props.statusIds,\n        isSubmitting = _this$props.isSubmitting,\n        forward = _this$props.forward,\n        onClose = _this$props.onClose;\n\n    if (!account) {\n      return null;\n    }\n\n    var domain = account.get('acct').split('@')[1];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal report-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"report-modal__close\",\n      title: intl.formatMessage(messages.close),\n      icon: \"times\",\n      onClick: onClose,\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"report.target\",\n      defaultMessage: \"Report {target}\",\n      values: {\n        target: /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 99\n          }\n        }, account.get('acct'))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"report.hint\",\n      defaultMessage: \"The report will be sent to your server moderators. You can provide an explanation of why you are reporting this account below:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    })), /*#__PURE__*/React.createElement(\"textarea\", {\n      className: \"setting-text light\",\n      placeholder: intl.formatMessage(messages.placeholder),\n      value: comment,\n      onChange: this.handleCommentChange,\n      onKeyDown: this.handleKeyDown,\n      disabled: isSubmitting,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }), domain && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"report.forward_hint\",\n      defaultMessage: \"The account is from another server. Send an anonymized copy of the report there as well?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 20\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"report-forward\",\n      checked: forward,\n      disabled: isSubmitting,\n      onChange: this.handleForwardChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"report-forward\",\n      className: \"setting-toggle__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"report.forward\",\n      defaultMessage: \"Forward to {target}\",\n      values: {\n        target: domain\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 85\n      }\n    })))), /*#__PURE__*/React.createElement(Button, {\n      disabled: isSubmitting,\n      text: intl.formatMessage(messages.submit),\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__statuses\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, statusIds.map(function (statusId) {\n      return /*#__PURE__*/React.createElement(StatusCheckBox, {\n        id: statusId,\n        key: statusId,\n        disabled: isSubmitting,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 42\n        }\n      });\n    })))));\n  };\n\n  return ReportModal;\n}(ImmutablePureComponent), _class2.propTypes = {\n  isSubmitting: PropTypes.bool,\n  account: ImmutablePropTypes.map,\n  statusIds: ImmutablePropTypes.orderedSet.isRequired,\n  comment: PropTypes.string.isRequired,\n  forward: PropTypes.bool,\n  dispatch: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class) || _class);\nexport { ReportModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/report_modal.js"],"names":["React","connect","changeReportComment","changeReportForward","submitReport","expandAccountTimeline","PropTypes","ImmutablePropTypes","makeGetAccount","defineMessages","FormattedMessage","injectIntl","StatusCheckBox","OrderedSet","ImmutablePureComponent","Button","Toggle","IconButton","messages","close","placeholder","submit","makeMapStateToProps","getAccount","mapStateToProps","state","accountId","getIn","isSubmitting","account","comment","forward","statusIds","union","ReportModal","handleCommentChange","e","props","dispatch","target","value","handleForwardChange","checked","handleSubmit","handleKeyDown","keyCode","ctrlKey","metaKey","componentDidMount","get","withReplies","componentWillReceiveProps","nextProps","render","intl","onClose","domain","split","formatMessage","map","statusId","propTypes","bool","orderedSet","isRequired","string","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { changeReportComment, changeReportForward, submitReport } from '../../../actions/reports';\nimport { expandAccountTimeline } from '../../../actions/timelines';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { makeGetAccount } from '../../../selectors';\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\nimport StatusCheckBox from '../../report/containers/status_check_box_container';\nimport { OrderedSet } from 'immutable';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Button from '../../../components/button';\nimport Toggle from 'react-toggle';\nimport IconButton from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n  placeholder: { id: 'report.placeholder', defaultMessage: 'Additional comments' },\n  submit: { id: 'report.submit', defaultMessage: 'Submit' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = state => {\n    const accountId = state.getIn(['reports', 'new', 'account_id']);\n\n    return {\n      isSubmitting: state.getIn(['reports', 'new', 'isSubmitting']),\n      account: getAccount(state, accountId),\n      comment: state.getIn(['reports', 'new', 'comment']),\n      forward: state.getIn(['reports', 'new', 'forward']),\n      statusIds: OrderedSet(state.getIn(['timelines', `account:${accountId}:with_replies`, 'items'])).union(state.getIn(['reports', 'new', 'status_ids'])),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass ReportModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    isSubmitting: PropTypes.bool,\n    account: ImmutablePropTypes.map,\n    statusIds: ImmutablePropTypes.orderedSet.isRequired,\n    comment: PropTypes.string.isRequired,\n    forward: PropTypes.bool,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleCommentChange = e => {\n    this.props.dispatch(changeReportComment(e.target.value));\n  }\n\n  handleForwardChange = e => {\n    this.props.dispatch(changeReportForward(e.target.checked));\n  }\n\n  handleSubmit = () => {\n    this.props.dispatch(submitReport());\n  }\n\n  handleKeyDown = e => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.handleSubmit();\n    }\n  }\n\n  componentDidMount () {\n    this.props.dispatch(expandAccountTimeline(this.props.account.get('id'), { withReplies: true }));\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.account !== nextProps.account && nextProps.account) {\n      this.props.dispatch(expandAccountTimeline(nextProps.account.get('id'), { withReplies: true }));\n    }\n  }\n\n  render () {\n    const { account, comment, intl, statusIds, isSubmitting, forward, onClose } = this.props;\n\n    if (!account) {\n      return null;\n    }\n\n    const domain = account.get('acct').split('@')[1];\n\n    return (\n      <div className='modal-root__modal report-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={20} />\n          <FormattedMessage id='report.target' defaultMessage='Report {target}' values={{ target: <strong>{account.get('acct')}</strong> }} />\n        </div>\n\n        <div className='report-modal__container'>\n          <div className='report-modal__comment'>\n            <p><FormattedMessage id='report.hint' defaultMessage='The report will be sent to your server moderators. You can provide an explanation of why you are reporting this account below:' /></p>\n\n            <textarea\n              className='setting-text light'\n              placeholder={intl.formatMessage(messages.placeholder)}\n              value={comment}\n              onChange={this.handleCommentChange}\n              onKeyDown={this.handleKeyDown}\n              disabled={isSubmitting}\n              autoFocus\n            />\n\n            {domain && (\n              <div>\n                <p><FormattedMessage id='report.forward_hint' defaultMessage='The account is from another server. Send an anonymized copy of the report there as well?' /></p>\n\n                <div className='setting-toggle'>\n                  <Toggle id='report-forward' checked={forward} disabled={isSubmitting} onChange={this.handleForwardChange} />\n                  <label htmlFor='report-forward' className='setting-toggle__label'><FormattedMessage id='report.forward' defaultMessage='Forward to {target}' values={{ target: domain }} /></label>\n                </div>\n              </div>\n            )}\n\n            <Button disabled={isSubmitting} text={intl.formatMessage(messages.submit)} onClick={this.handleSubmit} />\n          </div>\n\n          <div className='report-modal__statuses'>\n            <div>\n              {statusIds.map(statusId => <StatusCheckBox id={statusId} key={statusId} disabled={isSubmitting} />)}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lightbox.close","defaultMessage":"Close"},{"id":"report.placeholder","defaultMessage":"Additional comments"},{"id":"report.submit","defaultMessage":"Submit"},{"id":"report.target","defaultMessage":"Report {target}"},{"id":"report.hint","defaultMessage":"The report will be sent to your server moderators. You can provide an explanation of why you are reporting this account below:"},{"id":"report.forward_hint","defaultMessage":"The account is from another server. Send an anonymized copy of the report there as well?"},{"id":"report.forward","defaultMessage":"Forward to {target}"}]}},"sourceType":"module"}