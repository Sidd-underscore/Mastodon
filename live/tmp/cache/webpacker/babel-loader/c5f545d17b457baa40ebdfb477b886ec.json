{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/following/index.js\",\n    _this = this,\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport { fetchAccount, fetchFollowing, expandFollowing } from '../../actions/accounts';\nimport { FormattedMessage } from 'react-intl';\nimport AccountContainer from '../../containers/account_container';\nimport Column from '../ui/components/column';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport ColumnBackButton from '../../components/column_back_button';\nimport ScrollableList from '../../components/scrollable_list';\nimport MissingIndicator from 'mastodon/components/missing_indicator';\nimport TimelineHint from 'mastodon/components/timeline_hint';\n\nvar mapStateToProps = function mapStateToProps(state, props) {\n  return {\n    remote: !!(state.getIn(['accounts', props.params.accountId, 'acct']) !== state.getIn(['accounts', props.params.accountId, 'username'])),\n    remoteUrl: state.getIn(['accounts', props.params.accountId, 'url']),\n    isAccount: !!state.getIn(['accounts', props.params.accountId]),\n    accountIds: state.getIn(['user_lists', 'following', props.params.accountId, 'items']),\n    hasMore: !!state.getIn(['user_lists', 'following', props.params.accountId, 'next']),\n    isLoading: state.getIn(['user_lists', 'following', props.params.accountId, 'isLoading'], true),\n    blockedBy: state.getIn(['relationships', props.params.accountId, 'blocked_by'], false)\n  };\n};\n\nvar RemoteHint = function RemoteHint(_ref) {\n  var url = _ref.url;\n  return /*#__PURE__*/React.createElement(TimelineHint, {\n    url: url,\n    resource: /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"timeline_hint.resources.follows\",\n      defaultMessage: \"Follows\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 37\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }\n  });\n};\n\nRemoteHint.propTypes = {\n  url: PropTypes.string.isRequired\n};\nvar Following = (_dec = connect(mapStateToProps), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Following, _ImmutablePureCompone);\n\n  function Following() {\n    var _this2;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this2.handleLoadMore = debounce(function () {\n      _this2.props.dispatch(expandFollowing(_this2.props.params.accountId));\n    }, 300, {\n      leading: true\n    });\n    return _this2;\n  }\n\n  var _proto = Following.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (!this.props.accountIds) {\n      this.props.dispatch(fetchAccount(this.props.params.accountId));\n      this.props.dispatch(fetchFollowing(this.props.params.accountId));\n    }\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      this.props.dispatch(fetchFollowing(nextProps.params.accountId));\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        accountIds = _this$props.accountIds,\n        hasMore = _this$props.hasMore,\n        blockedBy = _this$props.blockedBy,\n        isAccount = _this$props.isAccount,\n        multiColumn = _this$props.multiColumn,\n        isLoading = _this$props.isLoading,\n        remote = _this$props.remote,\n        remoteUrl = _this$props.remoteUrl;\n\n    if (!isAccount) {\n      return /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(MissingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    if (!accountIds) {\n      return /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    var emptyMessage;\n\n    if (blockedBy) {\n      emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"empty_column.account_unavailable\",\n        defaultMessage: \"Profile unavailable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }\n      });\n    } else if (remote && accountIds.isEmpty()) {\n      emptyMessage = /*#__PURE__*/React.createElement(RemoteHint, {\n        url: remoteUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }\n      });\n    } else {\n      emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"account.follows.empty\",\n        defaultMessage: \"This user doesn't follow anyone yet.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 22\n        }\n      });\n    }\n\n    var remoteMessage = remote ? /*#__PURE__*/React.createElement(RemoteHint, {\n      url: remoteUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 36\n      }\n    }) : null;\n    return /*#__PURE__*/React.createElement(Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnBackButton, {\n      multiColumn: multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ScrollableList, {\n      scrollKey: \"following\",\n      hasMore: hasMore,\n      isLoading: isLoading,\n      onLoadMore: this.handleLoadMore,\n      prepend: /*#__PURE__*/React.createElement(HeaderContainer, {\n        accountId: this.props.params.accountId,\n        hideTabs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 20\n        }\n      }),\n      alwaysPrepend: true,\n      append: remoteMessage,\n      emptyMessage: emptyMessage,\n      bindToDocument: !multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, blockedBy ? [] : accountIds.map(function (id) {\n      return /*#__PURE__*/React.createElement(AccountContainer, {\n        key: id,\n        id: id,\n        withNote: false,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      });\n    })));\n  };\n\n  return Following;\n}(ImmutablePureComponent), _class2.propTypes = {\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  accountIds: ImmutablePropTypes.list,\n  hasMore: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  blockedBy: PropTypes.bool,\n  isAccount: PropTypes.bool,\n  remote: PropTypes.bool,\n  remoteUrl: PropTypes.string,\n  multiColumn: PropTypes.bool\n}, _temp)) || _class);\nexport { Following as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/following/index.js"],"names":["React","connect","ImmutablePureComponent","PropTypes","ImmutablePropTypes","debounce","LoadingIndicator","fetchAccount","fetchFollowing","expandFollowing","FormattedMessage","AccountContainer","Column","HeaderContainer","ColumnBackButton","ScrollableList","MissingIndicator","TimelineHint","mapStateToProps","state","props","remote","getIn","params","accountId","remoteUrl","isAccount","accountIds","hasMore","isLoading","blockedBy","RemoteHint","url","propTypes","string","isRequired","Following","handleLoadMore","dispatch","leading","componentWillMount","componentWillReceiveProps","nextProps","render","multiColumn","emptyMessage","isEmpty","remoteMessage","map","id","object","func","list","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport {\n  fetchAccount,\n  fetchFollowing,\n  expandFollowing,\n} from '../../actions/accounts';\nimport { FormattedMessage } from 'react-intl';\nimport AccountContainer from '../../containers/account_container';\nimport Column from '../ui/components/column';\nimport HeaderContainer from '../account_timeline/containers/header_container';\nimport ColumnBackButton from '../../components/column_back_button';\nimport ScrollableList from '../../components/scrollable_list';\nimport MissingIndicator from 'mastodon/components/missing_indicator';\nimport TimelineHint from 'mastodon/components/timeline_hint';\n\nconst mapStateToProps = (state, props) => ({\n  remote: !!(state.getIn(['accounts', props.params.accountId, 'acct']) !== state.getIn(['accounts', props.params.accountId, 'username'])),\n  remoteUrl: state.getIn(['accounts', props.params.accountId, 'url']),\n  isAccount: !!state.getIn(['accounts', props.params.accountId]),\n  accountIds: state.getIn(['user_lists', 'following', props.params.accountId, 'items']),\n  hasMore: !!state.getIn(['user_lists', 'following', props.params.accountId, 'next']),\n  isLoading: state.getIn(['user_lists', 'following', props.params.accountId, 'isLoading'], true),\n  blockedBy: state.getIn(['relationships', props.params.accountId, 'blocked_by'], false),\n});\n\nconst RemoteHint = ({ url }) => (\n  <TimelineHint url={url} resource={<FormattedMessage id='timeline_hint.resources.follows' defaultMessage='Follows' />} />\n);\n\nRemoteHint.propTypes = {\n  url: PropTypes.string.isRequired,\n};\n\nexport default @connect(mapStateToProps)\nclass Following extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    accountIds: ImmutablePropTypes.list,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    blockedBy: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    remote: PropTypes.bool,\n    remoteUrl: PropTypes.string,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    if (!this.props.accountIds) {\n      this.props.dispatch(fetchAccount(this.props.params.accountId));\n      this.props.dispatch(fetchFollowing(this.props.params.accountId));\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.params.accountId !== this.props.params.accountId && nextProps.params.accountId) {\n      this.props.dispatch(fetchAccount(nextProps.params.accountId));\n      this.props.dispatch(fetchFollowing(nextProps.params.accountId));\n    }\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFollowing(this.props.params.accountId));\n  }, 300, { leading: true });\n\n  render () {\n    const { accountIds, hasMore, blockedBy, isAccount, multiColumn, isLoading, remote, remoteUrl } = this.props;\n\n    if (!isAccount) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let emptyMessage;\n\n    if (blockedBy) {\n      emptyMessage = <FormattedMessage id='empty_column.account_unavailable' defaultMessage='Profile unavailable' />;\n    } else if (remote && accountIds.isEmpty()) {\n      emptyMessage = <RemoteHint url={remoteUrl} />;\n    } else {\n      emptyMessage = <FormattedMessage id='account.follows.empty' defaultMessage=\"This user doesn't follow anyone yet.\" />;\n    }\n\n    const remoteMessage = remote ? <RemoteHint url={remoteUrl} /> : null;\n\n    return (\n      <Column>\n        <ColumnBackButton multiColumn={multiColumn} />\n\n        <ScrollableList\n          scrollKey='following'\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          prepend={<HeaderContainer accountId={this.props.params.accountId} hideTabs />}\n          alwaysPrepend\n          append={remoteMessage}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {blockedBy ? [] : accountIds.map(id =>\n            <AccountContainer key={id} id={id} withNote={false} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"timeline_hint.resources.follows","defaultMessage":"Follows"},{"id":"empty_column.account_unavailable","defaultMessage":"Profile unavailable"},{"id":"account.follows.empty","defaultMessage":"This user doesn't follow anyone yet."}]}},"sourceType":"module"}