{"ast":null,"code":"// Handles browser quirks, based on\n// https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\nvar checkNotificationPromise = function checkNotificationPromise() {\n  try {\n    // eslint-disable-next-line promise/catch-or-return\n    Notification.requestPermission().then();\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\nvar handlePermission = function handlePermission(permission, callback) {\n  // Whatever the user answers, we make sure Chrome stores the information\n  if (!('permission' in Notification)) {\n    Notification.permission = permission;\n  }\n\n  callback(Notification.permission);\n};\n\nexport var requestNotificationPermission = function requestNotificationPermission(callback) {\n  if (checkNotificationPromise()) {\n    Notification.requestPermission().then(function (permission) {\n      return handlePermission(permission, callback);\n    }).catch(console.warn);\n  } else {\n    Notification.requestPermission(function (permission) {\n      return handlePermission(permission, callback);\n    });\n  }\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/utils/notifications.js"],"names":["checkNotificationPromise","Notification","requestPermission","then","e","handlePermission","permission","callback","requestNotificationPermission","catch","console","warn"],"mappings":"AAAA;AACA;AAEA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrC,MAAI;AACF;AACAC,IAAAA,YAAY,CAACC,iBAAb,GAAiCC,IAAjC;AACD,GAHD,CAGE,OAAMC,CAAN,EAAS;AACT,WAAO,KAAP;AACD;;AAED,SAAO,IAAP;AACD,CATD;;AAWA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,UAAD,EAAaC,QAAb,EAA0B;AACjD;AACA,MAAG,EAAE,gBAAgBN,YAAlB,CAAH,EAAoC;AAClCA,IAAAA,YAAY,CAACK,UAAb,GAA0BA,UAA1B;AACD;;AAEDC,EAAAA,QAAQ,CAACN,YAAY,CAACK,UAAd,CAAR;AACD,CAPD;;AASA,OAAO,IAAME,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACD,QAAD,EAAc;AACzD,MAAIP,wBAAwB,EAA5B,EAAgC;AAC9BC,IAAAA,YAAY,CAACC,iBAAb,GAAiCC,IAAjC,CAAsC,UAACG,UAAD;AAAA,aAAgBD,gBAAgB,CAACC,UAAD,EAAaC,QAAb,CAAhC;AAAA,KAAtC,EAA8FE,KAA9F,CAAoGC,OAAO,CAACC,IAA5G;AACD,GAFD,MAEO;AACLV,IAAAA,YAAY,CAACC,iBAAb,CAA+B,UAACI,UAAD;AAAA,aAAgBD,gBAAgB,CAACC,UAAD,EAAaC,QAAb,CAAhC;AAAA,KAA/B;AACD;AACF,CANM","sourcesContent":["// Handles browser quirks, based on\n// https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\n\nconst checkNotificationPromise = () => {\n  try {\n    // eslint-disable-next-line promise/catch-or-return\n    Notification.requestPermission().then();\n  } catch(e) {\n    return false;\n  }\n\n  return true;\n};\n\nconst handlePermission = (permission, callback) => {\n  // Whatever the user answers, we make sure Chrome stores the information\n  if(!('permission' in Notification)) {\n    Notification.permission = permission;\n  }\n\n  callback(Notification.permission);\n};\n\nexport const requestNotificationPermission = (callback) => {\n  if (checkNotificationPromise()) {\n    Notification.requestPermission().then((permission) => handlePermission(permission, callback)).catch(console.warn);\n  } else {\n    Notification.requestPermission((permission) => handlePermission(permission, callback));\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}