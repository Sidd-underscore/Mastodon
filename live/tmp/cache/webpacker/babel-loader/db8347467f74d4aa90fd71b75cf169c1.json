{"ast":null,"code":"import { connect } from 'react-redux';\nimport { cancelReplyCompose } from '../../../actions/compose';\nimport { makeGetStatus } from '../../../selectors';\nimport ReplyIndicator from '../components/reply_indicator';\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getStatus = makeGetStatus();\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      status: getStatus(state, {\n        id: state.getIn(['compose', 'in_reply_to'])\n      })\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onCancel() {\n      dispatch(cancelReplyCompose());\n    }\n\n  };\n};\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReplyIndicator);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/containers/reply_indicator_container.js"],"names":["connect","cancelReplyCompose","makeGetStatus","ReplyIndicator","makeMapStateToProps","getStatus","mapStateToProps","state","status","id","getIn","mapDispatchToProps","dispatch","onCancel"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAMC,SAAS,GAAGH,aAAa,EAA/B;;AAEA,MAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,WAAK;AAChCC,MAAAA,MAAM,EAAEH,SAAS,CAACE,KAAD,EAAQ;AAAEE,QAAAA,EAAE,EAAEF,KAAK,CAACG,KAAN,CAAY,CAAC,SAAD,EAAY,aAAZ,CAAZ;AAAN,OAAR;AADe,KAAL;AAAA,GAA7B;;AAIA,SAAOJ,eAAP;AACD,CARD;;AAUA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AAEtCC,IAAAA,QAAQ,GAAI;AACVD,MAAAA,QAAQ,CAACX,kBAAkB,EAAnB,CAAR;AACD;;AAJqC,GAAL;AAAA,CAAnC;;AAQA,eAAeD,OAAO,CAACI,mBAAD,EAAsBO,kBAAtB,CAAP,CAAiDR,cAAjD,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { cancelReplyCompose } from '../../../actions/compose';\nimport { makeGetStatus } from '../../../selectors';\nimport ReplyIndicator from '../components/reply_indicator';\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = state => ({\n    status: getStatus(state, { id: state.getIn(['compose', 'in_reply_to']) }),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  onCancel () {\n    dispatch(cancelReplyCompose());\n  },\n\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReplyIndicator);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}