{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/column_back_button.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Icon from 'mastodon/components/icon';\nimport { createPortal } from 'react-dom';\n\nvar ColumnBackButton = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ColumnBackButton, _React$PureComponent);\n\n  function ColumnBackButton() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleClick = function () {\n      if (window.history && window.history.length === 1) {\n        _this.context.router.history.push('/');\n      } else {\n        _this.context.router.history.goBack();\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = ColumnBackButton.prototype;\n\n  _proto.render = function render() {\n    var multiColumn = this.props.multiColumn;\n    var component = /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: \"column-back-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"chevron-left\",\n      className: \"column-back-button__icon\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"column_back_button.label\",\n      defaultMessage: \"Back\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }));\n\n    if (multiColumn) {\n      return component;\n    } else {\n      // The portal container and the component may be rendered to the DOM in\n      // the same React render pass, so the container might not be available at\n      // the time `render()` is called.\n      var container = document.getElementById('tabs-bar__portal');\n\n      if (container === null) {\n        // The container wasn't available, force a re-render so that the\n        // component can eventually be inserted in the container and not scroll\n        // with the rest of the area.\n        this.forceUpdate();\n        return component;\n      } else {\n        return /*#__PURE__*/createPortal(component, container);\n      }\n    }\n  };\n\n  return ColumnBackButton;\n}(React.PureComponent);\n\nColumnBackButton.contextTypes = {\n  router: PropTypes.object\n};\nColumnBackButton.propTypes = {\n  multiColumn: PropTypes.bool\n};\nexport { ColumnBackButton as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/column_back_button.js"],"names":["React","FormattedMessage","PropTypes","Icon","createPortal","ColumnBackButton","handleClick","window","history","length","context","router","push","goBack","render","multiColumn","props","component","container","document","getElementById","forceUpdate","PureComponent","contextTypes","object","propTypes","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,YAAT,QAA6B,WAA7B;;IAEqBC,gB;;;;;;;;;;;;UAUnBC,W,GAAc,YAAM;AAClB,UAAIC,MAAM,CAACC,OAAP,IAAkBD,MAAM,CAACC,OAAP,CAAeC,MAAf,KAA0B,CAAhD,EAAmD;AACjD,cAAKC,OAAL,CAAaC,MAAb,CAAoBH,OAApB,CAA4BI,IAA5B,CAAiC,GAAjC;AACD,OAFD,MAEO;AACL,cAAKF,OAAL,CAAaC,MAAb,CAAoBH,OAApB,CAA4BK,MAA5B;AACD;AACF,K;;;;;;;SAEDC,M,GAAA,kBAAU;AACR,QAAQC,WAAR,GAAwB,KAAKC,KAA7B,CAAQD,WAAR;AAEA,QAAME,SAAS,gBACb;AAAQ,MAAA,OAAO,EAAE,KAAKX,WAAtB;AAAmC,MAAA,SAAS,EAAC,oBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,cAAT;AAAwB,MAAA,SAAS,EAAC,0BAAlC;AAA6D,MAAA,UAAU,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,0BAArB;AAAgD,MAAA,cAAc,EAAC,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;;AAOA,QAAIS,WAAJ,EAAiB;AACf,aAAOE,SAAP;AACD,KAFD,MAEO;AACL;AACA;AACA;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAlB;;AACA,UAAIF,SAAS,KAAK,IAAlB,EAAwB;AACtB;AACA;AACA;AACA,aAAKG,WAAL;AACA,eAAOJ,SAAP;AACD,OAND,MAMO;AACL,4BAAOb,YAAY,CAACa,SAAD,EAAYC,SAAZ,CAAnB;AACD;AACF;AACF,G;;;EA7C2ClB,KAAK,CAACsB,a;;AAA/BjB,gB,CAEZkB,Y,GAAe;AACpBZ,EAAAA,MAAM,EAAET,SAAS,CAACsB;AADE,C;AAFHnB,gB,CAMZoB,S,GAAY;AACjBV,EAAAA,WAAW,EAAEb,SAAS,CAACwB;AADN,C;SANArB,gB","sourcesContent":["import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport Icon from 'mastodon/components/icon';\nimport { createPortal } from 'react-dom';\n\nexport default class ColumnBackButton extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    multiColumn: PropTypes.bool,\n  };\n\n  handleClick = () => {\n    if (window.history && window.history.length === 1) {\n      this.context.router.history.push('/');\n    } else {\n      this.context.router.history.goBack();\n    }\n  }\n\n  render () {\n    const { multiColumn } = this.props;\n\n    const component = (\n      <button onClick={this.handleClick} className='column-back-button'>\n        <Icon id='chevron-left' className='column-back-button__icon' fixedWidth />\n        <FormattedMessage id='column_back_button.label' defaultMessage='Back' />\n      </button>\n    );\n\n    if (multiColumn) {\n      return component;\n    } else {\n      // The portal container and the component may be rendered to the DOM in\n      // the same React render pass, so the container might not be available at\n      // the time `render()` is called.\n      const container = document.getElementById('tabs-bar__portal');\n      if (container === null) {\n        // The container wasn't available, force a re-render so that the\n        // component can eventually be inserted in the container and not scroll\n        // with the rest of the area.\n        this.forceUpdate();\n        return component;\n      } else {\n        return createPortal(component, container);\n      }\n    }\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column_back_button.label","defaultMessage":"Back"}]}},"sourceType":"module"}