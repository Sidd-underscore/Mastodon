{"ast":null,"code":"import { LIST_FETCH_SUCCESS, LIST_FETCH_FAIL, LISTS_FETCH_SUCCESS, LIST_CREATE_SUCCESS, LIST_UPDATE_SUCCESS, LIST_DELETE_SUCCESS } from '../actions/lists';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\nvar initialState = ImmutableMap();\n\nvar normalizeList = function normalizeList(state, list) {\n  return state.set(list.id, fromJS(list));\n};\n\nvar normalizeLists = function normalizeLists(state, lists) {\n  lists.forEach(function (list) {\n    state = normalizeList(state, list);\n  });\n  return state;\n};\n\nexport default function lists(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case LIST_FETCH_SUCCESS:\n    case LIST_CREATE_SUCCESS:\n    case LIST_UPDATE_SUCCESS:\n      return normalizeList(state, action.list);\n\n    case LISTS_FETCH_SUCCESS:\n      return normalizeLists(state, action.lists);\n\n    case LIST_DELETE_SUCCESS:\n    case LIST_FETCH_FAIL:\n      return state.set(action.id, false);\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/lists.js"],"names":["LIST_FETCH_SUCCESS","LIST_FETCH_FAIL","LISTS_FETCH_SUCCESS","LIST_CREATE_SUCCESS","LIST_UPDATE_SUCCESS","LIST_DELETE_SUCCESS","Map","ImmutableMap","fromJS","initialState","normalizeList","state","list","set","id","normalizeLists","lists","forEach","action","type"],"mappings":"AAAA,SACEA,kBADF,EAEEC,eAFF,EAGEC,mBAHF,EAIEC,mBAJF,EAKEC,mBALF,EAMEC,mBANF,QAOO,kBAPP;AAQA,SAASC,GAAG,IAAIC,YAAhB,EAA8BC,MAA9B,QAA4C,WAA5C;AAEA,IAAMC,YAAY,GAAGF,YAAY,EAAjC;;AAEA,IAAMG,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAQC,IAAR;AAAA,SAAiBD,KAAK,CAACE,GAAN,CAAUD,IAAI,CAACE,EAAf,EAAmBN,MAAM,CAACI,IAAD,CAAzB,CAAjB;AAAA,CAAtB;;AAEA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,KAAD,EAAQK,KAAR,EAAkB;AACvCA,EAAAA,KAAK,CAACC,OAAN,CAAc,UAAAL,IAAI,EAAI;AACpBD,IAAAA,KAAK,GAAGD,aAAa,CAACC,KAAD,EAAQC,IAAR,CAArB;AACD,GAFD;AAIA,SAAOD,KAAP;AACD,CAND;;AAQA,eAAe,SAASK,KAAT,CAAeL,KAAf,EAAqCO,MAArC,EAA6C;AAAA,MAA9BP,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBF,YAAsB;AAAA;;AAC1D,UAAOS,MAAM,CAACC,IAAd;AACA,SAAKnB,kBAAL;AACA,SAAKG,mBAAL;AACA,SAAKC,mBAAL;AACE,aAAOM,aAAa,CAACC,KAAD,EAAQO,MAAM,CAACN,IAAf,CAApB;;AACF,SAAKV,mBAAL;AACE,aAAOa,cAAc,CAACJ,KAAD,EAAQO,MAAM,CAACF,KAAf,CAArB;;AACF,SAAKX,mBAAL;AACA,SAAKJ,eAAL;AACE,aAAOU,KAAK,CAACE,GAAN,CAAUK,MAAM,CAACJ,EAAjB,EAAqB,KAArB,CAAP;;AACF;AACE,aAAOH,KAAP;AAXF;AAaD;AAAA","sourcesContent":["import {\n  LIST_FETCH_SUCCESS,\n  LIST_FETCH_FAIL,\n  LISTS_FETCH_SUCCESS,\n  LIST_CREATE_SUCCESS,\n  LIST_UPDATE_SUCCESS,\n  LIST_DELETE_SUCCESS,\n} from '../actions/lists';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap();\n\nconst normalizeList = (state, list) => state.set(list.id, fromJS(list));\n\nconst normalizeLists = (state, lists) => {\n  lists.forEach(list => {\n    state = normalizeList(state, list);\n  });\n\n  return state;\n};\n\nexport default function lists(state = initialState, action) {\n  switch(action.type) {\n  case LIST_FETCH_SUCCESS:\n  case LIST_CREATE_SUCCESS:\n  case LIST_UPDATE_SUCCESS:\n    return normalizeList(state, action.list);\n  case LISTS_FETCH_SUCCESS:\n    return normalizeLists(state, action.lists);\n  case LIST_DELETE_SUCCESS:\n  case LIST_FETCH_FAIL:\n    return state.set(action.id, false);\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}