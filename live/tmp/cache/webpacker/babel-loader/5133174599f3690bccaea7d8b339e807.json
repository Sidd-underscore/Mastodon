{"ast":null,"code":"import { connect } from 'react-redux';\nimport PollForm from '../components/poll_form';\nimport { addPollOption, removePollOption, changePollOption, changePollSettings } from '../../../actions/compose';\nimport { clearComposeSuggestions, fetchComposeSuggestions, selectComposeSuggestion } from '../../../actions/compose';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    suggestions: state.getIn(['compose', 'suggestions']),\n    options: state.getIn(['compose', 'poll', 'options']),\n    expiresIn: state.getIn(['compose', 'poll', 'expires_in']),\n    isMultiple: state.getIn(['compose', 'poll', 'multiple'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAddOption(title) {\n      dispatch(addPollOption(title));\n    },\n\n    onRemoveOption(index) {\n      dispatch(removePollOption(index));\n    },\n\n    onChangeOption(index, title) {\n      dispatch(changePollOption(index, title));\n    },\n\n    onChangeSettings(expiresIn, isMultiple) {\n      dispatch(changePollSettings(expiresIn, isMultiple));\n    },\n\n    onClearSuggestions() {\n      dispatch(clearComposeSuggestions());\n    },\n\n    onFetchSuggestions(token) {\n      dispatch(fetchComposeSuggestions(token));\n    },\n\n    onSuggestionSelected(position, token, accountId, path) {\n      dispatch(selectComposeSuggestion(position, token, accountId, path));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollForm);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/containers/poll_form_container.js"],"names":["connect","PollForm","addPollOption","removePollOption","changePollOption","changePollSettings","clearComposeSuggestions","fetchComposeSuggestions","selectComposeSuggestion","mapStateToProps","state","suggestions","getIn","options","expiresIn","isMultiple","mapDispatchToProps","dispatch","onAddOption","title","onRemoveOption","index","onChangeOption","onChangeSettings","onClearSuggestions","onFetchSuggestions","token","onSuggestionSelected","position","accountId","path"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,aAAT,EAAwBC,gBAAxB,EAA0CC,gBAA1C,EAA4DC,kBAA5D,QAAsF,0BAAtF;AACA,SACEC,uBADF,EAEEC,uBAFF,EAGEC,uBAHF,QAIO,0BAJP;;AAMA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,WAAW,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,EAAY,aAAZ,CAAZ,CADmB;AAEhCC,IAAAA,OAAO,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,CAAZ,CAFuB;AAGhCE,IAAAA,SAAS,EAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,EAAY,MAAZ,EAAoB,YAApB,CAAZ,CAHqB;AAIhCG,IAAAA,UAAU,EAAEL,KAAK,CAACE,KAAN,CAAY,CAAC,SAAD,EAAY,MAAZ,EAAoB,UAApB,CAAZ;AAJoB,GAAL;AAAA,CAA7B;;AAOA,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjBF,MAAAA,QAAQ,CAACf,aAAa,CAACiB,KAAD,CAAd,CAAR;AACD,KAHqC;;AAKtCC,IAAAA,cAAc,CAACC,KAAD,EAAQ;AACpBJ,MAAAA,QAAQ,CAACd,gBAAgB,CAACkB,KAAD,CAAjB,CAAR;AACD,KAPqC;;AAStCC,IAAAA,cAAc,CAACD,KAAD,EAAQF,KAAR,EAAe;AAC3BF,MAAAA,QAAQ,CAACb,gBAAgB,CAACiB,KAAD,EAAQF,KAAR,CAAjB,CAAR;AACD,KAXqC;;AAatCI,IAAAA,gBAAgB,CAACT,SAAD,EAAYC,UAAZ,EAAwB;AACtCE,MAAAA,QAAQ,CAACZ,kBAAkB,CAACS,SAAD,EAAYC,UAAZ,CAAnB,CAAR;AACD,KAfqC;;AAiBtCS,IAAAA,kBAAkB,GAAI;AACpBP,MAAAA,QAAQ,CAACX,uBAAuB,EAAxB,CAAR;AACD,KAnBqC;;AAqBtCmB,IAAAA,kBAAkB,CAAEC,KAAF,EAAS;AACzBT,MAAAA,QAAQ,CAACV,uBAAuB,CAACmB,KAAD,CAAxB,CAAR;AACD,KAvBqC;;AAyBtCC,IAAAA,oBAAoB,CAAEC,QAAF,EAAYF,KAAZ,EAAmBG,SAAnB,EAA8BC,IAA9B,EAAoC;AACtDb,MAAAA,QAAQ,CAACT,uBAAuB,CAACoB,QAAD,EAAWF,KAAX,EAAkBG,SAAlB,EAA6BC,IAA7B,CAAxB,CAAR;AACD;;AA3BqC,GAAL;AAAA,CAAnC;;AA+BA,eAAe9B,OAAO,CAACS,eAAD,EAAkBO,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport PollForm from '../components/poll_form';\nimport { addPollOption, removePollOption, changePollOption, changePollSettings } from '../../../actions/compose';\nimport {\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  suggestions: state.getIn(['compose', 'suggestions']),\n  options: state.getIn(['compose', 'poll', 'options']),\n  expiresIn: state.getIn(['compose', 'poll', 'expires_in']),\n  isMultiple: state.getIn(['compose', 'poll', 'multiple']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddOption(title) {\n    dispatch(addPollOption(title));\n  },\n\n  onRemoveOption(index) {\n    dispatch(removePollOption(index));\n  },\n\n  onChangeOption(index, title) {\n    dispatch(changePollOption(index, title));\n  },\n\n  onChangeSettings(expiresIn, isMultiple) {\n    dispatch(changePollSettings(expiresIn, isMultiple));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, accountId, path) {\n    dispatch(selectComposeSuggestion(position, token, accountId, path));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollForm);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}