{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/text_icon_button.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar iconStyle = {\n  height: null,\n  lineHeight: '27px',\n  width: 18 * 1.28571429 + \"px\"\n};\n\nvar TextIconButton = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(TextIconButton, _React$PureComponent);\n\n  function TextIconButton() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      e.preventDefault();\n\n      _this.props.onClick();\n    };\n\n    return _this;\n  }\n\n  var _proto = TextIconButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        label = _this$props.label,\n        title = _this$props.title,\n        active = _this$props.active,\n        ariaControls = _this$props.ariaControls;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      title: title,\n      \"aria-label\": title,\n      className: \"text-icon-button \" + (active ? 'active' : ''),\n      \"aria-expanded\": active,\n      onClick: this.handleClick,\n      \"aria-controls\": ariaControls,\n      style: iconStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, label);\n  };\n\n  return TextIconButton;\n}(React.PureComponent);\n\nTextIconButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  active: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n  ariaControls: PropTypes.string\n};\nexport { TextIconButton as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/text_icon_button.js"],"names":["React","PropTypes","iconStyle","height","lineHeight","width","TextIconButton","handleClick","e","preventDefault","props","onClick","render","label","title","active","ariaControls","PureComponent","propTypes","string","isRequired","bool","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,MAAM,EAAE,IADQ;AAEhBC,EAAAA,UAAU,EAAE,MAFI;AAGhBC,EAAAA,KAAK,EAAK,KAAK,UAAV;AAHW,CAAlB;;IAMqBC,c;;;;;;;;;;;;UAUnBC,W,GAAc,UAACC,CAAD,EAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;;AACA,YAAKC,KAAL,CAAWC,OAAX;AACD,K;;;;;;;SAEDC,M,GAAA,kBAAU;AACR,sBAA+C,KAAKF,KAApD;AAAA,QAAQG,KAAR,eAAQA,KAAR;AAAA,QAAeC,KAAf,eAAeA,KAAf;AAAA,QAAsBC,MAAtB,eAAsBA,MAAtB;AAAA,QAA8BC,YAA9B,eAA8BA,YAA9B;AAEA,wBACE;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,oBAAYA,KAFd;AAGE,MAAA,SAAS,yBAAsBC,MAAM,GAAG,QAAH,GAAc,EAA1C,CAHX;AAIE,uBAAeA,MAJjB;AAKE,MAAA,OAAO,EAAE,KAAKR,WALhB;AAME,uBAAeS,YANjB;AAM+B,MAAA,KAAK,EAAEd,SANtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGW,KARH,CADF;AAYD,G;;;EA9ByCb,KAAK,CAACiB,a;;AAA7BX,c,CAEZY,S,GAAY;AACjBL,EAAAA,KAAK,EAAEZ,SAAS,CAACkB,MAAV,CAAiBC,UADP;AAEjBN,EAAAA,KAAK,EAAEb,SAAS,CAACkB,MAFA;AAGjBJ,EAAAA,MAAM,EAAEd,SAAS,CAACoB,IAHD;AAIjBV,EAAAA,OAAO,EAAEV,SAAS,CAACqB,IAAV,CAAeF,UAJP;AAKjBJ,EAAAA,YAAY,EAAEf,SAAS,CAACkB;AALP,C;SAFAb,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n  width: `${18 * 1.28571429}px`,\n};\n\nexport default class TextIconButton extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    ariaControls: PropTypes.string,\n  };\n\n  handleClick = (e) => {\n    e.preventDefault();\n    this.props.onClick();\n  }\n\n  render () {\n    const { label, title, active, ariaControls } = this.props;\n\n    return (\n      <button\n        title={title}\n        aria-label={title}\n        className={`text-icon-button ${active ? 'active' : ''}`}\n        aria-expanded={active}\n        onClick={this.handleClick}\n        aria-controls={ariaControls} style={iconStyle}\n      >\n        {label}\n      </button>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}