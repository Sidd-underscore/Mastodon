{"ast":null,"code":"var Settings = /*#__PURE__*/function () {\n  function Settings(keyBase) {\n    if (keyBase === void 0) {\n      keyBase = null;\n    }\n\n    this.keyBase = keyBase;\n  }\n\n  var _proto = Settings.prototype;\n\n  _proto.generateKey = function generateKey(id) {\n    return this.keyBase ? [this.keyBase, \"id\" + id].join('.') : id;\n  };\n\n  _proto.set = function set(id, data) {\n    var key = this.generateKey(id);\n\n    try {\n      var encodedData = JSON.stringify(data);\n      localStorage.setItem(key, encodedData);\n      return data;\n    } catch (e) {\n      return null;\n    }\n  };\n\n  _proto.get = function get(id) {\n    var key = this.generateKey(id);\n\n    try {\n      var rawData = localStorage.getItem(key);\n      return JSON.parse(rawData);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  _proto.remove = function remove(id) {\n    var data = this.get(id);\n\n    if (data) {\n      var key = this.generateKey(id);\n\n      try {\n        localStorage.removeItem(key);\n      } catch (e) {}\n    }\n\n    return data;\n  };\n\n  return Settings;\n}();\n\nexport { Settings as default };\nexport var pushNotificationsSetting = new Settings('mastodon_push_notification_data');\nexport var tagHistory = new Settings('mastodon_tag_history');","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/settings.js"],"names":["Settings","keyBase","generateKey","id","join","set","data","key","encodedData","JSON","stringify","localStorage","setItem","e","get","rawData","getItem","parse","remove","removeItem","pushNotificationsSetting","tagHistory"],"mappings":"IAAqBA,Q;AAEnB,oBAAYC,OAAZ,EAA4B;AAAA,QAAhBA,OAAgB;AAAhBA,MAAAA,OAAgB,GAAN,IAAM;AAAA;;AAC1B,SAAKA,OAAL,GAAeA,OAAf;AACD;;;;SAEDC,W,GAAA,qBAAYC,EAAZ,EAAgB;AACd,WAAO,KAAKF,OAAL,GAAe,CAAC,KAAKA,OAAN,SAAoBE,EAApB,EAA0BC,IAA1B,CAA+B,GAA/B,CAAf,GAAqDD,EAA5D;AACD,G;;SAEDE,G,GAAA,aAAIF,EAAJ,EAAQG,IAAR,EAAc;AACZ,QAAMC,GAAG,GAAG,KAAKL,WAAL,CAAiBC,EAAjB,CAAZ;;AACA,QAAI;AACF,UAAMK,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAApB;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqBL,GAArB,EAA0BC,WAA1B;AACA,aAAOF,IAAP;AACD,KAJD,CAIE,OAAOO,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF,G;;SAEDC,G,GAAA,aAAIX,EAAJ,EAAQ;AACN,QAAMI,GAAG,GAAG,KAAKL,WAAL,CAAiBC,EAAjB,CAAZ;;AACA,QAAI;AACF,UAAMY,OAAO,GAAGJ,YAAY,CAACK,OAAb,CAAqBT,GAArB,CAAhB;AACA,aAAOE,IAAI,CAACQ,KAAL,CAAWF,OAAX,CAAP;AACD,KAHD,CAGE,OAAOF,CAAP,EAAU;AACV,aAAO,IAAP;AACD;AACF,G;;SAEDK,M,GAAA,gBAAOf,EAAP,EAAW;AACT,QAAMG,IAAI,GAAG,KAAKQ,GAAL,CAASX,EAAT,CAAb;;AACA,QAAIG,IAAJ,EAAU;AACR,UAAMC,GAAG,GAAG,KAAKL,WAAL,CAAiBC,EAAjB,CAAZ;;AACA,UAAI;AACFQ,QAAAA,YAAY,CAACQ,UAAb,CAAwBZ,GAAxB;AACD,OAFD,CAEE,OAAOM,CAAP,EAAU,CACX;AACF;;AACD,WAAOP,IAAP;AACD,G;;;;;SAzCkBN,Q;AA6CrB,OAAO,IAAMoB,wBAAwB,GAAG,IAAIpB,QAAJ,CAAa,iCAAb,CAAjC;AACP,OAAO,IAAMqB,UAAU,GAAG,IAAIrB,QAAJ,CAAa,sBAAb,CAAnB","sourcesContent":["export default class Settings {\n\n  constructor(keyBase = null) {\n    this.keyBase = keyBase;\n  }\n\n  generateKey(id) {\n    return this.keyBase ? [this.keyBase, `id${id}`].join('.') : id;\n  }\n\n  set(id, data) {\n    const key = this.generateKey(id);\n    try {\n      const encodedData = JSON.stringify(data);\n      localStorage.setItem(key, encodedData);\n      return data;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  get(id) {\n    const key = this.generateKey(id);\n    try {\n      const rawData = localStorage.getItem(key);\n      return JSON.parse(rawData);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  remove(id) {\n    const data = this.get(id);\n    if (data) {\n      const key = this.generateKey(id);\n      try {\n        localStorage.removeItem(key);\n      } catch (e) {\n      }\n    }\n    return data;\n  }\n\n}\n\nexport const pushNotificationsSetting = new Settings('mastodon_push_notification_data');\nexport const tagHistory = new Settings('mastodon_tag_history');\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}