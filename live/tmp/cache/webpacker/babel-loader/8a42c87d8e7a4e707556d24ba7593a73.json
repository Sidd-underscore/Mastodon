{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/filter_bar.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\nvar tooltips = defineMessages({\n  mentions: {\n    \"id\": \"notifications.filter.mentions\",\n    \"defaultMessage\": \"Mentions\"\n  },\n  favourites: {\n    \"id\": \"notifications.filter.favourites\",\n    \"defaultMessage\": \"Favourites\"\n  },\n  boosts: {\n    \"id\": \"notifications.filter.boosts\",\n    \"defaultMessage\": \"Boosts\"\n  },\n  polls: {\n    \"id\": \"notifications.filter.polls\",\n    \"defaultMessage\": \"Poll results\"\n  },\n  follows: {\n    \"id\": \"notifications.filter.follows\",\n    \"defaultMessage\": \"Follows\"\n  },\n  statuses: {\n    \"id\": \"notifications.filter.statuses\",\n    \"defaultMessage\": \"Updates from people you follow\"\n  }\n});\n\nvar FilterBar = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(FilterBar, _React$PureComponent);\n\n  function FilterBar() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = FilterBar.prototype;\n\n  _proto.onClick = function onClick(notificationType) {\n    var _this = this;\n\n    return function () {\n      return _this.props.selectFilter(notificationType);\n    };\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        selectedFilter = _this$props.selectedFilter,\n        advancedMode = _this$props.advancedMode,\n        intl = _this$props.intl;\n    var renderedElement = !advancedMode ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification__filter-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'all' ? 'active' : '',\n      onClick: this.onClick('all'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications.filter.all\",\n      defaultMessage: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'mention' ? 'active' : '',\n      onClick: this.onClick('mention'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications.filter.mentions\",\n      defaultMessage: \"Mentions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notification__filter-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'all' ? 'active' : '',\n      onClick: this.onClick('all'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications.filter.all\",\n      defaultMessage: \"All\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'mention' ? 'active' : '',\n      onClick: this.onClick('mention'),\n      title: intl.formatMessage(tooltips.mentions),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"reply-all\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'favourite' ? 'active' : '',\n      onClick: this.onClick('favourite'),\n      title: intl.formatMessage(tooltips.favourites),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"star\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'reblog' ? 'active' : '',\n      onClick: this.onClick('reblog'),\n      title: intl.formatMessage(tooltips.boosts),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"retweet\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'poll' ? 'active' : '',\n      onClick: this.onClick('poll'),\n      title: intl.formatMessage(tooltips.polls),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"tasks\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'status' ? 'active' : '',\n      onClick: this.onClick('status'),\n      title: intl.formatMessage(tooltips.statuses),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"home\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: selectedFilter === 'follow' ? 'active' : '',\n      onClick: this.onClick('follow'),\n      title: intl.formatMessage(tooltips.follows),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"user-plus\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    })));\n    return renderedElement;\n  };\n\n  return FilterBar;\n}(React.PureComponent), _class2.propTypes = {\n  selectFilter: PropTypes.func.isRequired,\n  selectedFilter: PropTypes.string.isRequired,\n  advancedMode: PropTypes.bool.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { FilterBar as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/filter_bar.js"],"names":["React","PropTypes","defineMessages","injectIntl","FormattedMessage","Icon","tooltips","mentions","favourites","boosts","polls","follows","statuses","FilterBar","onClick","notificationType","props","selectFilter","render","selectedFilter","advancedMode","intl","renderedElement","formatMessage","PureComponent","propTypes","func","isRequired","string","bool","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\n\nconst tooltips = defineMessages({\n  mentions: { id: 'notifications.filter.mentions', defaultMessage: 'Mentions' },\n  favourites: { id: 'notifications.filter.favourites', defaultMessage: 'Favourites' },\n  boosts: { id: 'notifications.filter.boosts', defaultMessage: 'Boosts' },\n  polls: { id: 'notifications.filter.polls', defaultMessage: 'Poll results' },\n  follows: { id: 'notifications.filter.follows', defaultMessage: 'Follows' },\n  statuses: { id: 'notifications.filter.statuses', defaultMessage: 'Updates from people you follow' },\n});\n\nexport default @injectIntl\nclass FilterBar extends React.PureComponent {\n\n  static propTypes = {\n    selectFilter: PropTypes.func.isRequired,\n    selectedFilter: PropTypes.string.isRequired,\n    advancedMode: PropTypes.bool.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  onClick (notificationType) {\n    return () => this.props.selectFilter(notificationType);\n  }\n\n  render () {\n    const { selectedFilter, advancedMode, intl } = this.props;\n    const renderedElement = !advancedMode ? (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n        >\n          <FormattedMessage\n            id='notifications.filter.mentions'\n            defaultMessage='Mentions'\n          />\n        </button>\n      </div>\n    ) : (\n      <div className='notification__filter-bar'>\n        <button\n          className={selectedFilter === 'all' ? 'active' : ''}\n          onClick={this.onClick('all')}\n        >\n          <FormattedMessage\n            id='notifications.filter.all'\n            defaultMessage='All'\n          />\n        </button>\n        <button\n          className={selectedFilter === 'mention' ? 'active' : ''}\n          onClick={this.onClick('mention')}\n          title={intl.formatMessage(tooltips.mentions)}\n        >\n          <Icon id='reply-all' fixedWidth />\n        </button>\n        <button\n          className={selectedFilter === 'favourite' ? 'active' : ''}\n          onClick={this.onClick('favourite')}\n          title={intl.formatMessage(tooltips.favourites)}\n        >\n          <Icon id='star' fixedWidth />\n        </button>\n        <button\n          className={selectedFilter === 'reblog' ? 'active' : ''}\n          onClick={this.onClick('reblog')}\n          title={intl.formatMessage(tooltips.boosts)}\n        >\n          <Icon id='retweet' fixedWidth />\n        </button>\n        <button\n          className={selectedFilter === 'poll' ? 'active' : ''}\n          onClick={this.onClick('poll')}\n          title={intl.formatMessage(tooltips.polls)}\n        >\n          <Icon id='tasks' fixedWidth />\n        </button>\n        <button\n          className={selectedFilter === 'status' ? 'active' : ''}\n          onClick={this.onClick('status')}\n          title={intl.formatMessage(tooltips.statuses)}\n        >\n          <Icon id='home' fixedWidth />\n        </button>\n        <button\n          className={selectedFilter === 'follow' ? 'active' : ''}\n          onClick={this.onClick('follow')}\n          title={intl.formatMessage(tooltips.follows)}\n        >\n          <Icon id='user-plus' fixedWidth />\n        </button>\n      </div>\n    );\n    return renderedElement;\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"notifications.filter.mentions","defaultMessage":"Mentions"},{"id":"notifications.filter.favourites","defaultMessage":"Favourites"},{"id":"notifications.filter.boosts","defaultMessage":"Boosts"},{"id":"notifications.filter.polls","defaultMessage":"Poll results"},{"id":"notifications.filter.follows","defaultMessage":"Follows"},{"id":"notifications.filter.statuses","defaultMessage":"Updates from people you follow"},{"id":"notifications.filter.all","defaultMessage":"All"}]}},"sourceType":"module"}