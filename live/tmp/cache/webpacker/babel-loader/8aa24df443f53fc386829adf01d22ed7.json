{"ast":null,"code":"import { Map as ImmutableMap } from 'immutable';\nimport { HEIGHT_CACHE_SET, HEIGHT_CACHE_CLEAR } from '../actions/height_cache';\nvar initialState = ImmutableMap();\n\nvar setHeight = function setHeight(state, key, id, height) {\n  return state.update(key, ImmutableMap(), function (map) {\n    return map.set(id, height);\n  });\n};\n\nvar clearHeights = function clearHeights() {\n  return ImmutableMap();\n};\n\nexport default function statuses(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case HEIGHT_CACHE_SET:\n      return setHeight(state, action.key, action.id, action.height);\n\n    case HEIGHT_CACHE_CLEAR:\n      return clearHeights();\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/height_cache.js"],"names":["Map","ImmutableMap","HEIGHT_CACHE_SET","HEIGHT_CACHE_CLEAR","initialState","setHeight","state","key","id","height","update","map","set","clearHeights","statuses","action","type"],"mappings":"AAAA,SAASA,GAAG,IAAIC,YAAhB,QAAoC,WAApC;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,yBAArD;AAEA,IAAMC,YAAY,GAAGH,YAAY,EAAjC;;AAEA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR,EAAaC,EAAb,EAAiBC,MAAjB,EAA4B;AAC5C,SAAOH,KAAK,CAACI,MAAN,CAAaH,GAAb,EAAkBN,YAAY,EAA9B,EAAkC,UAAAU,GAAG;AAAA,WAAIA,GAAG,CAACC,GAAJ,CAAQJ,EAAR,EAAYC,MAAZ,CAAJ;AAAA,GAArC,CAAP;AACD,CAFD;;AAIA,IAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,SAAOZ,YAAY,EAAnB;AACD,CAFD;;AAIA,eAAe,SAASa,QAAT,CAAkBR,KAAlB,EAAwCS,MAAxC,EAAgD;AAAA,MAA9BT,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBF,YAAsB;AAAA;;AAC7D,UAAOW,MAAM,CAACC,IAAd;AACA,SAAKd,gBAAL;AACE,aAAOG,SAAS,CAACC,KAAD,EAAQS,MAAM,CAACR,GAAf,EAAoBQ,MAAM,CAACP,EAA3B,EAA+BO,MAAM,CAACN,MAAtC,CAAhB;;AACF,SAAKN,kBAAL;AACE,aAAOU,YAAY,EAAnB;;AACF;AACE,aAAOP,KAAP;AANF;AAQD;AAAA","sourcesContent":["import { Map as ImmutableMap } from 'immutable';\nimport { HEIGHT_CACHE_SET, HEIGHT_CACHE_CLEAR } from '../actions/height_cache';\n\nconst initialState = ImmutableMap();\n\nconst setHeight = (state, key, id, height) => {\n  return state.update(key, ImmutableMap(), map => map.set(id, height));\n};\n\nconst clearHeights = () => {\n  return ImmutableMap();\n};\n\nexport default function statuses(state = initialState, action) {\n  switch(action.type) {\n  case HEIGHT_CACHE_SET:\n    return setHeight(state, action.key, action.id, action.height);\n  case HEIGHT_CACHE_CLEAR:\n    return clearHeights();\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}