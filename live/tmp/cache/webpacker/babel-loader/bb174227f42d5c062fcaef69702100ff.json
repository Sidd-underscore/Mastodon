{"ast":null,"code":"// This code is largely borrowed from:\n// https://github.com/missive/emoji-mart/blob/5f2ffcc/src/utils/index.js\nimport data from './emoji_mart_data_light';\n\nvar buildSearch = function buildSearch(data) {\n  var search = [];\n\n  var addToSearch = function addToSearch(strings, split) {\n    if (!strings) {\n      return;\n    }\n\n    (Array.isArray(strings) ? strings : [strings]).forEach(function (string) {\n      (split ? string.split(/[-|_|\\s]+/) : [string]).forEach(function (s) {\n        s = s.toLowerCase();\n\n        if (search.indexOf(s) === -1) {\n          search.push(s);\n        }\n      });\n    });\n  };\n\n  addToSearch(data.short_names, true);\n  addToSearch(data.name, true);\n  addToSearch(data.keywords, false);\n  addToSearch(data.emoticons, false);\n  return search.join(',');\n};\n\nvar _String = String;\n\nvar stringFromCodePoint = _String.fromCodePoint || function () {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n\n  if (!length) {\n    return '';\n  }\n\n  var result = '';\n\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n\n    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 || // not a valid Unicode code point\n    codePoint > 0x10FFFF || // not a valid Unicode code point\n    Math.floor(codePoint) !== codePoint // not an integer\n    ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n\n    if (codePoint <= 0xFFFF) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xD800;\n      lowSurrogate = codePoint % 0x400 + 0xDC00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n\n  return result;\n};\n\nvar _JSON = JSON;\nvar COLONS_REGEX = /^(?:\\:([^\\:]+)\\:)(?:\\:skin-tone-(\\d)\\:)?$/;\nvar SKINS = ['1F3FA', '1F3FB', '1F3FC', '1F3FD', '1F3FE', '1F3FF'];\n\nfunction unifiedToNative(unified) {\n  var unicodes = unified.split('-'),\n      codePoints = unicodes.map(function (u) {\n    return \"0x\" + u;\n  });\n  return stringFromCodePoint.apply(null, codePoints);\n}\n\nfunction sanitize(emoji) {\n  var name = emoji.name,\n      short_names = emoji.short_names,\n      skin_tone = emoji.skin_tone,\n      skin_variations = emoji.skin_variations,\n      emoticons = emoji.emoticons,\n      unified = emoji.unified,\n      custom = emoji.custom,\n      imageUrl = emoji.imageUrl,\n      id = emoji.id || short_names[0],\n      colons = \":\" + id + \":\";\n\n  if (custom) {\n    return {\n      id,\n      name,\n      colons,\n      emoticons,\n      custom,\n      imageUrl\n    };\n  }\n\n  if (skin_tone) {\n    colons += \":skin-tone-\" + skin_tone + \":\";\n  }\n\n  return {\n    id,\n    name,\n    colons,\n    emoticons,\n    unified: unified.toLowerCase(),\n    skin: skin_tone || (skin_variations ? 1 : null),\n    native: unifiedToNative(unified)\n  };\n}\n\nfunction getSanitizedData() {\n  return sanitize(getData.apply(void 0, arguments));\n}\n\nfunction getData(emoji, skin, set) {\n  var emojiData = {};\n\n  if (typeof emoji === 'string') {\n    var matches = emoji.match(COLONS_REGEX);\n\n    if (matches) {\n      emoji = matches[1];\n\n      if (matches[2]) {\n        skin = parseInt(matches[2]);\n      }\n    }\n\n    if (data.short_names.hasOwnProperty(emoji)) {\n      emoji = data.short_names[emoji];\n    }\n\n    if (data.emojis.hasOwnProperty(emoji)) {\n      emojiData = data.emojis[emoji];\n    }\n  } else if (emoji.id) {\n    if (data.short_names.hasOwnProperty(emoji.id)) {\n      emoji.id = data.short_names[emoji.id];\n    }\n\n    if (data.emojis.hasOwnProperty(emoji.id)) {\n      emojiData = data.emojis[emoji.id];\n      skin = skin || emoji.skin;\n    }\n  }\n\n  if (!Object.keys(emojiData).length) {\n    emojiData = emoji;\n    emojiData.custom = true;\n\n    if (!emojiData.search) {\n      emojiData.search = buildSearch(emoji);\n    }\n  }\n\n  emojiData.emoticons = emojiData.emoticons || [];\n  emojiData.variations = emojiData.variations || [];\n\n  if (emojiData.skin_variations && skin > 1 && set) {\n    emojiData = JSON.parse(_JSON.stringify(emojiData));\n    var skinKey = SKINS[skin - 1],\n        variationData = emojiData.skin_variations[skinKey];\n\n    if (!variationData.variations && emojiData.variations) {\n      delete emojiData.variations;\n    }\n\n    if (variationData[\"has_img_\" + set]) {\n      emojiData.skin_tone = skin;\n\n      for (var k in variationData) {\n        var v = variationData[k];\n        emojiData[k] = v;\n      }\n    }\n  }\n\n  if (emojiData.variations && emojiData.variations.length) {\n    emojiData = JSON.parse(_JSON.stringify(emojiData));\n    emojiData.unified = emojiData.variations.shift();\n  }\n\n  return emojiData;\n}\n\nfunction uniq(arr) {\n  return arr.reduce(function (acc, item) {\n    if (acc.indexOf(item) === -1) {\n      acc.push(item);\n    }\n\n    return acc;\n  }, []);\n}\n\nfunction intersect(a, b) {\n  var uniqA = uniq(a);\n  var uniqB = uniq(b);\n  return uniqA.filter(function (item) {\n    return uniqB.indexOf(item) >= 0;\n  });\n}\n\nfunction deepMerge(a, b) {\n  var o = {};\n\n  for (var key in a) {\n    var originalValue = a[key],\n        value = originalValue;\n\n    if (b.hasOwnProperty(key)) {\n      value = b[key];\n    }\n\n    if (typeof value === 'object') {\n      value = deepMerge(originalValue, value);\n    }\n\n    o[key] = value;\n  }\n\n  return o;\n} // https://github.com/sonicdoe/measure-scrollbar\n\n\nfunction measureScrollbar() {\n  var div = document.createElement('div');\n  div.style.width = '100px';\n  div.style.height = '100px';\n  div.style.overflow = 'scroll';\n  div.style.position = 'absolute';\n  div.style.top = '-9999px';\n  document.body.appendChild(div);\n  var scrollbarWidth = div.offsetWidth - div.clientWidth;\n  document.body.removeChild(div);\n  return scrollbarWidth;\n}\n\nexport { getData, getSanitizedData, uniq, intersect, deepMerge, unifiedToNative, measureScrollbar };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/emoji/emoji_utils.js"],"names":["data","buildSearch","search","addToSearch","strings","split","Array","isArray","forEach","string","s","toLowerCase","indexOf","push","short_names","name","keywords","emoticons","join","_String","String","stringFromCodePoint","fromCodePoint","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","index","length","arguments","result","codePoint","Number","isFinite","Math","floor","RangeError","fromCharCode","apply","_JSON","JSON","COLONS_REGEX","SKINS","unifiedToNative","unified","unicodes","codePoints","map","u","sanitize","emoji","skin_tone","skin_variations","custom","imageUrl","id","colons","skin","native","getSanitizedData","getData","set","emojiData","matches","match","parseInt","hasOwnProperty","emojis","Object","keys","variations","parse","stringify","skinKey","variationData","k","v","shift","uniq","arr","reduce","acc","item","intersect","a","b","uniqA","uniqB","filter","deepMerge","o","key","originalValue","value","measureScrollbar","div","document","createElement","style","width","height","overflow","position","top","body","appendChild","scrollbarWidth","offsetWidth","clientWidth","removeChild"],"mappings":"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","sourcesContent":["// This code is largely borrowed from:\n// https://github.com/missive/emoji-mart/blob/5f2ffcc/src/utils/index.js\n\nimport data from './emoji_mart_data_light';\n\nconst buildSearch = (data) => {\n  const search = [];\n\n  let addToSearch = (strings, split) => {\n    if (!strings) {\n      return;\n    }\n\n    (Array.isArray(strings) ? strings : [strings]).forEach((string) => {\n      (split ? string.split(/[-|_|\\s]+/) : [string]).forEach((s) => {\n        s = s.toLowerCase();\n\n        if (search.indexOf(s) === -1) {\n          search.push(s);\n        }\n      });\n    });\n  };\n\n  addToSearch(data.short_names, true);\n  addToSearch(data.name, true);\n  addToSearch(data.keywords, false);\n  addToSearch(data.emoticons, false);\n\n  return search.join(',');\n};\n\nconst _String = String;\n\nconst stringFromCodePoint = _String.fromCodePoint || function () {\n  let MAX_SIZE = 0x4000;\n  let codeUnits = [];\n  let highSurrogate;\n  let lowSurrogate;\n  let index = -1;\n  let length = arguments.length;\n  if (!length) {\n    return '';\n  }\n  let result = '';\n  while (++index < length) {\n    let codePoint = Number(arguments[index]);\n    if (\n      !isFinite(codePoint) ||       // `NaN`, `+Infinity`, or `-Infinity`\n      codePoint < 0 ||              // not a valid Unicode code point\n      codePoint > 0x10FFFF ||       // not a valid Unicode code point\n      Math.floor(codePoint) !== codePoint // not an integer\n    ) {\n      throw RangeError('Invalid code point: ' + codePoint);\n    }\n    if (codePoint <= 0xFFFF) { // BMP code point\n      codeUnits.push(codePoint);\n    } else { // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xD800;\n      lowSurrogate = (codePoint % 0x400) + 0xDC00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n  return result;\n};\n\n\nconst _JSON = JSON;\n\nconst COLONS_REGEX = /^(?:\\:([^\\:]+)\\:)(?:\\:skin-tone-(\\d)\\:)?$/;\nconst SKINS = [\n  '1F3FA', '1F3FB', '1F3FC',\n  '1F3FD', '1F3FE', '1F3FF',\n];\n\nfunction unifiedToNative(unified) {\n  let unicodes = unified.split('-'),\n    codePoints = unicodes.map((u) => `0x${u}`);\n\n  return stringFromCodePoint.apply(null, codePoints);\n}\n\nfunction sanitize(emoji) {\n  let { name, short_names, skin_tone, skin_variations, emoticons, unified, custom, imageUrl } = emoji,\n    id = emoji.id || short_names[0],\n    colons = `:${id}:`;\n\n  if (custom) {\n    return {\n      id,\n      name,\n      colons,\n      emoticons,\n      custom,\n      imageUrl,\n    };\n  }\n\n  if (skin_tone) {\n    colons += `:skin-tone-${skin_tone}:`;\n  }\n\n  return {\n    id,\n    name,\n    colons,\n    emoticons,\n    unified: unified.toLowerCase(),\n    skin: skin_tone || (skin_variations ? 1 : null),\n    native: unifiedToNative(unified),\n  };\n}\n\nfunction getSanitizedData() {\n  return sanitize(getData(...arguments));\n}\n\nfunction getData(emoji, skin, set) {\n  let emojiData = {};\n\n  if (typeof emoji === 'string') {\n    let matches = emoji.match(COLONS_REGEX);\n\n    if (matches) {\n      emoji = matches[1];\n\n      if (matches[2]) {\n        skin = parseInt(matches[2]);\n      }\n    }\n\n    if (data.short_names.hasOwnProperty(emoji)) {\n      emoji = data.short_names[emoji];\n    }\n\n    if (data.emojis.hasOwnProperty(emoji)) {\n      emojiData = data.emojis[emoji];\n    }\n  } else if (emoji.id) {\n    if (data.short_names.hasOwnProperty(emoji.id)) {\n      emoji.id = data.short_names[emoji.id];\n    }\n\n    if (data.emojis.hasOwnProperty(emoji.id)) {\n      emojiData = data.emojis[emoji.id];\n      skin = skin || emoji.skin;\n    }\n  }\n\n  if (!Object.keys(emojiData).length) {\n    emojiData = emoji;\n    emojiData.custom = true;\n\n    if (!emojiData.search) {\n      emojiData.search = buildSearch(emoji);\n    }\n  }\n\n  emojiData.emoticons = emojiData.emoticons || [];\n  emojiData.variations = emojiData.variations || [];\n\n  if (emojiData.skin_variations && skin > 1 && set) {\n    emojiData = JSON.parse(_JSON.stringify(emojiData));\n\n    let skinKey = SKINS[skin - 1],\n      variationData = emojiData.skin_variations[skinKey];\n\n    if (!variationData.variations && emojiData.variations) {\n      delete emojiData.variations;\n    }\n\n    if (variationData[`has_img_${set}`]) {\n      emojiData.skin_tone = skin;\n\n      for (let k in variationData) {\n        let v = variationData[k];\n        emojiData[k] = v;\n      }\n    }\n  }\n\n  if (emojiData.variations && emojiData.variations.length) {\n    emojiData = JSON.parse(_JSON.stringify(emojiData));\n    emojiData.unified = emojiData.variations.shift();\n  }\n\n  return emojiData;\n}\n\nfunction uniq(arr) {\n  return arr.reduce((acc, item) => {\n    if (acc.indexOf(item) === -1) {\n      acc.push(item);\n    }\n    return acc;\n  }, []);\n}\n\nfunction intersect(a, b) {\n  const uniqA = uniq(a);\n  const uniqB = uniq(b);\n\n  return uniqA.filter(item => uniqB.indexOf(item) >= 0);\n}\n\nfunction deepMerge(a, b) {\n  let o = {};\n\n  for (let key in a) {\n    let originalValue = a[key],\n      value = originalValue;\n\n    if (b.hasOwnProperty(key)) {\n      value = b[key];\n    }\n\n    if (typeof value === 'object') {\n      value = deepMerge(originalValue, value);\n    }\n\n    o[key] = value;\n  }\n\n  return o;\n}\n\n// https://github.com/sonicdoe/measure-scrollbar\nfunction measureScrollbar() {\n  const div = document.createElement('div');\n\n  div.style.width = '100px';\n  div.style.height = '100px';\n  div.style.overflow = 'scroll';\n  div.style.position = 'absolute';\n  div.style.top = '-9999px';\n\n  document.body.appendChild(div);\n  const scrollbarWidth = div.offsetWidth - div.clientWidth;\n  document.body.removeChild(div);\n\n  return scrollbarWidth;\n}\n\nexport {\n  getData,\n  getSanitizedData,\n  uniq,\n  intersect,\n  deepMerge,\n  unifiedToNative,\n  measureScrollbar,\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}