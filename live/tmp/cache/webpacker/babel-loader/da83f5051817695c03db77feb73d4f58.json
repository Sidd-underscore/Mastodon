{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/upload_area.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { FormattedMessage } from 'react-intl';\n\nvar UploadArea = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(UploadArea, _React$PureComponent);\n\n  function UploadArea() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleKeyUp = function (e) {\n      var keyCode = e.keyCode;\n\n      if (_this.props.active) {\n        switch (keyCode) {\n          case 27:\n            e.preventDefault();\n            e.stopPropagation();\n\n            _this.props.onClose();\n\n            break;\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = UploadArea.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('keyup', this.handleKeyUp);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var active = this.props.active;\n    return /*#__PURE__*/React.createElement(Motion, {\n      defaultStyle: {\n        backgroundOpacity: 0,\n        backgroundScale: 0.95\n      },\n      style: {\n        backgroundOpacity: spring(active ? 1 : 0, {\n          stiffness: 150,\n          damping: 15\n        }),\n        backgroundScale: spring(active ? 1 : 0.95, {\n          stiffness: 200,\n          damping: 3\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, function (_ref) {\n      var backgroundOpacity = _ref.backgroundOpacity,\n          backgroundScale = _ref.backgroundScale;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-area\",\n        style: {\n          visibility: active ? 'visible' : 'hidden',\n          opacity: backgroundOpacity\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-area__drop\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-area__background\",\n        style: {\n          transform: \"scale(\" + backgroundScale + \")\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"upload-area__content\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_area.title\",\n        defaultMessage: \"Drag & drop to upload\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 53\n        }\n      }))));\n    });\n  };\n\n  return UploadArea;\n}(React.PureComponent);\n\nUploadArea.propTypes = {\n  active: PropTypes.bool,\n  onClose: PropTypes.func\n};\nexport { UploadArea as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/upload_area.js"],"names":["React","PropTypes","Motion","spring","FormattedMessage","UploadArea","handleKeyUp","e","keyCode","props","active","preventDefault","stopPropagation","onClose","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","backgroundOpacity","backgroundScale","stiffness","damping","visibility","opacity","transform","PureComponent","propTypes","bool","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,gBAAT,QAAiC,YAAjC;;IAEqBC,U;;;;;;;;;;;;UAOnBC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAMC,OAAO,GAAGD,CAAC,CAACC,OAAlB;;AACA,UAAI,MAAKC,KAAL,CAAWC,MAAf,EAAuB;AACrB,gBAAOF,OAAP;AACA,eAAK,EAAL;AACED,YAAAA,CAAC,CAACI,cAAF;AACAJ,YAAAA,CAAC,CAACK,eAAF;;AACA,kBAAKH,KAAL,CAAWI,OAAX;;AACA;AALF;AAOD;AACF,K;;;;;;;SAEDC,iB,GAAA,6BAAqB;AACnBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKV,WAAtC,EAAmD,KAAnD;AACD,G;;SAEDW,oB,GAAA,gCAAwB;AACtBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoC,KAAKZ,WAAzC;AACD,G;;SAEDa,M,GAAA,kBAAU;AAAA;;AACR,QAAQT,MAAR,GAAmB,KAAKD,KAAxB,CAAQC,MAAR;AAEA,wBACE,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE;AAAEU,QAAAA,iBAAiB,EAAE,CAArB;AAAwBC,QAAAA,eAAe,EAAE;AAAzC,OAAtB;AAAuE,MAAA,KAAK,EAAE;AAAED,QAAAA,iBAAiB,EAAEjB,MAAM,CAACO,MAAM,GAAG,CAAH,GAAO,CAAd,EAAiB;AAAEY,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAAjB,CAA3B;AAA8EF,QAAAA,eAAe,EAAElB,MAAM,CAACO,MAAM,GAAG,CAAH,GAAO,IAAd,EAAoB;AAAEY,UAAAA,SAAS,EAAE,GAAb;AAAkBC,UAAAA,OAAO,EAAE;AAA3B,SAApB;AAArG,OAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA,UAAGH,iBAAH,QAAGA,iBAAH;AAAA,UAAsBC,eAAtB,QAAsBA,eAAtB;AAAA,0BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEG,UAAAA,UAAU,EAAEd,MAAM,GAAG,SAAH,GAAe,QAAnC;AAA6Ce,UAAAA,OAAO,EAAEL;AAAtD,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,KAAK,EAAE;AAAEM,UAAAA,SAAS,aAAWL,eAAX;AAAX,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsC,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,mBAArB;AAAyC,QAAA,cAAc,EAAC,uBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAtC,CAFF,CADF,CADD;AAAA,KADH,CADF;AAYD,G;;;EA3CqCrB,KAAK,CAAC2B,a;;AAAzBtB,U,CAEZuB,S,GAAY;AACjBlB,EAAAA,MAAM,EAAET,SAAS,CAAC4B,IADD;AAEjBhB,EAAAA,OAAO,EAAEZ,SAAS,CAAC6B;AAFF,C;SAFAzB,U","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class UploadArea extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onClose: PropTypes.func,\n  };\n\n  handleKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    if (this.props.active) {\n      switch(keyCode) {\n      case 27:\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onClose();\n        break;\n      }\n    }\n  }\n\n  componentDidMount () {\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  render () {\n    const { active } = this.props;\n\n    return (\n      <Motion defaultStyle={{ backgroundOpacity: 0, backgroundScale: 0.95 }} style={{ backgroundOpacity: spring(active ? 1 : 0, { stiffness: 150, damping: 15 }), backgroundScale: spring(active ? 1 : 0.95, { stiffness: 200, damping: 3 }) }}>\n        {({ backgroundOpacity, backgroundScale }) => (\n          <div className='upload-area' style={{ visibility: active ? 'visible' : 'hidden', opacity: backgroundOpacity }}>\n            <div className='upload-area__drop'>\n              <div className='upload-area__background' style={{ transform: `scale(${backgroundScale})` }} />\n              <div className='upload-area__content'><FormattedMessage id='upload_area.title' defaultMessage='Drag & drop to upload' /></div>\n            </div>\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"upload_area.title","defaultMessage":"Drag & drop to upload"}]}},"sourceType":"module"}