{"ast":null,"code":"var _excluded = [\"statusIds\", \"featuredStatusIds\", \"onLoadMore\", \"timelineId\"];\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/status_list.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport { debounce } from 'lodash';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport StatusContainer from '../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport LoadGap from './load_gap';\nimport ScrollableList from './scrollable_list';\nimport RegenerationIndicator from 'mastodon/components/regeneration_indicator';\n\nvar StatusList = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(StatusList, _ImmutablePureCompone);\n\n  function StatusList() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.getFeaturedStatusCount = function () {\n      return _this.props.featuredStatusIds ? _this.props.featuredStatusIds.size : 0;\n    };\n\n    _this.getCurrentStatusIndex = function (id, featured) {\n      if (featured) {\n        return _this.props.featuredStatusIds.indexOf(id);\n      } else {\n        return _this.props.statusIds.indexOf(id) + _this.getFeaturedStatusCount();\n      }\n    };\n\n    _this.handleMoveUp = function (id, featured) {\n      var elementIndex = _this.getCurrentStatusIndex(id, featured) - 1;\n\n      _this._selectChild(elementIndex, true);\n    };\n\n    _this.handleMoveDown = function (id, featured) {\n      var elementIndex = _this.getCurrentStatusIndex(id, featured) + 1;\n\n      _this._selectChild(elementIndex, false);\n    };\n\n    _this.handleLoadOlder = debounce(function () {\n      _this.props.onLoadMore(_this.props.statusIds.size > 0 ? _this.props.statusIds.last() : undefined);\n    }, 300, {\n      leading: true\n    });\n\n    _this.setRef = function (c) {\n      _this.node = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = StatusList.prototype;\n\n  _proto._selectChild = function _selectChild(index, align_top) {\n    var container = this.node.node;\n    var element = container.querySelector(\"article:nth-of-type(\" + (index + 1) + \") .focusable\");\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n\n      element.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        statusIds = _this$props.statusIds,\n        featuredStatusIds = _this$props.featuredStatusIds,\n        onLoadMore = _this$props.onLoadMore,\n        timelineId = _this$props.timelineId,\n        other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var isLoading = other.isLoading,\n        isPartial = other.isPartial;\n\n    if (isPartial) {\n      return /*#__PURE__*/React.createElement(RegenerationIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 14\n        }\n      });\n    }\n\n    var scrollableContent = isLoading || statusIds.size > 0 ? statusIds.map(function (statusId, index) {\n      return statusId === null ? /*#__PURE__*/React.createElement(LoadGap, {\n        key: 'gap:' + statusIds.get(index + 1),\n        disabled: isLoading,\n        maxId: index > 0 ? statusIds.get(index - 1) : null,\n        onClick: onLoadMore,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }\n      }) : /*#__PURE__*/React.createElement(StatusContainer, {\n        key: statusId,\n        id: statusId,\n        onMoveUp: _this2.handleMoveUp,\n        onMoveDown: _this2.handleMoveDown,\n        contextType: timelineId,\n        scrollKey: _this2.props.scrollKey,\n        showThread: true,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }\n      });\n    }) : null;\n\n    if (scrollableContent && featuredStatusIds) {\n      scrollableContent = featuredStatusIds.map(function (statusId) {\n        return /*#__PURE__*/React.createElement(StatusContainer, {\n          key: \"f-\" + statusId,\n          id: statusId,\n          featured: true,\n          onMoveUp: _this2.handleMoveUp,\n          onMoveDown: _this2.handleMoveDown,\n          contextType: timelineId,\n          showThread: true,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }\n        });\n      }).concat(scrollableContent);\n    }\n\n    return /*#__PURE__*/React.createElement(ScrollableList, _extends({}, other, {\n      showLoading: isLoading && statusIds.size === 0,\n      onLoadMore: onLoadMore && this.handleLoadOlder,\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }), scrollableContent);\n  };\n\n  return StatusList;\n}(ImmutablePureComponent);\n\nStatusList.propTypes = {\n  scrollKey: PropTypes.string.isRequired,\n  statusIds: ImmutablePropTypes.list.isRequired,\n  featuredStatusIds: ImmutablePropTypes.list,\n  onLoadMore: PropTypes.func,\n  onScrollToTop: PropTypes.func,\n  onScroll: PropTypes.func,\n  trackScroll: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  isPartial: PropTypes.bool,\n  hasMore: PropTypes.bool,\n  prepend: PropTypes.node,\n  emptyMessage: PropTypes.node,\n  alwaysPrepend: PropTypes.bool,\n  timelineId: PropTypes.string\n};\nStatusList.defaultProps = {\n  trackScroll: true\n};\nexport { StatusList as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/status_list.js"],"names":["debounce","React","ImmutablePropTypes","PropTypes","StatusContainer","ImmutablePureComponent","LoadGap","ScrollableList","RegenerationIndicator","StatusList","getFeaturedStatusCount","props","featuredStatusIds","size","getCurrentStatusIndex","id","featured","indexOf","statusIds","handleMoveUp","elementIndex","_selectChild","handleMoveDown","handleLoadOlder","onLoadMore","last","undefined","leading","setRef","c","node","index","align_top","container","element","querySelector","scrollTop","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","render","timelineId","other","isLoading","isPartial","scrollableContent","map","statusId","get","scrollKey","concat","propTypes","string","isRequired","list","func","onScrollToTop","onScroll","trackScroll","bool","hasMore","prepend","emptyMessage","alwaysPrepend","defaultProps"],"mappings":";;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,qBAAP,MAAkC,4CAAlC;;IAEqBC,U;;;;;;;;;;;;UAuBnBC,sB,GAAyB,YAAM;AAC7B,aAAO,MAAKC,KAAL,CAAWC,iBAAX,GAA+B,MAAKD,KAAL,CAAWC,iBAAX,CAA6BC,IAA5D,GAAmE,CAA1E;AACD,K;;UAEDC,qB,GAAwB,UAACC,EAAD,EAAKC,QAAL,EAAkB;AACxC,UAAIA,QAAJ,EAAc;AACZ,eAAO,MAAKL,KAAL,CAAWC,iBAAX,CAA6BK,OAA7B,CAAqCF,EAArC,CAAP;AACD,OAFD,MAEO;AACL,eAAO,MAAKJ,KAAL,CAAWO,SAAX,CAAqBD,OAArB,CAA6BF,EAA7B,IAAmC,MAAKL,sBAAL,EAA1C;AACD;AACF,K;;UAEDS,Y,GAAe,UAACJ,EAAD,EAAKC,QAAL,EAAkB;AAC/B,UAAMI,YAAY,GAAG,MAAKN,qBAAL,CAA2BC,EAA3B,EAA+BC,QAA/B,IAA2C,CAAhE;;AACA,YAAKK,YAAL,CAAkBD,YAAlB,EAAgC,IAAhC;AACD,K;;UAEDE,c,GAAiB,UAACP,EAAD,EAAKC,QAAL,EAAkB;AACjC,UAAMI,YAAY,GAAG,MAAKN,qBAAL,CAA2BC,EAA3B,EAA+BC,QAA/B,IAA2C,CAAhE;;AACA,YAAKK,YAAL,CAAkBD,YAAlB,EAAgC,KAAhC;AACD,K;;UAEDG,e,GAAkBvB,QAAQ,CAAC,YAAM;AAC/B,YAAKW,KAAL,CAAWa,UAAX,CAAsB,MAAKb,KAAL,CAAWO,SAAX,CAAqBL,IAArB,GAA4B,CAA5B,GAAgC,MAAKF,KAAL,CAAWO,SAAX,CAAqBO,IAArB,EAAhC,GAA8DC,SAApF;AACD,KAFyB,EAEvB,GAFuB,EAElB;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFkB,C;;UAkB1BC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,YAAKC,IAAL,GAAYD,CAAZ;AACD,K;;;;;;;SAhBDR,Y,GAAA,sBAAcU,KAAd,EAAqBC,SAArB,EAAgC;AAC9B,QAAMC,SAAS,GAAG,KAAKH,IAAL,CAAUA,IAA5B;AACA,QAAMI,OAAO,GAAGD,SAAS,CAACE,aAAV,2BAA+CJ,KAAK,GAAG,CAAvD,mBAAhB;;AAEA,QAAIG,OAAJ,EAAa;AACX,UAAIF,SAAS,IAAIC,SAAS,CAACG,SAAV,GAAsBF,OAAO,CAACG,SAA/C,EAA0D;AACxDH,QAAAA,OAAO,CAACI,cAAR,CAAuB,IAAvB;AACD,OAFD,MAEO,IAAI,CAACN,SAAD,IAAcC,SAAS,CAACG,SAAV,GAAsBH,SAAS,CAACM,YAAhC,GAA+CL,OAAO,CAACG,SAAR,GAAoBH,OAAO,CAACM,YAA7F,EAA2G;AAChHN,QAAAA,OAAO,CAACI,cAAR,CAAuB,KAAvB;AACD;;AACDJ,MAAAA,OAAO,CAACO,KAAR;AACD;AACF,G;;SAMDC,M,GAAA,kBAAU;AAAA;;AACR,sBAA4E,KAAK/B,KAAjF;AAAA,QAAQO,SAAR,eAAQA,SAAR;AAAA,QAAmBN,iBAAnB,eAAmBA,iBAAnB;AAAA,QAAsCY,UAAtC,eAAsCA,UAAtC;AAAA,QAAkDmB,UAAlD,eAAkDA,UAAlD;AAAA,QAAiEC,KAAjE;;AACA,QAAQC,SAAR,GAAiCD,KAAjC,CAAQC,SAAR;AAAA,QAAmBC,SAAnB,GAAiCF,KAAjC,CAAmBE,SAAnB;;AAEA,QAAIA,SAAJ,EAAe;AACb,0BAAO,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAED,QAAIC,iBAAiB,GAAIF,SAAS,IAAI3B,SAAS,CAACL,IAAV,GAAiB,CAA/B,GACtBK,SAAS,CAAC8B,GAAV,CAAc,UAACC,QAAD,EAAWlB,KAAX;AAAA,aAAqBkB,QAAQ,KAAK,IAAb,gBACjC,oBAAC,OAAD;AACE,QAAA,GAAG,EAAE,SAAS/B,SAAS,CAACgC,GAAV,CAAcnB,KAAK,GAAG,CAAtB,CADhB;AAEE,QAAA,QAAQ,EAAEc,SAFZ;AAGE,QAAA,KAAK,EAAEd,KAAK,GAAG,CAAR,GAAYb,SAAS,CAACgC,GAAV,CAAcnB,KAAK,GAAG,CAAtB,CAAZ,GAAuC,IAHhD;AAIE,QAAA,OAAO,EAAEP,UAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADiC,gBAQjC,oBAAC,eAAD;AACE,QAAA,GAAG,EAAEyB,QADP;AAEE,QAAA,EAAE,EAAEA,QAFN;AAGE,QAAA,QAAQ,EAAE,MAAI,CAAC9B,YAHjB;AAIE,QAAA,UAAU,EAAE,MAAI,CAACG,cAJnB;AAKE,QAAA,WAAW,EAAEqB,UALf;AAME,QAAA,SAAS,EAAE,MAAI,CAAChC,KAAL,CAAWwC,SANxB;AAOE,QAAA,UAAU,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARY;AAAA,KAAd,CADsB,GAmBpB,IAnBJ;;AAqBA,QAAIJ,iBAAiB,IAAInC,iBAAzB,EAA4C;AAC1CmC,MAAAA,iBAAiB,GAAGnC,iBAAiB,CAACoC,GAAlB,CAAsB,UAAAC,QAAQ;AAAA,4BAChD,oBAAC,eAAD;AACE,UAAA,GAAG,SAAOA,QADZ;AAEE,UAAA,EAAE,EAAEA,QAFN;AAGE,UAAA,QAAQ,MAHV;AAIE,UAAA,QAAQ,EAAE,MAAI,CAAC9B,YAJjB;AAKE,UAAA,UAAU,EAAE,MAAI,CAACG,cALnB;AAME,UAAA,WAAW,EAAEqB,UANf;AAOE,UAAA,UAAU,MAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADgD;AAAA,OAA9B,EAUjBS,MAViB,CAUVL,iBAVU,CAApB;AAWD;;AAED,wBACE,oBAAC,cAAD,eAAoBH,KAApB;AAA2B,MAAA,WAAW,EAAEC,SAAS,IAAI3B,SAAS,CAACL,IAAV,KAAmB,CAAxE;AAA2E,MAAA,UAAU,EAAEW,UAAU,IAAI,KAAKD,eAA1G;AAA2H,MAAA,GAAG,EAAE,KAAKK,MAArI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGmB,iBADH,CADF;AAKD,G;;;EAnHqC1C,sB;;AAAnBI,U,CAEZ4C,S,GAAY;AACjBF,EAAAA,SAAS,EAAEhD,SAAS,CAACmD,MAAV,CAAiBC,UADX;AAEjBrC,EAAAA,SAAS,EAAEhB,kBAAkB,CAACsD,IAAnB,CAAwBD,UAFlB;AAGjB3C,EAAAA,iBAAiB,EAAEV,kBAAkB,CAACsD,IAHrB;AAIjBhC,EAAAA,UAAU,EAAErB,SAAS,CAACsD,IAJL;AAKjBC,EAAAA,aAAa,EAAEvD,SAAS,CAACsD,IALR;AAMjBE,EAAAA,QAAQ,EAAExD,SAAS,CAACsD,IANH;AAOjBG,EAAAA,WAAW,EAAEzD,SAAS,CAAC0D,IAPN;AAQjBhB,EAAAA,SAAS,EAAE1C,SAAS,CAAC0D,IARJ;AASjBf,EAAAA,SAAS,EAAE3C,SAAS,CAAC0D,IATJ;AAUjBC,EAAAA,OAAO,EAAE3D,SAAS,CAAC0D,IAVF;AAWjBE,EAAAA,OAAO,EAAE5D,SAAS,CAAC2B,IAXF;AAYjBkC,EAAAA,YAAY,EAAE7D,SAAS,CAAC2B,IAZP;AAajBmC,EAAAA,aAAa,EAAE9D,SAAS,CAAC0D,IAbR;AAcjBlB,EAAAA,UAAU,EAAExC,SAAS,CAACmD;AAdL,C;AAFA7C,U,CAmBZyD,Y,GAAe;AACpBN,EAAAA,WAAW,EAAE;AADO,C;SAnBHnD,U","sourcesContent":["import { debounce } from 'lodash';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport StatusContainer from '../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport LoadGap from './load_gap';\nimport ScrollableList from './scrollable_list';\nimport RegenerationIndicator from 'mastodon/components/regeneration_indicator';\n\nexport default class StatusList extends ImmutablePureComponent {\n\n  static propTypes = {\n    scrollKey: PropTypes.string.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    featuredStatusIds: ImmutablePropTypes.list,\n    onLoadMore: PropTypes.func,\n    onScrollToTop: PropTypes.func,\n    onScroll: PropTypes.func,\n    trackScroll: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    isPartial: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    prepend: PropTypes.node,\n    emptyMessage: PropTypes.node,\n    alwaysPrepend: PropTypes.bool,\n    timelineId: PropTypes.string,\n  };\n\n  static defaultProps = {\n    trackScroll: true,\n  };\n\n  getFeaturedStatusCount = () => {\n    return this.props.featuredStatusIds ? this.props.featuredStatusIds.size : 0;\n  }\n\n  getCurrentStatusIndex = (id, featured) => {\n    if (featured) {\n      return this.props.featuredStatusIds.indexOf(id);\n    } else {\n      return this.props.statusIds.indexOf(id) + this.getFeaturedStatusCount();\n    }\n  }\n\n  handleMoveUp = (id, featured) => {\n    const elementIndex = this.getCurrentStatusIndex(id, featured) - 1;\n    this._selectChild(elementIndex, true);\n  }\n\n  handleMoveDown = (id, featured) => {\n    const elementIndex = this.getCurrentStatusIndex(id, featured) + 1;\n    this._selectChild(elementIndex, false);\n  }\n\n  handleLoadOlder = debounce(() => {\n    this.props.onLoadMore(this.props.statusIds.size > 0 ? this.props.statusIds.last() : undefined);\n  }, 300, { leading: true })\n\n  _selectChild (index, align_top) {\n    const container = this.node.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  render () {\n    const { statusIds, featuredStatusIds, onLoadMore, timelineId, ...other }  = this.props;\n    const { isLoading, isPartial } = other;\n\n    if (isPartial) {\n      return <RegenerationIndicator />;\n    }\n\n    let scrollableContent = (isLoading || statusIds.size > 0) ? (\n      statusIds.map((statusId, index) => statusId === null ? (\n        <LoadGap\n          key={'gap:' + statusIds.get(index + 1)}\n          disabled={isLoading}\n          maxId={index > 0 ? statusIds.get(index - 1) : null}\n          onClick={onLoadMore}\n        />\n      ) : (\n        <StatusContainer\n          key={statusId}\n          id={statusId}\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          contextType={timelineId}\n          scrollKey={this.props.scrollKey}\n          showThread\n        />\n      ))\n    ) : null;\n\n    if (scrollableContent && featuredStatusIds) {\n      scrollableContent = featuredStatusIds.map(statusId => (\n        <StatusContainer\n          key={`f-${statusId}`}\n          id={statusId}\n          featured\n          onMoveUp={this.handleMoveUp}\n          onMoveDown={this.handleMoveDown}\n          contextType={timelineId}\n          showThread\n        />\n      )).concat(scrollableContent);\n    }\n\n    return (\n      <ScrollableList {...other} showLoading={isLoading && statusIds.size === 0} onLoadMore={onLoadMore && this.handleLoadOlder} ref={this.setRef}>\n        {scrollableContent}\n      </ScrollableList>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}