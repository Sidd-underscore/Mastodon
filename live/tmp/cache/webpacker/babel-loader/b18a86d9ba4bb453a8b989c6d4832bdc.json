{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/list_adder/components/list.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListAdder, addToListAdder } from '../../../actions/lists';\nimport Icon from 'mastodon/components/icon';\nvar messages = defineMessages({\n  remove: {\n    \"id\": \"lists.account.remove\",\n    \"defaultMessage\": \"Remove from list\"\n  },\n  add: {\n    \"id\": \"lists.account.add\",\n    \"defaultMessage\": \"Add to list\"\n  }\n});\n\nvar MapStateToProps = function MapStateToProps(state, _ref) {\n  var listId = _ref.listId,\n      added = _ref.added;\n  return {\n    list: state.get('lists').get(listId),\n    added: typeof added === 'undefined' ? state.getIn(['listAdder', 'lists', 'items']).includes(listId) : added\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {\n  var listId = _ref2.listId;\n  return {\n    onRemove: function onRemove() {\n      return dispatch(removeFromListAdder(listId));\n    },\n    onAdd: function onAdd() {\n      return dispatch(addToListAdder(listId));\n    }\n  };\n};\n\nvar List = (_dec = connect(MapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(List, _ImmutablePureCompone);\n\n  function List() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = List.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        list = _this$props.list,\n        intl = _this$props.intl,\n        onRemove = _this$props.onRemove,\n        onAdd = _this$props.onAdd,\n        added = _this$props.added;\n    var button;\n\n    if (added) {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"times\",\n        title: intl.formatMessage(messages.remove),\n        onClick: onRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }\n      });\n    } else {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"plus\",\n        title: intl.formatMessage(messages.add),\n        onClick: onAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list__display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"list-ul\",\n      className: \"column-link__icon\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }), list.get('title')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__relationship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, button)));\n  };\n\n  return List;\n}(ImmutablePureComponent), _class2.propTypes = {\n  list: ImmutablePropTypes.map.isRequired,\n  intl: PropTypes.object.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  added: PropTypes.bool\n}, _class2.defaultProps = {\n  added: false\n}, _temp)) || _class) || _class);\nexport { List as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/list_adder/components/list.js"],"names":["React","PropTypes","connect","ImmutablePureComponent","ImmutablePropTypes","IconButton","defineMessages","injectIntl","removeFromListAdder","addToListAdder","Icon","messages","remove","add","MapStateToProps","state","listId","added","list","get","getIn","includes","mapDispatchToProps","dispatch","onRemove","onAdd","List","render","props","intl","button","formatMessage","propTypes","map","isRequired","object","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListAdder, addToListAdder } from '../../../actions/lists';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst MapStateToProps = (state, { listId, added }) => ({\n  list: state.get('lists').get(listId),\n  added: typeof added === 'undefined' ? state.getIn(['listAdder', 'lists', 'items']).includes(listId) : added,\n});\n\nconst mapDispatchToProps = (dispatch, { listId }) => ({\n  onRemove: () => dispatch(removeFromListAdder(listId)),\n  onAdd: () => dispatch(addToListAdder(listId)),\n});\n\nexport default @connect(MapStateToProps, mapDispatchToProps)\n@injectIntl\nclass List extends ImmutablePureComponent {\n\n  static propTypes = {\n    list: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { list, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='list'>\n        <div className='list__wrapper'>\n          <div className='list__display-name'>\n            <Icon id='list-ul' className='column-link__icon' fixedWidth />\n            {list.get('title')}\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lists.account.remove","defaultMessage":"Remove from list"},{"id":"lists.account.add","defaultMessage":"Add to list"}]}},"sourceType":"module"}