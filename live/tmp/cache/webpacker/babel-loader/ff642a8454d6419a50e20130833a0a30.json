{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/media_gallery.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { is } from 'immutable';\nimport IconButton from './icon_button';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { isIOS } from '../is_mobile';\nimport classNames from 'classnames';\nimport { autoPlayGif, cropImages, displayMedia, useBlurhash } from '../initial_state';\nimport { debounce } from 'lodash';\nimport Blurhash from 'mastodon/components/blurhash';\nvar messages = defineMessages({\n  toggle_visible: {\n    \"id\": \"media_gallery.toggle_visible\",\n    \"defaultMessage\": \"{number, plural, one {Hide image} other {Hide images}}\"\n  }\n});\n\nvar Item = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Item, _React$PureComponent);\n\n  function Item() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      loaded: false\n    };\n\n    _this.handleMouseEnter = function (e) {\n      if (_this.hoverToPlay()) {\n        e.target.play();\n      }\n    };\n\n    _this.handleMouseLeave = function (e) {\n      if (_this.hoverToPlay()) {\n        e.target.pause();\n        e.target.currentTime = 0;\n      }\n    };\n\n    _this.handleClick = function (e) {\n      var _this$props = _this.props,\n          index = _this$props.index,\n          onClick = _this$props.onClick;\n\n      if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n        if (_this.hoverToPlay()) {\n          e.target.pause();\n          e.target.currentTime = 0;\n        }\n\n        e.preventDefault();\n        onClick(index);\n      }\n\n      e.stopPropagation();\n    };\n\n    _this.handleImageLoad = function () {\n      _this.setState({\n        loaded: true\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Item.prototype;\n\n  _proto.getAutoPlay = function getAutoPlay() {\n    return this.props.autoplay || autoPlayGif;\n  };\n\n  _proto.hoverToPlay = function hoverToPlay() {\n    var attachment = this.props.attachment;\n    return !this.getAutoPlay() && attachment.get('type') === 'gifv';\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        attachment = _this$props2.attachment,\n        index = _this$props2.index,\n        size = _this$props2.size,\n        standalone = _this$props2.standalone,\n        displayWidth = _this$props2.displayWidth,\n        visible = _this$props2.visible;\n    var width = 50;\n    var height = 100;\n    var top = 'auto';\n    var left = 'auto';\n    var bottom = 'auto';\n    var right = 'auto';\n\n    if (size === 1) {\n      width = 100;\n    }\n\n    if (size === 4 || size === 3 && index > 0) {\n      height = 50;\n    }\n\n    if (size === 2) {\n      if (index === 0) {\n        right = '2px';\n      } else {\n        left = '2px';\n      }\n    } else if (size === 3) {\n      if (index === 0) {\n        right = '2px';\n      } else if (index > 0) {\n        left = '2px';\n      }\n\n      if (index === 1) {\n        bottom = '2px';\n      } else if (index > 1) {\n        top = '2px';\n      }\n    } else if (size === 4) {\n      if (index === 0 || index === 2) {\n        right = '2px';\n      }\n\n      if (index === 1 || index === 3) {\n        left = '2px';\n      }\n\n      if (index < 2) {\n        bottom = '2px';\n      } else {\n        top = '2px';\n      }\n    }\n\n    var thumbnail = '';\n\n    if (attachment.get('type') === 'unknown') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('media-gallery__item', {\n          standalone\n        }),\n        key: attachment.get('id'),\n        style: {\n          left: left,\n          top: top,\n          right: right,\n          bottom: bottom,\n          width: width + \"%\",\n          height: height + \"%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        className: \"media-gallery__item-thumbnail\",\n        href: attachment.get('remote_url') || attachment.get('url'),\n        style: {\n          cursor: 'pointer'\n        },\n        title: attachment.get('description'),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Blurhash, {\n        hash: attachment.get('blurhash'),\n        className: \"media-gallery__preview\",\n        dummy: !useBlurhash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }\n      })));\n    } else if (attachment.get('type') === 'image') {\n      var previewUrl = attachment.get('preview_url');\n      var previewWidth = attachment.getIn(['meta', 'small', 'width']);\n      var originalUrl = attachment.get('url');\n      var originalWidth = attachment.getIn(['meta', 'original', 'width']);\n      var hasSize = typeof originalWidth === 'number' && typeof previewWidth === 'number';\n      var srcSet = hasSize ? originalUrl + \" \" + originalWidth + \"w, \" + previewUrl + \" \" + previewWidth + \"w\" : null;\n      var sizes = hasSize && displayWidth > 0 ? displayWidth * (width / 100) + \"px\" : null;\n      var focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n      var focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n      var x = (focusX / 2 + .5) * 100;\n      var y = (focusY / -2 + .5) * 100;\n      thumbnail = /*#__PURE__*/React.createElement(\"a\", {\n        className: \"media-gallery__item-thumbnail\",\n        href: attachment.get('remote_url') || originalUrl,\n        onClick: this.handleClick,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: previewUrl,\n        srcSet: srcSet,\n        sizes: sizes,\n        alt: attachment.get('description'),\n        title: attachment.get('description'),\n        style: {\n          objectPosition: x + \"% \" + y + \"%\"\n        },\n        onLoad: this.handleImageLoad,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }\n      }));\n    } else if (attachment.get('type') === 'gifv') {\n      var autoPlay = !isIOS() && this.getAutoPlay();\n      thumbnail = /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('media-gallery__gifv', {\n          autoplay: autoPlay\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"video\", {\n        className: \"media-gallery__item-gifv-thumbnail\",\n        \"aria-label\": attachment.get('description'),\n        title: attachment.get('description'),\n        role: \"application\",\n        src: attachment.get('url'),\n        onClick: this.handleClick,\n        onMouseEnter: this.handleMouseEnter,\n        onMouseLeave: this.handleMouseLeave,\n        autoPlay: autoPlay,\n        loop: true,\n        muted: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"media-gallery__gifv__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }\n      }, \"GIF\"));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('media-gallery__item', {\n        standalone\n      }),\n      key: attachment.get('id'),\n      style: {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom,\n        width: width + \"%\",\n        height: height + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Blurhash, {\n      hash: attachment.get('blurhash'),\n      dummy: !useBlurhash,\n      className: classNames('media-gallery__preview', {\n        'media-gallery__preview--hidden': visible && this.state.loaded\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }\n    }), visible && thumbnail);\n  };\n\n  return Item;\n}(React.PureComponent);\n\nItem.propTypes = {\n  attachment: ImmutablePropTypes.map.isRequired,\n  standalone: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  size: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  displayWidth: PropTypes.number,\n  visible: PropTypes.bool.isRequired,\n  autoplay: PropTypes.bool\n};\nItem.defaultProps = {\n  standalone: false,\n  index: 0,\n  size: 1\n};\n\nvar MediaGallery = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent2) {\n  _inheritsLoose(MediaGallery, _React$PureComponent2);\n\n  function MediaGallery() {\n    var _this2;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _React$PureComponent2.call.apply(_React$PureComponent2, [this].concat(args)) || this;\n    _this2.state = {\n      visible: _this2.props.visible !== undefined ? _this2.props.visible : displayMedia !== 'hide_all' && !_this2.props.sensitive || displayMedia === 'show_all',\n      width: _this2.props.defaultWidth\n    };\n    _this2.handleResize = debounce(function () {\n      if (_this2.node) {\n        _this2._setDimensions();\n      }\n    }, 250, {\n      trailing: true\n    });\n\n    _this2.handleOpen = function () {\n      if (_this2.props.onToggleVisibility) {\n        _this2.props.onToggleVisibility();\n      } else {\n        _this2.setState({\n          visible: !_this2.state.visible\n        });\n      }\n    };\n\n    _this2.handleClick = function (index) {\n      _this2.props.onOpenMedia(_this2.props.media, index);\n    };\n\n    _this2.handleRef = function (c) {\n      _this2.node = c;\n\n      if (_this2.node) {\n        _this2._setDimensions();\n      }\n    };\n\n    return _this2;\n  }\n\n  var _proto2 = MediaGallery.prototype;\n\n  _proto2.componentDidMount = function componentDidMount() {\n    window.addEventListener('resize', this.handleResize, {\n      passive: true\n    });\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize);\n  };\n\n  _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (!is(nextProps.media, this.props.media) && nextProps.visible === undefined) {\n      this.setState({\n        visible: displayMedia !== 'hide_all' && !nextProps.sensitive || displayMedia === 'show_all'\n      });\n    } else if (!is(nextProps.visible, this.props.visible) && nextProps.visible !== undefined) {\n      this.setState({\n        visible: nextProps.visible\n      });\n    }\n  };\n\n  _proto2._setDimensions = function _setDimensions() {\n    var width = this.node.offsetWidth; // offsetWidth triggers a layout, so only calculate when we need to\n\n    if (this.props.cacheWidth) {\n      this.props.cacheWidth(width);\n    }\n\n    this.setState({\n      width: width\n    });\n  };\n\n  _proto2.isFullSizeEligible = function isFullSizeEligible() {\n    var media = this.props.media;\n    return media.size === 1 && media.getIn([0, 'meta', 'small', 'aspect']);\n  };\n\n  _proto2.render = function render() {\n    var _this3 = this;\n\n    var _this$props3 = this.props,\n        media = _this$props3.media,\n        intl = _this$props3.intl,\n        sensitive = _this$props3.sensitive,\n        height = _this$props3.height,\n        defaultWidth = _this$props3.defaultWidth,\n        standalone = _this$props3.standalone,\n        autoplay = _this$props3.autoplay;\n    var visible = this.state.visible;\n    var width = this.state.width || defaultWidth;\n    var children, spoilerButton;\n    var style = {};\n\n    if (this.isFullSizeEligible() && (standalone || !cropImages)) {\n      if (width) {\n        style.height = width / this.props.media.getIn([0, 'meta', 'small', 'aspect']);\n      }\n    } else if (width) {\n      style.height = width / (16 / 9);\n    } else {\n      style.height = height;\n    }\n\n    var size = media.take(4).size;\n    var uncached = media.every(function (attachment) {\n      return attachment.get('type') === 'unknown';\n    });\n\n    if (standalone && this.isFullSizeEligible()) {\n      children = /*#__PURE__*/React.createElement(Item, {\n        standalone: true,\n        autoplay: autoplay,\n        onClick: this.handleClick,\n        attachment: media.get(0),\n        displayWidth: width,\n        visible: visible,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 18\n        }\n      });\n    } else {\n      children = media.take(4).map(function (attachment, i) {\n        return /*#__PURE__*/React.createElement(Item, {\n          key: attachment.get('id'),\n          autoplay: autoplay,\n          onClick: _this3.handleClick,\n          attachment: attachment,\n          index: i,\n          size: size,\n          displayWidth: width,\n          visible: visible || uncached,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 55\n          }\n        });\n      });\n    }\n\n    if (uncached) {\n      spoilerButton = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        disabled: true,\n        className: \"spoiler-button__overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spoiler-button__overlay__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.uncached_media_warning\",\n        defaultMessage: \"Not available\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 60\n        }\n      })));\n    } else if (visible) {\n      spoilerButton = /*#__PURE__*/React.createElement(IconButton, {\n        title: intl.formatMessage(messages.toggle_visible, {\n          number: size\n        }),\n        icon: \"eye-slash\",\n        overlay: true,\n        onClick: this.handleOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 23\n        }\n      });\n    } else {\n      spoilerButton = /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: this.handleOpen,\n        className: \"spoiler-button__overlay\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"spoiler-button__overlay__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }\n      }, sensitive ? /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.sensitive_warning\",\n        defaultMessage: \"Sensitive content\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 73\n        }\n      }) : /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"status.media_hidden\",\n        defaultMessage: \"Media hidden\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 161\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-gallery\",\n      style: style,\n      ref: this.handleRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('spoiler-button', {\n        'spoiler-button--minified': visible && !uncached,\n        'spoiler-button--click-thru': uncached\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }\n    }, spoilerButton), children);\n  };\n\n  return MediaGallery;\n}(React.PureComponent), _class2.propTypes = {\n  sensitive: PropTypes.bool,\n  standalone: PropTypes.bool,\n  media: ImmutablePropTypes.list.isRequired,\n  size: PropTypes.object,\n  height: PropTypes.number.isRequired,\n  onOpenMedia: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired,\n  defaultWidth: PropTypes.number,\n  cacheWidth: PropTypes.func,\n  visible: PropTypes.bool,\n  autoplay: PropTypes.bool,\n  onToggleVisibility: PropTypes.func\n}, _class2.defaultProps = {\n  standalone: false\n}, _temp)) || _class;\n\nexport { MediaGallery as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/media_gallery.js"],"names":["React","ImmutablePropTypes","PropTypes","is","IconButton","defineMessages","injectIntl","FormattedMessage","isIOS","classNames","autoPlayGif","cropImages","displayMedia","useBlurhash","debounce","Blurhash","messages","toggle_visible","Item","state","loaded","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","props","index","onClick","button","ctrlKey","metaKey","preventDefault","stopPropagation","handleImageLoad","setState","getAutoPlay","autoplay","attachment","get","render","size","standalone","displayWidth","visible","width","height","top","left","bottom","right","thumbnail","cursor","previewUrl","previewWidth","getIn","originalUrl","originalWidth","hasSize","srcSet","sizes","focusX","focusY","x","y","objectPosition","autoPlay","PureComponent","propTypes","map","isRequired","bool","number","func","defaultProps","MediaGallery","undefined","sensitive","defaultWidth","handleResize","node","_setDimensions","trailing","handleOpen","onToggleVisibility","onOpenMedia","media","handleRef","c","componentDidMount","window","addEventListener","passive","componentWillUnmount","removeEventListener","componentWillReceiveProps","nextProps","offsetWidth","cacheWidth","isFullSizeEligible","intl","children","spoilerButton","style","take","uncached","every","i","formatMessage","list","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { is } from 'immutable';\nimport IconButton from './icon_button';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { isIOS } from '../is_mobile';\nimport classNames from 'classnames';\nimport { autoPlayGif, cropImages, displayMedia, useBlurhash } from '../initial_state';\nimport { debounce } from 'lodash';\nimport Blurhash from 'mastodon/components/blurhash';\n\nconst messages = defineMessages({\n  toggle_visible: { id: 'media_gallery.toggle_visible', defaultMessage: '{number, plural, one {Hide image} other {Hide images}}' },\n});\n\nclass Item extends React.PureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    standalone: PropTypes.bool,\n    index: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    displayWidth: PropTypes.number,\n    visible: PropTypes.bool.isRequired,\n    autoplay: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    standalone: false,\n    index: 0,\n    size: 1,\n  };\n\n  state = {\n    loaded: false,\n  };\n\n  handleMouseEnter = (e) => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  }\n\n  handleMouseLeave = (e) => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  }\n\n  getAutoPlay() {\n    return this.props.autoplay || autoPlayGif;\n  }\n\n  hoverToPlay () {\n    const { attachment } = this.props;\n    return !this.getAutoPlay() && attachment.get('type') === 'gifv';\n  }\n\n  handleClick = (e) => {\n    const { index, onClick } = this.props;\n\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      if (this.hoverToPlay()) {\n        e.target.pause();\n        e.target.currentTime = 0;\n      }\n      e.preventDefault();\n      onClick(index);\n    }\n\n    e.stopPropagation();\n  }\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  }\n\n  render () {\n    const { attachment, index, size, standalone, displayWidth, visible } = this.props;\n\n    let width  = 50;\n    let height = 100;\n    let top    = 'auto';\n    let left   = 'auto';\n    let bottom = 'auto';\n    let right  = 'auto';\n\n    if (size === 1) {\n      width = 100;\n    }\n\n    if (size === 4 || (size === 3 && index > 0)) {\n      height = 50;\n    }\n\n    if (size === 2) {\n      if (index === 0) {\n        right = '2px';\n      } else {\n        left = '2px';\n      }\n    } else if (size === 3) {\n      if (index === 0) {\n        right = '2px';\n      } else if (index > 0) {\n        left = '2px';\n      }\n\n      if (index === 1) {\n        bottom = '2px';\n      } else if (index > 1) {\n        top = '2px';\n      }\n    } else if (size === 4) {\n      if (index === 0 || index === 2) {\n        right = '2px';\n      }\n\n      if (index === 1 || index === 3) {\n        left = '2px';\n      }\n\n      if (index < 2) {\n        bottom = '2px';\n      } else {\n        top = '2px';\n      }\n    }\n\n    let thumbnail = '';\n\n    if (attachment.get('type') === 'unknown') {\n      return (\n        <div className={classNames('media-gallery__item', { standalone })} key={attachment.get('id')} style={{ left: left, top: top, right: right, bottom: bottom, width: `${width}%`, height: `${height}%` }}>\n          <a className='media-gallery__item-thumbnail' href={attachment.get('remote_url') || attachment.get('url')} style={{ cursor: 'pointer' }} title={attachment.get('description')} target='_blank' rel='noopener noreferrer'>\n            <Blurhash\n              hash={attachment.get('blurhash')}\n              className='media-gallery__preview'\n              dummy={!useBlurhash}\n            />\n          </a>\n        </div>\n      );\n    } else if (attachment.get('type') === 'image') {\n      const previewUrl   = attachment.get('preview_url');\n      const previewWidth = attachment.getIn(['meta', 'small', 'width']);\n\n      const originalUrl   = attachment.get('url');\n      const originalWidth = attachment.getIn(['meta', 'original', 'width']);\n\n      const hasSize = typeof originalWidth === 'number' && typeof previewWidth === 'number';\n\n      const srcSet = hasSize ? `${originalUrl} ${originalWidth}w, ${previewUrl} ${previewWidth}w` : null;\n      const sizes  = hasSize && (displayWidth > 0) ? `${displayWidth * (width / 100)}px` : null;\n\n      const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n      const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n      const x      = ((focusX /  2) + .5) * 100;\n      const y      = ((focusY / -2) + .5) * 100;\n\n      thumbnail = (\n        <a\n          className='media-gallery__item-thumbnail'\n          href={attachment.get('remote_url') || originalUrl}\n          onClick={this.handleClick}\n          target='_blank'\n          rel='noopener noreferrer'\n        >\n          <img\n            src={previewUrl}\n            srcSet={srcSet}\n            sizes={sizes}\n            alt={attachment.get('description')}\n            title={attachment.get('description')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        </a>\n      );\n    } else if (attachment.get('type') === 'gifv') {\n      const autoPlay = !isIOS() && this.getAutoPlay();\n\n      thumbnail = (\n        <div className={classNames('media-gallery__gifv', { autoplay: autoPlay })}>\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            title={attachment.get('description')}\n            role='application'\n            src={attachment.get('url')}\n            onClick={this.handleClick}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={autoPlay}\n            loop\n            muted\n          />\n\n          <span className='media-gallery__gifv__label'>GIF</span>\n        </div>\n      );\n    }\n\n    return (\n      <div className={classNames('media-gallery__item', { standalone })} key={attachment.get('id')} style={{ left: left, top: top, right: right, bottom: bottom, width: `${width}%`, height: `${height}%` }}>\n        <Blurhash\n          hash={attachment.get('blurhash')}\n          dummy={!useBlurhash}\n          className={classNames('media-gallery__preview', {\n            'media-gallery__preview--hidden': visible && this.state.loaded,\n          })}\n        />\n        {visible && thumbnail}\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass MediaGallery extends React.PureComponent {\n\n  static propTypes = {\n    sensitive: PropTypes.bool,\n    standalone: PropTypes.bool,\n    media: ImmutablePropTypes.list.isRequired,\n    size: PropTypes.object,\n    height: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    defaultWidth: PropTypes.number,\n    cacheWidth: PropTypes.func,\n    visible: PropTypes.bool,\n    autoplay: PropTypes.bool,\n    onToggleVisibility: PropTypes.func,\n  };\n\n  static defaultProps = {\n    standalone: false,\n  };\n\n  state = {\n    visible: this.props.visible !== undefined ? this.props.visible : (displayMedia !== 'hide_all' && !this.props.sensitive || displayMedia === 'show_all'),\n    width: this.props.defaultWidth,\n  };\n\n  componentDidMount () {\n    window.addEventListener('resize', this.handleResize, { passive: true });\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('resize', this.handleResize);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (!is(nextProps.media, this.props.media) && nextProps.visible === undefined) {\n      this.setState({ visible: displayMedia !== 'hide_all' && !nextProps.sensitive || displayMedia === 'show_all' });\n    } else if (!is(nextProps.visible, this.props.visible) && nextProps.visible !== undefined) {\n      this.setState({ visible: nextProps.visible });\n    }\n  }\n\n  handleResize = debounce(() => {\n    if (this.node) {\n      this._setDimensions();\n    }\n  }, 250, {\n    trailing: true,\n  });\n\n  handleOpen = () => {\n    if (this.props.onToggleVisibility) {\n      this.props.onToggleVisibility();\n    } else {\n      this.setState({ visible: !this.state.visible });\n    }\n  }\n\n  handleClick = (index) => {\n    this.props.onOpenMedia(this.props.media, index);\n  }\n\n  handleRef = c => {\n    this.node = c;\n\n    if (this.node) {\n      this._setDimensions();\n    }\n  }\n\n  _setDimensions () {\n    const width = this.node.offsetWidth;\n\n    // offsetWidth triggers a layout, so only calculate when we need to\n    if (this.props.cacheWidth) {\n      this.props.cacheWidth(width);\n    }\n\n    this.setState({\n      width: width,\n    });\n  }\n\n  isFullSizeEligible() {\n    const { media } = this.props;\n    return media.size === 1 && media.getIn([0, 'meta', 'small', 'aspect']);\n  }\n\n  render () {\n    const { media, intl, sensitive, height, defaultWidth, standalone, autoplay } = this.props;\n    const { visible } = this.state;\n\n    const width = this.state.width || defaultWidth;\n\n    let children, spoilerButton;\n\n    const style = {};\n\n    if (this.isFullSizeEligible() && (standalone || !cropImages)) {\n      if (width) {\n        style.height = width / this.props.media.getIn([0, 'meta', 'small', 'aspect']);\n      }\n    } else if (width) {\n      style.height = width / (16/9);\n    } else {\n      style.height = height;\n    }\n\n    const size     = media.take(4).size;\n    const uncached = media.every(attachment => attachment.get('type') === 'unknown');\n\n    if (standalone && this.isFullSizeEligible()) {\n      children = <Item standalone autoplay={autoplay} onClick={this.handleClick} attachment={media.get(0)} displayWidth={width} visible={visible} />;\n    } else {\n      children = media.take(4).map((attachment, i) => <Item key={attachment.get('id')} autoplay={autoplay} onClick={this.handleClick} attachment={attachment} index={i} size={size} displayWidth={width} visible={visible || uncached} />);\n    }\n\n    if (uncached) {\n      spoilerButton = (\n        <button type='button' disabled className='spoiler-button__overlay'>\n          <span className='spoiler-button__overlay__label'><FormattedMessage id='status.uncached_media_warning' defaultMessage='Not available' /></span>\n        </button>\n      );\n    } else if (visible) {\n      spoilerButton = <IconButton title={intl.formatMessage(messages.toggle_visible, { number: size })} icon='eye-slash' overlay onClick={this.handleOpen} />;\n    } else {\n      spoilerButton = (\n        <button type='button' onClick={this.handleOpen} className='spoiler-button__overlay'>\n          <span className='spoiler-button__overlay__label'>{sensitive ? <FormattedMessage id='status.sensitive_warning' defaultMessage='Sensitive content' /> : <FormattedMessage id='status.media_hidden' defaultMessage='Media hidden' />}</span>\n        </button>\n      );\n    }\n\n    return (\n      <div className='media-gallery' style={style} ref={this.handleRef}>\n        <div className={classNames('spoiler-button', { 'spoiler-button--minified': visible && !uncached, 'spoiler-button--click-thru': uncached })}>\n          {spoilerButton}\n        </div>\n\n        {children}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"media_gallery.toggle_visible","defaultMessage":"{number, plural, one {Hide image} other {Hide images}}"},{"id":"status.uncached_media_warning","defaultMessage":"Not available"},{"id":"status.sensitive_warning","defaultMessage":"Sensitive content"},{"id":"status.media_hidden","defaultMessage":"Media hidden"}]}},"sourceType":"module"}