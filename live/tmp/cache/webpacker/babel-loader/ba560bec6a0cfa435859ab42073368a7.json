{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/follow_requests/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport AccountAuthorizeContainer from './containers/account_authorize_container';\nimport { fetchFollowRequests, expandFollowRequests } from '../../actions/accounts';\nimport ScrollableList from '../../components/scrollable_list';\nimport { me } from '../../initial_state';\nvar messages = defineMessages({\n  heading: {\n    \"id\": \"column.follow_requests\",\n    \"defaultMessage\": \"Follow requests\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accountIds: state.getIn(['user_lists', 'follow_requests', 'items']),\n    isLoading: state.getIn(['user_lists', 'follow_requests', 'isLoading'], true),\n    hasMore: !!state.getIn(['user_lists', 'follow_requests', 'next']),\n    locked: !!state.getIn(['accounts', me, 'locked']),\n    domain: state.getIn(['meta', 'domain'])\n  };\n};\n\nvar FollowRequests = (_dec = connect(mapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(FollowRequests, _ImmutablePureCompone);\n\n  function FollowRequests() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.handleLoadMore = debounce(function () {\n      _this.props.dispatch(expandFollowRequests());\n    }, 300, {\n      leading: true\n    });\n    return _this;\n  }\n\n  var _proto = FollowRequests.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.props.dispatch(fetchFollowRequests());\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        accountIds = _this$props.accountIds,\n        hasMore = _this$props.hasMore,\n        multiColumn = _this$props.multiColumn,\n        locked = _this$props.locked,\n        domain = _this$props.domain,\n        isLoading = _this$props.isLoading;\n\n    if (!accountIds) {\n      return /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    var emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"empty_column.follow_requests\",\n      defaultMessage: \"You don't have any follow requests yet. When you receive one, it will show up here.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }\n    });\n    var unlockedPrependMessage = locked ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"follow_requests-unlocked_explanation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"follow_requests.unlocked_explanation\",\n      defaultMessage: \"Even though your account is not locked, the {domain} staff thought you might want to review follow requests from these accounts manually.\",\n      values: {\n        domain: domain\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }));\n    return /*#__PURE__*/React.createElement(Column, {\n      bindToDocument: !multiColumn,\n      icon: \"user-plus\",\n      heading: intl.formatMessage(messages.heading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnBackButtonSlim, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ScrollableList, {\n      scrollKey: \"follow_requests\",\n      onLoadMore: this.handleLoadMore,\n      hasMore: hasMore,\n      isLoading: isLoading,\n      emptyMessage: emptyMessage,\n      bindToDocument: !multiColumn,\n      prepend: unlockedPrependMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, accountIds.map(function (id) {\n      return /*#__PURE__*/React.createElement(AccountAuthorizeContainer, {\n        key: id,\n        id: id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      });\n    })));\n  };\n\n  return FollowRequests;\n}(ImmutablePureComponent), _class2.propTypes = {\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  accountIds: ImmutablePropTypes.list,\n  locked: PropTypes.bool,\n  domain: PropTypes.string,\n  intl: PropTypes.object.isRequired,\n  multiColumn: PropTypes.bool\n}, _temp)) || _class) || _class);\nexport { FollowRequests as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/follow_requests/index.js"],"names":["React","connect","defineMessages","injectIntl","FormattedMessage","ImmutablePureComponent","PropTypes","ImmutablePropTypes","debounce","LoadingIndicator","Column","ColumnBackButtonSlim","AccountAuthorizeContainer","fetchFollowRequests","expandFollowRequests","ScrollableList","me","messages","heading","mapStateToProps","state","accountIds","getIn","isLoading","hasMore","locked","domain","FollowRequests","handleLoadMore","props","dispatch","leading","componentWillMount","render","intl","multiColumn","emptyMessage","unlockedPrependMessage","formatMessage","map","id","propTypes","params","object","isRequired","func","bool","list","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport AccountAuthorizeContainer from './containers/account_authorize_container';\nimport { fetchFollowRequests, expandFollowRequests } from '../../actions/accounts';\nimport ScrollableList from '../../components/scrollable_list';\nimport { me } from '../../initial_state';\n\nconst messages = defineMessages({\n  heading: { id: 'column.follow_requests', defaultMessage: 'Follow requests' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'follow_requests', 'items']),\n  isLoading: state.getIn(['user_lists', 'follow_requests', 'isLoading'], true),\n  hasMore: !!state.getIn(['user_lists', 'follow_requests', 'next']),\n  locked: !!state.getIn(['accounts', me, 'locked']),\n  domain: state.getIn(['meta', 'domain']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass FollowRequests extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    locked: PropTypes.bool,\n    domain: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchFollowRequests());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFollowRequests());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, accountIds, hasMore, multiColumn, locked, domain, isLoading } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.follow_requests' defaultMessage=\"You don't have any follow requests yet. When you receive one, it will show up here.\" />;\n    const unlockedPrependMessage = locked ? null : (\n      <div className='follow_requests-unlocked_explanation'>\n        <FormattedMessage\n          id='follow_requests.unlocked_explanation'\n          defaultMessage='Even though your account is not locked, the {domain} staff thought you might want to review follow requests from these accounts manually.'\n          values={{ domain: domain }}\n        />\n      </div>\n    );\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='user-plus' heading={intl.formatMessage(messages.heading)}>\n        <ColumnBackButtonSlim />\n        <ScrollableList\n          scrollKey='follow_requests'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n          prepend={unlockedPrependMessage}\n        >\n          {accountIds.map(id =>\n            <AccountAuthorizeContainer key={id} id={id} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column.follow_requests","defaultMessage":"Follow requests"},{"id":"empty_column.follow_requests","defaultMessage":"You don't have any follow requests yet. When you receive one, it will show up here."},{"id":"follow_requests.unlocked_explanation","defaultMessage":"Even though your account is not locked, the {domain} staff thought you might want to review follow requests from these accounts manually."}]}},"sourceType":"module"}