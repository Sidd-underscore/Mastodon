{"ast":null,"code":"import { List as ImmutableList, fromJS as ConvertToImmutable } from 'immutable';\nimport { CUSTOM_EMOJIS_FETCH_SUCCESS } from '../actions/custom_emojis';\nimport { search as emojiSearch } from '../features/emoji/emoji_mart_search_light';\nimport { buildCustomEmojis } from '../features/emoji/emoji';\nvar initialState = ImmutableList([]);\nexport default function custom_emojis(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  if (action.type === CUSTOM_EMOJIS_FETCH_SUCCESS) {\n    state = ConvertToImmutable(action.custom_emojis);\n    emojiSearch('', {\n      custom: buildCustomEmojis(state)\n    });\n  }\n\n  return state;\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/custom_emojis.js"],"names":["List","ImmutableList","fromJS","ConvertToImmutable","CUSTOM_EMOJIS_FETCH_SUCCESS","search","emojiSearch","buildCustomEmojis","initialState","custom_emojis","state","action","type","custom"],"mappings":"AAAA,SAASA,IAAI,IAAIC,aAAjB,EAAgCC,MAAM,IAAIC,kBAA1C,QAAoE,WAApE;AACA,SAASC,2BAAT,QAA4C,0BAA5C;AACA,SAASC,MAAM,IAAIC,WAAnB,QAAsC,2CAAtC;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AAEA,IAAMC,YAAY,GAAGP,aAAa,CAAC,EAAD,CAAlC;AAEA,eAAe,SAASQ,aAAT,CAAuBC,KAAvB,EAA6CC,MAA7C,EAAqD;AAAA,MAA9BD,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBF,YAAsB;AAAA;;AAClE,MAAGG,MAAM,CAACC,IAAP,KAAgBR,2BAAnB,EAAgD;AAC9CM,IAAAA,KAAK,GAAGP,kBAAkB,CAACQ,MAAM,CAACF,aAAR,CAA1B;AACAH,IAAAA,WAAW,CAAC,EAAD,EAAK;AAAEO,MAAAA,MAAM,EAAEN,iBAAiB,CAACG,KAAD;AAA3B,KAAL,CAAX;AACD;;AAED,SAAOA,KAAP;AACD;AAAA","sourcesContent":["import { List as ImmutableList, fromJS as ConvertToImmutable } from 'immutable';\nimport { CUSTOM_EMOJIS_FETCH_SUCCESS } from '../actions/custom_emojis';\nimport { search as emojiSearch } from '../features/emoji/emoji_mart_search_light';\nimport { buildCustomEmojis } from '../features/emoji/emoji';\n\nconst initialState = ImmutableList([]);\n\nexport default function custom_emojis(state = initialState, action) {\n  if(action.type === CUSTOM_EMOJIS_FETCH_SUCCESS) {\n    state = ConvertToImmutable(action.custom_emojis);\n    emojiSearch('', { custom: buildCustomEmojis(state) });\n  }\n\n  return state;\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}