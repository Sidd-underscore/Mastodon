{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/action_bar.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nvar messages = defineMessages({\n  edit_profile: {\n    \"id\": \"account.edit_profile\",\n    \"defaultMessage\": \"Edit profile\"\n  },\n  pins: {\n    \"id\": \"navigation_bar.pins\",\n    \"defaultMessage\": \"Pinned toots\"\n  },\n  preferences: {\n    \"id\": \"navigation_bar.preferences\",\n    \"defaultMessage\": \"Preferences\"\n  },\n  follow_requests: {\n    \"id\": \"navigation_bar.follow_requests\",\n    \"defaultMessage\": \"Follow requests\"\n  },\n  favourites: {\n    \"id\": \"navigation_bar.favourites\",\n    \"defaultMessage\": \"Favourites\"\n  },\n  lists: {\n    \"id\": \"navigation_bar.lists\",\n    \"defaultMessage\": \"Lists\"\n  },\n  blocks: {\n    \"id\": \"navigation_bar.blocks\",\n    \"defaultMessage\": \"Blocked users\"\n  },\n  domain_blocks: {\n    \"id\": \"navigation_bar.domain_blocks\",\n    \"defaultMessage\": \"Hidden domains\"\n  },\n  mutes: {\n    \"id\": \"navigation_bar.mutes\",\n    \"defaultMessage\": \"Muted users\"\n  },\n  filters: {\n    \"id\": \"navigation_bar.filters\",\n    \"defaultMessage\": \"Muted words\"\n  },\n  logout: {\n    \"id\": \"navigation_bar.logout\",\n    \"defaultMessage\": \"Logout\"\n  },\n  bookmarks: {\n    \"id\": \"navigation_bar.bookmarks\",\n    \"defaultMessage\": \"Bookmarks\"\n  }\n});\n\nvar ActionBar = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ActionBar, _React$PureComponent);\n\n  function ActionBar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleLogout = function () {\n      _this.props.onLogout();\n    };\n\n    return _this;\n  }\n\n  var _proto = ActionBar.prototype;\n\n  _proto.render = function render() {\n    var intl = this.props.intl;\n    var menu = [];\n    menu.push({\n      text: intl.formatMessage(messages.edit_profile),\n      href: '/settings/profile'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.preferences),\n      href: '/settings/preferences'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.pins),\n      to: '/pinned'\n    });\n    menu.push(null);\n    menu.push({\n      text: intl.formatMessage(messages.follow_requests),\n      to: '/follow_requests'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.favourites),\n      to: '/favourites'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.bookmarks),\n      to: '/bookmarks'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.lists),\n      to: '/lists'\n    });\n    menu.push(null);\n    menu.push({\n      text: intl.formatMessage(messages.mutes),\n      to: '/mutes'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.blocks),\n      to: '/blocks'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.domain_blocks),\n      to: '/domain_blocks'\n    });\n    menu.push({\n      text: intl.formatMessage(messages.filters),\n      href: '/filters'\n    });\n    menu.push(null);\n    menu.push({\n      text: intl.formatMessage(messages.logout),\n      action: this.handleLogout\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose__action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose__action-bar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DropdownMenuContainer, {\n      items: menu,\n      icon: \"chevron-down\",\n      size: 16,\n      direction: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return ActionBar;\n}(React.PureComponent), _class2.propTypes = {\n  account: ImmutablePropTypes.map.isRequired,\n  onLogout: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { ActionBar as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/action_bar.js"],"names":["React","ImmutablePropTypes","PropTypes","DropdownMenuContainer","defineMessages","injectIntl","messages","edit_profile","pins","preferences","follow_requests","favourites","lists","blocks","domain_blocks","mutes","filters","logout","bookmarks","ActionBar","handleLogout","props","onLogout","render","intl","menu","push","text","formatMessage","href","to","action","PureComponent","propTypes","account","map","isRequired","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport DropdownMenuContainer from '../../../containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  edit_profile: { id: 'account.edit_profile', defaultMessage: 'Edit profile' },\n  pins: { id: 'navigation_bar.pins', defaultMessage: 'Pinned toots' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favourites' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  blocks: { id: 'navigation_bar.blocks', defaultMessage: 'Blocked users' },\n  domain_blocks: { id: 'navigation_bar.domain_blocks', defaultMessage: 'Hidden domains' },\n  mutes: { id: 'navigation_bar.mutes', defaultMessage: 'Muted users' },\n  filters: { id: 'navigation_bar.filters', defaultMessage: 'Muted words' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n});\n\nexport default @injectIntl\nclass ActionBar extends React.PureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    onLogout: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleLogout = () => {\n    this.props.onLogout();\n  }\n\n  render () {\n    const { intl } = this.props;\n\n    let menu = [];\n\n    menu.push({ text: intl.formatMessage(messages.edit_profile), href: '/settings/profile' });\n    menu.push({ text: intl.formatMessage(messages.preferences), href: '/settings/preferences' });\n    menu.push({ text: intl.formatMessage(messages.pins), to: '/pinned' });\n    menu.push(null);\n    menu.push({ text: intl.formatMessage(messages.follow_requests), to: '/follow_requests' });\n    menu.push({ text: intl.formatMessage(messages.favourites), to: '/favourites' });\n    menu.push({ text: intl.formatMessage(messages.bookmarks), to: '/bookmarks' });\n    menu.push({ text: intl.formatMessage(messages.lists), to: '/lists' });\n    menu.push(null);\n    menu.push({ text: intl.formatMessage(messages.mutes), to: '/mutes' });\n    menu.push({ text: intl.formatMessage(messages.blocks), to: '/blocks' });\n    menu.push({ text: intl.formatMessage(messages.domain_blocks), to: '/domain_blocks' });\n    menu.push({ text: intl.formatMessage(messages.filters), href: '/filters' });\n    menu.push(null);\n    menu.push({ text: intl.formatMessage(messages.logout), action: this.handleLogout });\n\n    return (\n      <div className='compose__action-bar'>\n        <div className='compose__action-bar-dropdown'>\n          <DropdownMenuContainer items={menu} icon='chevron-down' size={16} direction='right' />\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"account.edit_profile","defaultMessage":"Edit profile"},{"id":"navigation_bar.pins","defaultMessage":"Pinned toots"},{"id":"navigation_bar.preferences","defaultMessage":"Preferences"},{"id":"navigation_bar.follow_requests","defaultMessage":"Follow requests"},{"id":"navigation_bar.favourites","defaultMessage":"Favourites"},{"id":"navigation_bar.lists","defaultMessage":"Lists"},{"id":"navigation_bar.blocks","defaultMessage":"Blocked users"},{"id":"navigation_bar.domain_blocks","defaultMessage":"Hidden domains"},{"id":"navigation_bar.mutes","defaultMessage":"Muted users"},{"id":"navigation_bar.filters","defaultMessage":"Muted words"},{"id":"navigation_bar.logout","defaultMessage":"Logout"},{"id":"navigation_bar.bookmarks","defaultMessage":"Bookmarks"}]}},"sourceType":"module"}