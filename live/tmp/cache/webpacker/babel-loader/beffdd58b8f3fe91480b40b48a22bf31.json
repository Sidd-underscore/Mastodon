{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/containers/timeline_container.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport configureStore from '../store/configureStore';\nimport { hydrateStore } from '../actions/store';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { getLocale } from '../locales';\nimport PublicTimeline from '../features/standalone/public_timeline';\nimport HashtagTimeline from '../features/standalone/hashtag_timeline';\nimport ModalContainer from '../features/ui/containers/modal_container';\nimport initialState from '../initial_state';\n\nvar _getLocale = getLocale(),\n    localeData = _getLocale.localeData,\n    messages = _getLocale.messages;\n\naddLocaleData(localeData);\nvar store = configureStore();\n\nif (initialState) {\n  store.dispatch(hydrateStore(initialState));\n}\n\nvar TimelineContainer = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(TimelineContainer, _React$PureComponent);\n\n  function TimelineContainer() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = TimelineContainer.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        locale = _this$props.locale,\n        hashtag = _this$props.hashtag,\n        local = _this$props.local;\n    var timeline;\n\n    if (hashtag) {\n      timeline = /*#__PURE__*/React.createElement(HashtagTimeline, {\n        hashtag: hashtag,\n        local: local,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 18\n        }\n      });\n    } else {\n      timeline = /*#__PURE__*/React.createElement(PublicTimeline, {\n        local: local,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(IntlProvider, {\n      locale: locale,\n      messages: messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Provider, {\n      store: store,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, timeline, /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(ModalContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }), document.getElementById('modal-container')))));\n  };\n\n  return TimelineContainer;\n}(React.PureComponent);\n\nTimelineContainer.propTypes = {\n  locale: PropTypes.string.isRequired,\n  hashtag: PropTypes.string,\n  local: PropTypes.bool\n};\nTimelineContainer.defaultProps = {\n  local: !initialState.settings.known_fediverse\n};\nexport { TimelineContainer as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/containers/timeline_container.js"],"names":["React","Fragment","ReactDOM","Provider","PropTypes","configureStore","hydrateStore","IntlProvider","addLocaleData","getLocale","PublicTimeline","HashtagTimeline","ModalContainer","initialState","localeData","messages","store","dispatch","TimelineContainer","render","props","locale","hashtag","local","timeline","createPortal","document","getElementById","PureComponent","propTypes","string","isRequired","bool","defaultProps","settings","known_fediverse"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,YAA5C;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,eAAP,MAA4B,yCAA5B;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;AAEA,iBAAiCJ,SAAS,EAA1C;AAAA,IAAQK,UAAR,cAAQA,UAAR;AAAA,IAAoBC,QAApB,cAAoBA,QAApB;;AACAP,aAAa,CAACM,UAAD,CAAb;AAEA,IAAME,KAAK,GAAGX,cAAc,EAA5B;;AAEA,IAAIQ,YAAJ,EAAkB;AAChBG,EAAAA,KAAK,CAACC,QAAN,CAAeX,YAAY,CAACO,YAAD,CAA3B;AACD;;IAEoBK,iB;;;;;;;;;SAYnBC,M,GAAA,kBAAU;AACR,sBAAmC,KAAKC,KAAxC;AAAA,QAAQC,MAAR,eAAQA,MAAR;AAAA,QAAgBC,OAAhB,eAAgBA,OAAhB;AAAA,QAAyBC,KAAzB,eAAyBA,KAAzB;AAEA,QAAIC,QAAJ;;AAEA,QAAIF,OAAJ,EAAa;AACXE,MAAAA,QAAQ,gBAAG,oBAAC,eAAD;AAAiB,QAAA,OAAO,EAAEF,OAA1B;AAAmC,QAAA,KAAK,EAAEC,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD,KAFD,MAEO;AACLC,MAAAA,QAAQ,gBAAG,oBAAC,cAAD;AAAgB,QAAA,KAAK,EAAED,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAX;AACD;;AAED,wBACE,oBAAC,YAAD;AAAc,MAAA,MAAM,EAAEF,MAAtB;AAA8B,MAAA,QAAQ,EAAEN,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAEC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGQ,QADH,eAGGtB,QAAQ,CAACuB,YAAT,eACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAECC,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAFD,CAHH,CADF,CADF,CADF;AAcD,G;;;EArC4C3B,KAAK,CAAC4B,a;;AAAhCV,iB,CAEZW,S,GAAY;AACjBR,EAAAA,MAAM,EAAEjB,SAAS,CAAC0B,MAAV,CAAiBC,UADR;AAEjBT,EAAAA,OAAO,EAAElB,SAAS,CAAC0B,MAFF;AAGjBP,EAAAA,KAAK,EAAEnB,SAAS,CAAC4B;AAHA,C;AAFAd,iB,CAQZe,Y,GAAe;AACpBV,EAAAA,KAAK,EAAE,CAACV,YAAY,CAACqB,QAAb,CAAsBC;AADV,C;SARHjB,iB","sourcesContent":["import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport configureStore from '../store/configureStore';\nimport { hydrateStore } from '../actions/store';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { getLocale } from '../locales';\nimport PublicTimeline from '../features/standalone/public_timeline';\nimport HashtagTimeline from '../features/standalone/hashtag_timeline';\nimport ModalContainer from '../features/ui/containers/modal_container';\nimport initialState from '../initial_state';\n\nconst { localeData, messages } = getLocale();\naddLocaleData(localeData);\n\nconst store = configureStore();\n\nif (initialState) {\n  store.dispatch(hydrateStore(initialState));\n}\n\nexport default class TimelineContainer extends React.PureComponent {\n\n  static propTypes = {\n    locale: PropTypes.string.isRequired,\n    hashtag: PropTypes.string,\n    local: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    local: !initialState.settings.known_fediverse,\n  };\n\n  render () {\n    const { locale, hashtag, local } = this.props;\n\n    let timeline;\n\n    if (hashtag) {\n      timeline = <HashtagTimeline hashtag={hashtag} local={local} />;\n    } else {\n      timeline = <PublicTimeline local={local} />;\n    }\n\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <Provider store={store}>\n          <Fragment>\n            {timeline}\n\n            {ReactDOM.createPortal(\n              <ModalContainer />,\n              document.getElementById('modal-container'),\n            )}\n          </Fragment>\n        </Provider>\n      </IntlProvider>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}