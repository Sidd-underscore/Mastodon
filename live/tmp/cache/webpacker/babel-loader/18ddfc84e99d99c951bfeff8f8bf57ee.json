{"ast":null,"code":"import { REPORT_INIT, REPORT_SUBMIT_REQUEST, REPORT_SUBMIT_SUCCESS, REPORT_SUBMIT_FAIL, REPORT_CANCEL, REPORT_STATUS_TOGGLE, REPORT_COMMENT_CHANGE, REPORT_FORWARD_CHANGE } from '../actions/reports';\nimport { Map as ImmutableMap, Set as ImmutableSet } from 'immutable';\nvar initialState = ImmutableMap({\n  new: ImmutableMap({\n    isSubmitting: false,\n    account_id: null,\n    status_ids: ImmutableSet(),\n    comment: '',\n    forward: false\n  })\n});\nexport default function reports(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case REPORT_INIT:\n      return state.withMutations(function (map) {\n        map.setIn(['new', 'isSubmitting'], false);\n        map.setIn(['new', 'account_id'], action.account.get('id'));\n\n        if (state.getIn(['new', 'account_id']) !== action.account.get('id')) {\n          map.setIn(['new', 'status_ids'], action.status ? ImmutableSet([action.status.getIn(['reblog', 'id'], action.status.get('id'))]) : ImmutableSet());\n          map.setIn(['new', 'comment'], '');\n        } else if (action.status) {\n          map.updateIn(['new', 'status_ids'], ImmutableSet(), function (set) {\n            return set.add(action.status.getIn(['reblog', 'id'], action.status.get('id')));\n          });\n        }\n      });\n\n    case REPORT_STATUS_TOGGLE:\n      return state.updateIn(['new', 'status_ids'], ImmutableSet(), function (set) {\n        if (action.checked) {\n          return set.add(action.statusId);\n        }\n\n        return set.remove(action.statusId);\n      });\n\n    case REPORT_COMMENT_CHANGE:\n      return state.setIn(['new', 'comment'], action.comment);\n\n    case REPORT_FORWARD_CHANGE:\n      return state.setIn(['new', 'forward'], action.forward);\n\n    case REPORT_SUBMIT_REQUEST:\n      return state.setIn(['new', 'isSubmitting'], true);\n\n    case REPORT_SUBMIT_FAIL:\n      return state.setIn(['new', 'isSubmitting'], false);\n\n    case REPORT_CANCEL:\n    case REPORT_SUBMIT_SUCCESS:\n      return state.withMutations(function (map) {\n        map.setIn(['new', 'account_id'], null);\n        map.setIn(['new', 'status_ids'], ImmutableSet());\n        map.setIn(['new', 'comment'], '');\n        map.setIn(['new', 'isSubmitting'], false);\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/reports.js"],"names":["REPORT_INIT","REPORT_SUBMIT_REQUEST","REPORT_SUBMIT_SUCCESS","REPORT_SUBMIT_FAIL","REPORT_CANCEL","REPORT_STATUS_TOGGLE","REPORT_COMMENT_CHANGE","REPORT_FORWARD_CHANGE","Map","ImmutableMap","Set","ImmutableSet","initialState","new","isSubmitting","account_id","status_ids","comment","forward","reports","state","action","type","withMutations","map","setIn","account","get","getIn","status","updateIn","set","add","checked","statusId","remove"],"mappings":"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","sourcesContent":["import {\n  REPORT_INIT,\n  REPORT_SUBMIT_REQUEST,\n  REPORT_SUBMIT_SUCCESS,\n  REPORT_SUBMIT_FAIL,\n  REPORT_CANCEL,\n  REPORT_STATUS_TOGGLE,\n  REPORT_COMMENT_CHANGE,\n  REPORT_FORWARD_CHANGE,\n} from '../actions/reports';\nimport { Map as ImmutableMap, Set as ImmutableSet } from 'immutable';\n\nconst initialState = ImmutableMap({\n  new: ImmutableMap({\n    isSubmitting: false,\n    account_id: null,\n    status_ids: ImmutableSet(),\n    comment: '',\n    forward: false,\n  }),\n});\n\nexport default function reports(state = initialState, action) {\n  switch(action.type) {\n  case REPORT_INIT:\n    return state.withMutations(map => {\n      map.setIn(['new', 'isSubmitting'], false);\n      map.setIn(['new', 'account_id'], action.account.get('id'));\n\n      if (state.getIn(['new', 'account_id']) !== action.account.get('id')) {\n        map.setIn(['new', 'status_ids'], action.status ? ImmutableSet([action.status.getIn(['reblog', 'id'], action.status.get('id'))]) : ImmutableSet());\n        map.setIn(['new', 'comment'], '');\n      } else if (action.status) {\n        map.updateIn(['new', 'status_ids'], ImmutableSet(), set => set.add(action.status.getIn(['reblog', 'id'], action.status.get('id'))));\n      }\n    });\n  case REPORT_STATUS_TOGGLE:\n    return state.updateIn(['new', 'status_ids'], ImmutableSet(), set => {\n      if (action.checked) {\n        return set.add(action.statusId);\n      }\n\n      return set.remove(action.statusId);\n    });\n  case REPORT_COMMENT_CHANGE:\n    return state.setIn(['new', 'comment'], action.comment);\n  case REPORT_FORWARD_CHANGE:\n    return state.setIn(['new', 'forward'], action.forward);\n  case REPORT_SUBMIT_REQUEST:\n    return state.setIn(['new', 'isSubmitting'], true);\n  case REPORT_SUBMIT_FAIL:\n    return state.setIn(['new', 'isSubmitting'], false);\n  case REPORT_CANCEL:\n  case REPORT_SUBMIT_SUCCESS:\n    return state.withMutations(map => {\n      map.setIn(['new', 'account_id'], null);\n      map.setIn(['new', 'status_ids'], ImmutableSet());\n      map.setIn(['new', 'comment'], '');\n      map.setIn(['new', 'isSubmitting'], false);\n    });\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}