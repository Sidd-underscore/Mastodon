{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/column.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { scrollTop as _scrollTop } from '../scroll';\n\nvar Column = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Column, _React$PureComponent);\n\n  function Column() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleWheel = function () {\n      if (typeof _this._interruptScrollAnimation !== 'function') {\n        return;\n      }\n\n      _this._interruptScrollAnimation();\n    };\n\n    _this.setRef = function (c) {\n      _this.node = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = Column.prototype;\n\n  _proto.scrollTop = function scrollTop() {\n    var scrollable = this.props.bindToDocument ? document.scrollingElement : this.node.querySelector('.scrollable');\n\n    if (!scrollable) {\n      return;\n    }\n\n    this._interruptScrollAnimation = _scrollTop(scrollable);\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.bindToDocument) {\n      document.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? {\n        passive: true\n      } : false);\n    } else {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? {\n        passive: true\n      } : false);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.props.bindToDocument) {\n      document.removeEventListener('wheel', this.handleWheel);\n    } else {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        label = _this$props.label,\n        children = _this$props.children;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      role: \"region\",\n      \"aria-label\": label,\n      className: \"column\",\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, children);\n  };\n\n  return Column;\n}(React.PureComponent);\n\nColumn.propTypes = {\n  children: PropTypes.node,\n  label: PropTypes.string,\n  bindToDocument: PropTypes.bool\n};\nexport { Column as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/column.js"],"names":["React","PropTypes","supportsPassiveEvents","scrollTop","Column","handleWheel","_interruptScrollAnimation","setRef","c","node","scrollable","props","bindToDocument","document","scrollingElement","querySelector","componentDidMount","addEventListener","passive","componentWillUnmount","removeEventListener","render","label","children","PureComponent","propTypes","string","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,qBAAT,QAAsC,uBAAtC;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,WAA1B;;IAEqBC,M;;;;;;;;;;;;UAkBnBC,W,GAAc,YAAM;AAClB,UAAI,OAAO,MAAKC,yBAAZ,KAA0C,UAA9C,EAA0D;AACxD;AACD;;AAED,YAAKA,yBAAL;AACD,K;;UAEDC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,YAAKC,IAAL,GAAYD,CAAZ;AACD,K;;;;;;;SApBDL,S,GAAA,qBAAa;AACX,QAAMO,UAAU,GAAG,KAAKC,KAAL,CAAWC,cAAX,GAA4BC,QAAQ,CAACC,gBAArC,GAAwD,KAAKL,IAAL,CAAUM,aAAV,CAAwB,aAAxB,CAA3E;;AAEA,QAAI,CAACL,UAAL,EAAiB;AACf;AACD;;AAED,SAAKJ,yBAAL,GAAiCH,UAAS,CAACO,UAAD,CAA1C;AACD,G;;SAcDM,iB,GAAA,6BAAqB;AACnB,QAAI,KAAKL,KAAL,CAAWC,cAAf,EAA+B;AAC7BC,MAAAA,QAAQ,CAACI,gBAAT,CAA0B,OAA1B,EAAmC,KAAKZ,WAAxC,EAAqDH,qBAAqB,GAAG;AAAEgB,QAAAA,OAAO,EAAE;AAAX,OAAH,GAAuB,KAAjG;AACD,KAFD,MAEO;AACL,WAAKT,IAAL,CAAUQ,gBAAV,CAA2B,OAA3B,EAAoC,KAAKZ,WAAzC,EAAsDH,qBAAqB,GAAG;AAAEgB,QAAAA,OAAO,EAAE;AAAX,OAAH,GAAuB,KAAlG;AACD;AACF,G;;SAEDC,oB,GAAA,gCAAwB;AACtB,QAAI,KAAKR,KAAL,CAAWC,cAAf,EAA+B;AAC7BC,MAAAA,QAAQ,CAACO,mBAAT,CAA6B,OAA7B,EAAsC,KAAKf,WAA3C;AACD,KAFD,MAEO;AACL,WAAKI,IAAL,CAAUW,mBAAV,CAA8B,OAA9B,EAAuC,KAAKf,WAA5C;AACD;AACF,G;;SAEDgB,M,GAAA,kBAAU;AACR,sBAA4B,KAAKV,KAAjC;AAAA,QAAQW,KAAR,eAAQA,KAAR;AAAA,QAAeC,QAAf,eAAeA,QAAf;AAEA,wBACE;AAAK,MAAA,IAAI,EAAC,QAAV;AAAmB,oBAAYD,KAA/B;AAAsC,MAAA,SAAS,EAAC,QAAhD;AAAyD,MAAA,GAAG,EAAE,KAAKf,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGgB,QADH,CADF;AAKD,G;;;EAtDiCvB,KAAK,CAACwB,a;;AAArBpB,M,CAEZqB,S,GAAY;AACjBF,EAAAA,QAAQ,EAAEtB,SAAS,CAACQ,IADH;AAEjBa,EAAAA,KAAK,EAAErB,SAAS,CAACyB,MAFA;AAGjBd,EAAAA,cAAc,EAAEX,SAAS,CAAC0B;AAHT,C;SAFAvB,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { scrollTop } from '../scroll';\n\nexport default class Column extends React.PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node,\n    label: PropTypes.string,\n    bindToDocument: PropTypes.bool,\n  };\n\n  scrollTop () {\n    const scrollable = this.props.bindToDocument ? document.scrollingElement : this.node.querySelector('.scrollable');\n\n    if (!scrollable) {\n      return;\n    }\n\n    this._interruptScrollAnimation = scrollTop(scrollable);\n  }\n\n  handleWheel = () => {\n    if (typeof this._interruptScrollAnimation !== 'function') {\n      return;\n    }\n\n    this._interruptScrollAnimation();\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  componentDidMount () {\n    if (this.props.bindToDocument) {\n      document.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    } else {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.props.bindToDocument) {\n      document.removeEventListener('wheel', this.handleWheel);\n    } else {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n  }\n\n  render () {\n    const { label, children } = this.props;\n\n    return (\n      <div role='region' aria-label={label} className='column' ref={this.setRef}>\n        {children}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}