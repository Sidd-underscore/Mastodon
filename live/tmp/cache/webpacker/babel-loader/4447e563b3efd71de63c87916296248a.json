{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/favourited_statuses/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchFavouritedStatuses, expandFavouritedStatuses } from '../../actions/favourites';\nimport Column from '../ui/components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { debounce } from 'lodash';\nvar messages = defineMessages({\n  heading: {\n    \"id\": \"column.favourites\",\n    \"defaultMessage\": \"Favourites\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    statusIds: state.getIn(['status_lists', 'favourites', 'items']),\n    isLoading: state.getIn(['status_lists', 'favourites', 'isLoading'], true),\n    hasMore: !!state.getIn(['status_lists', 'favourites', 'next'])\n  };\n};\n\nvar Favourites = (_dec = connect(mapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Favourites, _ImmutablePureCompone);\n\n  function Favourites() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handlePin = function () {\n      var _this$props = _this.props,\n          columnId = _this$props.columnId,\n          dispatch = _this$props.dispatch;\n\n      if (columnId) {\n        dispatch(removeColumn(columnId));\n      } else {\n        dispatch(addColumn('FAVOURITES', {}));\n      }\n    };\n\n    _this.handleMove = function (dir) {\n      var _this$props2 = _this.props,\n          columnId = _this$props2.columnId,\n          dispatch = _this$props2.dispatch;\n      dispatch(moveColumn(columnId, dir));\n    };\n\n    _this.handleHeaderClick = function () {\n      _this.column.scrollTop();\n    };\n\n    _this.setRef = function (c) {\n      _this.column = c;\n    };\n\n    _this.handleLoadMore = debounce(function () {\n      _this.props.dispatch(expandFavouritedStatuses());\n    }, 300, {\n      leading: true\n    });\n    return _this;\n  }\n\n  var _proto = Favourites.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.props.dispatch(fetchFavouritedStatuses());\n  };\n\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n        intl = _this$props3.intl,\n        statusIds = _this$props3.statusIds,\n        columnId = _this$props3.columnId,\n        multiColumn = _this$props3.multiColumn,\n        hasMore = _this$props3.hasMore,\n        isLoading = _this$props3.isLoading;\n    var pinned = !!columnId;\n    var emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"empty_column.favourited_statuses\",\n      defaultMessage: \"You don't have any favourite toots yet. When you favourite one, it will show up here.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 26\n      }\n    });\n    return /*#__PURE__*/React.createElement(Column, {\n      bindToDocument: !multiColumn,\n      ref: this.setRef,\n      label: intl.formatMessage(messages.heading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnHeader, {\n      icon: \"star\",\n      title: intl.formatMessage(messages.heading),\n      onPin: this.handlePin,\n      onMove: this.handleMove,\n      onClick: this.handleHeaderClick,\n      pinned: pinned,\n      multiColumn: multiColumn,\n      showBackButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StatusList, {\n      trackScroll: !pinned,\n      statusIds: statusIds,\n      scrollKey: \"favourited_statuses-\" + columnId,\n      hasMore: hasMore,\n      isLoading: isLoading,\n      onLoadMore: this.handleLoadMore,\n      emptyMessage: emptyMessage,\n      bindToDocument: !multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }));\n  };\n\n  return Favourites;\n}(ImmutablePureComponent), _class2.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  statusIds: ImmutablePropTypes.list.isRequired,\n  intl: PropTypes.object.isRequired,\n  columnId: PropTypes.string,\n  multiColumn: PropTypes.bool,\n  hasMore: PropTypes.bool,\n  isLoading: PropTypes.bool\n}, _temp)) || _class) || _class);\nexport { Favourites as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/favourited_statuses/index.js"],"names":["React","connect","PropTypes","ImmutablePropTypes","fetchFavouritedStatuses","expandFavouritedStatuses","Column","ColumnHeader","addColumn","removeColumn","moveColumn","StatusList","defineMessages","injectIntl","FormattedMessage","ImmutablePureComponent","debounce","messages","heading","mapStateToProps","state","statusIds","getIn","isLoading","hasMore","Favourites","handlePin","props","columnId","dispatch","handleMove","dir","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","leading","componentWillMount","render","intl","multiColumn","pinned","emptyMessage","formatMessage","propTypes","func","isRequired","list","object","string","bool"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,uBAAT,EAAkCC,wBAAlC,QAAkE,0BAAlE;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,UAAlC,QAAoD,uBAApD;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,gBAArC,QAA6D,YAA7D;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,SAASC,QAAT,QAAyB,QAAzB;AAEA,IAAMC,QAAQ,GAAGL,cAAc,CAAC;AAC9BM,EAAAA,OAAO;AAAA;AAAA;AAAA;AADuB,CAAD,CAA/B;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,SAAS,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,cAAD,EAAiB,YAAjB,EAA+B,OAA/B,CAAZ,CADqB;AAEhCC,IAAAA,SAAS,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,cAAD,EAAiB,YAAjB,EAA+B,WAA/B,CAAZ,EAAyD,IAAzD,CAFqB;AAGhCE,IAAAA,OAAO,EAAE,CAAC,CAACJ,KAAK,CAACE,KAAN,CAAY,CAAC,cAAD,EAAiB,YAAjB,EAA+B,MAA/B,CAAZ;AAHqB,GAAL;AAAA,CAA7B;;IAQMG,U,WAFUxB,OAAO,CAACkB,eAAD,C,gBACtBN,U;;;;;;;;;;;;UAiBCa,S,GAAY,YAAM;AAChB,wBAA+B,MAAKC,KAApC;AAAA,UAAQC,QAAR,eAAQA,QAAR;AAAA,UAAkBC,QAAlB,eAAkBA,QAAlB;;AAEA,UAAID,QAAJ,EAAc;AACZC,QAAAA,QAAQ,CAACpB,YAAY,CAACmB,QAAD,CAAb,CAAR;AACD,OAFD,MAEO;AACLC,QAAAA,QAAQ,CAACrB,SAAS,CAAC,YAAD,EAAe,EAAf,CAAV,CAAR;AACD;AACF,K;;UAEDsB,U,GAAa,UAACC,GAAD,EAAS;AACpB,yBAA+B,MAAKJ,KAApC;AAAA,UAAQC,QAAR,gBAAQA,QAAR;AAAA,UAAkBC,QAAlB,gBAAkBA,QAAlB;AACAA,MAAAA,QAAQ,CAACnB,UAAU,CAACkB,QAAD,EAAWG,GAAX,CAAX,CAAR;AACD,K;;UAEDC,iB,GAAoB,YAAM;AACxB,YAAKC,MAAL,CAAYC,SAAZ;AACD,K;;UAEDC,M,GAAS,UAAAC,CAAC,EAAI;AACZ,YAAKH,MAAL,GAAcG,CAAd;AACD,K;;UAEDC,c,GAAiBrB,QAAQ,CAAC,YAAM;AAC9B,YAAKW,KAAL,CAAWE,QAAX,CAAoBxB,wBAAwB,EAA5C;AACD,KAFwB,EAEtB,GAFsB,EAEjB;AAAEiC,MAAAA,OAAO,EAAE;AAAX,KAFiB,C;;;;;;SA3BzBC,kB,GAAA,8BAAsB;AACpB,SAAKZ,KAAL,CAAWE,QAAX,CAAoBzB,uBAAuB,EAA3C;AACD,G;;SA6BDoC,M,GAAA,kBAAU;AACR,uBAAuE,KAAKb,KAA5E;AAAA,QAAQc,IAAR,gBAAQA,IAAR;AAAA,QAAcpB,SAAd,gBAAcA,SAAd;AAAA,QAAyBO,QAAzB,gBAAyBA,QAAzB;AAAA,QAAmCc,WAAnC,gBAAmCA,WAAnC;AAAA,QAAgDlB,OAAhD,gBAAgDA,OAAhD;AAAA,QAAyDD,SAAzD,gBAAyDA,SAAzD;AACA,QAAMoB,MAAM,GAAG,CAAC,CAACf,QAAjB;AAEA,QAAMgB,YAAY,gBAAG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,kCAArB;AAAwD,MAAA,cAAc,EAAC,uFAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAArB;AAEA,wBACE,oBAAC,MAAD;AAAQ,MAAA,cAAc,EAAE,CAACF,WAAzB;AAAsC,MAAA,GAAG,EAAE,KAAKP,MAAhD;AAAwD,MAAA,KAAK,EAAEM,IAAI,CAACI,aAAL,CAAmB5B,QAAQ,CAACC,OAA5B,CAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,KAAK,EAAEuB,IAAI,CAACI,aAAL,CAAmB5B,QAAQ,CAACC,OAA5B,CAFT;AAGE,MAAA,KAAK,EAAE,KAAKQ,SAHd;AAIE,MAAA,MAAM,EAAE,KAAKI,UAJf;AAKE,MAAA,OAAO,EAAE,KAAKE,iBALhB;AAME,MAAA,MAAM,EAAEW,MANV;AAOE,MAAA,WAAW,EAAED,WAPf;AAQE,MAAA,cAAc,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAYE,oBAAC,UAAD;AACE,MAAA,WAAW,EAAE,CAACC,MADhB;AAEE,MAAA,SAAS,EAAEtB,SAFb;AAGE,MAAA,SAAS,2BAAyBO,QAHpC;AAIE,MAAA,OAAO,EAAEJ,OAJX;AAKE,MAAA,SAAS,EAAED,SALb;AAME,MAAA,UAAU,EAAE,KAAKc,cANnB;AAOE,MAAA,YAAY,EAAEO,YAPhB;AAQE,MAAA,cAAc,EAAE,CAACF,WARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF;AAyBD,G;;;EA1EsB3B,sB,WAEhB+B,S,GAAY;AACjBjB,EAAAA,QAAQ,EAAE3B,SAAS,CAAC6C,IAAV,CAAeC,UADR;AAEjB3B,EAAAA,SAAS,EAAElB,kBAAkB,CAAC8C,IAAnB,CAAwBD,UAFlB;AAGjBP,EAAAA,IAAI,EAAEvC,SAAS,CAACgD,MAAV,CAAiBF,UAHN;AAIjBpB,EAAAA,QAAQ,EAAE1B,SAAS,CAACiD,MAJH;AAKjBT,EAAAA,WAAW,EAAExC,SAAS,CAACkD,IALN;AAMjB5B,EAAAA,OAAO,EAAEtB,SAAS,CAACkD,IANF;AAOjB7B,EAAAA,SAAS,EAAErB,SAAS,CAACkD;AAPJ,C;SAFf3B,U","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchFavouritedStatuses, expandFavouritedStatuses } from '../../actions/favourites';\nimport Column from '../ui/components/column';\nimport ColumnHeader from '../../components/column_header';\nimport { addColumn, removeColumn, moveColumn } from '../../actions/columns';\nimport StatusList from '../../components/status_list';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { debounce } from 'lodash';\n\nconst messages = defineMessages({\n  heading: { id: 'column.favourites', defaultMessage: 'Favourites' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'favourites', 'items']),\n  isLoading: state.getIn(['status_lists', 'favourites', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'favourites', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchFavouritedStatuses());\n  }\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('FAVOURITES', {}));\n    }\n  }\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  }\n\n  setRef = c => {\n    this.column = c;\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFavouritedStatuses());\n  }, 300, { leading: true })\n\n  render () {\n    const { intl, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourited_statuses' defaultMessage=\"You don't have any favourite toots yet. When you favourite one, it will show up here.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.heading)}>\n        <ColumnHeader\n          icon='star'\n          title={intl.formatMessage(messages.heading)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          showBackButton\n        />\n\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`favourited_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column.favourites","defaultMessage":"Favourites"},{"id":"empty_column.favourited_statuses","defaultMessage":"You don't have any favourite toots yet. When you favourite one, it will show up here."}]}},"sourceType":"module"}