{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/column_link.js\",\n    _this = this;\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Icon from 'mastodon/components/icon';\n\nvar ColumnLink = function ColumnLink(_ref) {\n  var icon = _ref.icon,\n      text = _ref.text,\n      to = _ref.to,\n      href = _ref.href,\n      method = _ref.method,\n      badge = _ref.badge;\n  var badgeElement = typeof badge !== 'undefined' ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"column-link__badge\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 55\n    }\n  }, badge) : null;\n\n  if (href) {\n    return /*#__PURE__*/React.createElement(\"a\", {\n      href: href,\n      className: \"column-link\",\n      \"data-method\": method,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: icon,\n      fixedWidth: true,\n      className: \"column-link__icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }\n    }), text, badgeElement);\n  } else {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: to,\n      className: \"column-link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: icon,\n      fixedWidth: true,\n      className: \"column-link__icon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), text, badgeElement);\n  }\n};\n\nColumnLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  method: PropTypes.string,\n  badge: PropTypes.node\n};\nexport default ColumnLink;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/column_link.js"],"names":["React","PropTypes","Link","Icon","ColumnLink","icon","text","to","href","method","badge","badgeElement","propTypes","string","isRequired","node"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA6C;AAAA,MAA1CC,IAA0C,QAA1CA,IAA0C;AAAA,MAApCC,IAAoC,QAApCA,IAAoC;AAAA,MAA9BC,EAA8B,QAA9BA,EAA8B;AAAA,MAA1BC,IAA0B,QAA1BA,IAA0B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC9D,MAAMC,YAAY,GAAG,OAAOD,KAAP,KAAiB,WAAjB,gBAA+B;AAAM,IAAA,SAAS,EAAC,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCA,KAAtC,CAA/B,GAAqF,IAA1G;;AAEA,MAAIF,IAAJ,EAAU;AACR,wBACE;AAAG,MAAA,IAAI,EAAEA,IAAT;AAAe,MAAA,SAAS,EAAC,aAAzB;AAAuC,qBAAaC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEJ,IAAV;AAAgB,MAAA,UAAU,MAA1B;AAA2B,MAAA,SAAS,EAAC,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGC,IAFH,EAGGK,YAHH,CADF;AAOD,GARD,MAQO;AACL,wBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEJ,EAAV;AAAc,MAAA,SAAS,EAAC,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAEF,IAAV;AAAgB,MAAA,UAAU,MAA1B;AAA2B,MAAA,SAAS,EAAC,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGC,IAFH,EAGGK,YAHH,CADF;AAOD;AACF,CApBD;;AAsBAP,UAAU,CAACQ,SAAX,GAAuB;AACrBP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,MAAV,CAAiBC,UADF;AAErBR,EAAAA,IAAI,EAAEL,SAAS,CAACY,MAAV,CAAiBC,UAFF;AAGrBP,EAAAA,EAAE,EAAEN,SAAS,CAACY,MAHO;AAIrBL,EAAAA,IAAI,EAAEP,SAAS,CAACY,MAJK;AAKrBJ,EAAAA,MAAM,EAAER,SAAS,CAACY,MALG;AAMrBH,EAAAA,KAAK,EAAET,SAAS,CAACc;AANI,CAAvB;AASA,eAAeX,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport Icon from 'mastodon/components/icon';\n\nconst ColumnLink = ({ icon, text, to, href, method, badge }) => {\n  const badgeElement = typeof badge !== 'undefined' ? <span className='column-link__badge'>{badge}</span> : null;\n\n  if (href) {\n    return (\n      <a href={href} className='column-link' data-method={method}>\n        <Icon id={icon} fixedWidth className='column-link__icon' />\n        {text}\n        {badgeElement}\n      </a>\n    );\n  } else {\n    return (\n      <Link to={to} className='column-link'>\n        <Icon id={icon} fixedWidth className='column-link__icon' />\n        {text}\n        {badgeElement}\n      </Link>\n    );\n  }\n};\n\nColumnLink.propTypes = {\n  icon: PropTypes.string.isRequired,\n  text: PropTypes.string.isRequired,\n  to: PropTypes.string,\n  href: PropTypes.string,\n  method: PropTypes.string,\n  badge: PropTypes.node,\n};\n\nexport default ColumnLink;\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}