{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/image_loader.js\";\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { LoadingBar } from 'react-redux-loading-bar';\nimport ZoomableImage from './zoomable_image';\n\nvar ImageLoader = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ImageLoader, _React$PureComponent);\n\n  function ImageLoader() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      loading: true,\n      error: false,\n      width: null\n    };\n    _this.removers = [];\n    _this.canvas = null;\n\n    _this.loadPreviewCanvas = function (_ref) {\n      var previewSrc = _ref.previewSrc,\n          width = _ref.width,\n          height = _ref.height;\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        var removeEventListeners = function removeEventListeners() {\n          image.removeEventListener('error', handleError);\n          image.removeEventListener('load', handleLoad);\n        };\n\n        var handleError = function handleError() {\n          removeEventListeners();\n          reject();\n        };\n\n        var handleLoad = function handleLoad() {\n          removeEventListeners();\n\n          _this.canvasContext.drawImage(image, 0, 0, width, height);\n\n          resolve();\n        };\n\n        image.addEventListener('error', handleError);\n        image.addEventListener('load', handleLoad);\n        image.src = previewSrc;\n\n        _this.removers.push(removeEventListeners);\n      });\n    };\n\n    _this.loadOriginalImage = function (_ref2) {\n      var src = _ref2.src;\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n\n        var removeEventListeners = function removeEventListeners() {\n          image.removeEventListener('error', handleError);\n          image.removeEventListener('load', handleLoad);\n        };\n\n        var handleError = function handleError() {\n          removeEventListeners();\n          reject();\n        };\n\n        var handleLoad = function handleLoad() {\n          removeEventListeners();\n          resolve();\n        };\n\n        image.addEventListener('error', handleError);\n        image.addEventListener('load', handleLoad);\n        image.src = src;\n\n        _this.removers.push(removeEventListeners);\n      });\n    };\n\n    _this.setCanvasRef = function (c) {\n      _this.canvas = c;\n      if (c) _this.setState({\n        width: c.offsetWidth\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = ImageLoader.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.loadImage(this.props);\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.src !== nextProps.src) {\n      this.loadImage(nextProps);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.removeEventListeners();\n  };\n\n  _proto.loadImage = function loadImage(props) {\n    var _this2 = this;\n\n    this.removeEventListeners();\n    this.setState({\n      loading: true,\n      error: false\n    });\n    Promise.all([props.previewSrc && this.loadPreviewCanvas(props), this.hasSize() && this.loadOriginalImage(props)].filter(Boolean)).then(function () {\n      _this2.setState({\n        loading: false,\n        error: false\n      });\n\n      _this2.clearPreviewCanvas();\n    }).catch(function () {\n      return _this2.setState({\n        loading: false,\n        error: true\n      });\n    });\n  };\n\n  _proto.clearPreviewCanvas = function clearPreviewCanvas() {\n    var _this$canvas = this.canvas,\n        width = _this$canvas.width,\n        height = _this$canvas.height;\n    this.canvasContext.clearRect(0, 0, width, height);\n  };\n\n  _proto.removeEventListeners = function removeEventListeners() {\n    this.removers.forEach(function (listeners) {\n      return listeners();\n    });\n    this.removers = [];\n  };\n\n  _proto.hasSize = function hasSize() {\n    var _this$props = this.props,\n        width = _this$props.width,\n        height = _this$props.height;\n    return typeof width === 'number' && typeof height === 'number';\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        alt = _this$props2.alt,\n        src = _this$props2.src,\n        width = _this$props2.width,\n        height = _this$props2.height,\n        onClick = _this$props2.onClick;\n    var loading = this.state.loading;\n    var className = classNames('image-loader', {\n      'image-loader--loading': loading,\n      'image-loader--amorphous': !this.hasSize()\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(LoadingBar, {\n      loading: loading ? 1 : 0,\n      className: \"loading-bar\",\n      style: {\n        width: this.state.width || width\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }), loading ? /*#__PURE__*/React.createElement(\"canvas\", {\n      className: \"image-loader__preview-canvas\",\n      ref: this.setCanvasRef,\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(ZoomableImage, {\n      alt: alt,\n      src: src,\n      onClick: onClick,\n      width: width,\n      height: height,\n      zoomButtonHidden: this.props.zoomButtonHidden,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  _createClass(ImageLoader, [{\n    key: \"canvasContext\",\n    get: function get() {\n      if (!this.canvas) {\n        return null;\n      }\n\n      this._canvasContext = this._canvasContext || this.canvas.getContext('2d');\n      return this._canvasContext;\n    }\n  }]);\n\n  return ImageLoader;\n}(React.PureComponent);\n\nImageLoader.propTypes = {\n  alt: PropTypes.string,\n  src: PropTypes.string.isRequired,\n  previewSrc: PropTypes.string,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  onClick: PropTypes.func,\n  zoomButtonHidden: PropTypes.bool\n};\nImageLoader.defaultProps = {\n  alt: '',\n  width: null,\n  height: null\n};\nexport { ImageLoader as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/image_loader.js"],"names":["React","PropTypes","classNames","LoadingBar","ZoomableImage","ImageLoader","state","loading","error","width","removers","canvas","loadPreviewCanvas","previewSrc","height","Promise","resolve","reject","image","Image","removeEventListeners","removeEventListener","handleError","handleLoad","canvasContext","drawImage","addEventListener","src","push","loadOriginalImage","setCanvasRef","c","setState","offsetWidth","componentDidMount","loadImage","props","componentWillReceiveProps","nextProps","componentWillUnmount","all","hasSize","filter","Boolean","then","clearPreviewCanvas","catch","clearRect","forEach","listeners","render","alt","onClick","className","zoomButtonHidden","_canvasContext","getContext","PureComponent","propTypes","string","isRequired","number","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { LoadingBar } from 'react-redux-loading-bar';\nimport ZoomableImage from './zoomable_image';\n\nexport default class ImageLoader extends React.PureComponent {\n\n  static propTypes = {\n    alt: PropTypes.string,\n    src: PropTypes.string.isRequired,\n    previewSrc: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    onClick: PropTypes.func,\n    zoomButtonHidden: PropTypes.bool,\n  }\n\n  static defaultProps = {\n    alt: '',\n    width: null,\n    height: null,\n  };\n\n  state = {\n    loading: true,\n    error: false,\n    width: null,\n  }\n\n  removers = [];\n  canvas = null;\n\n  get canvasContext() {\n    if (!this.canvas) {\n      return null;\n    }\n    this._canvasContext = this._canvasContext || this.canvas.getContext('2d');\n    return this._canvasContext;\n  }\n\n  componentDidMount () {\n    this.loadImage(this.props);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.src !== nextProps.src) {\n      this.loadImage(nextProps);\n    }\n  }\n\n  componentWillUnmount () {\n    this.removeEventListeners();\n  }\n\n  loadImage (props) {\n    this.removeEventListeners();\n    this.setState({ loading: true, error: false });\n    Promise.all([\n      props.previewSrc && this.loadPreviewCanvas(props),\n      this.hasSize() && this.loadOriginalImage(props),\n    ].filter(Boolean))\n      .then(() => {\n        this.setState({ loading: false, error: false });\n        this.clearPreviewCanvas();\n      })\n      .catch(() => this.setState({ loading: false, error: true }));\n  }\n\n  loadPreviewCanvas = ({ previewSrc, width, height }) => new Promise((resolve, reject) => {\n    const image = new Image();\n    const removeEventListeners = () => {\n      image.removeEventListener('error', handleError);\n      image.removeEventListener('load', handleLoad);\n    };\n    const handleError = () => {\n      removeEventListeners();\n      reject();\n    };\n    const handleLoad = () => {\n      removeEventListeners();\n      this.canvasContext.drawImage(image, 0, 0, width, height);\n      resolve();\n    };\n    image.addEventListener('error', handleError);\n    image.addEventListener('load', handleLoad);\n    image.src = previewSrc;\n    this.removers.push(removeEventListeners);\n  })\n\n  clearPreviewCanvas () {\n    const { width, height } = this.canvas;\n    this.canvasContext.clearRect(0, 0, width, height);\n  }\n\n  loadOriginalImage = ({ src }) => new Promise((resolve, reject) => {\n    const image = new Image();\n    const removeEventListeners = () => {\n      image.removeEventListener('error', handleError);\n      image.removeEventListener('load', handleLoad);\n    };\n    const handleError = () => {\n      removeEventListeners();\n      reject();\n    };\n    const handleLoad = () => {\n      removeEventListeners();\n      resolve();\n    };\n    image.addEventListener('error', handleError);\n    image.addEventListener('load', handleLoad);\n    image.src = src;\n    this.removers.push(removeEventListeners);\n  });\n\n  removeEventListeners () {\n    this.removers.forEach(listeners => listeners());\n    this.removers = [];\n  }\n\n  hasSize () {\n    const { width, height } = this.props;\n    return typeof width === 'number' && typeof height === 'number';\n  }\n\n  setCanvasRef = c => {\n    this.canvas = c;\n    if (c) this.setState({ width: c.offsetWidth });\n  }\n\n  render () {\n    const { alt, src, width, height, onClick } = this.props;\n    const { loading } = this.state;\n\n    const className = classNames('image-loader', {\n      'image-loader--loading': loading,\n      'image-loader--amorphous': !this.hasSize(),\n    });\n\n    return (\n      <div className={className}>\n        <LoadingBar loading={loading ? 1 : 0} className='loading-bar' style={{ width: this.state.width || width }} />\n        {loading ? (\n          <canvas\n            className='image-loader__preview-canvas'\n            ref={this.setCanvasRef}\n            width={width}\n            height={height}\n          />\n        ) : (\n          <ZoomableImage\n            alt={alt}\n            src={src}\n            onClick={onClick}\n            width={width}\n            height={height}\n            zoomButtonHidden={this.props.zoomButtonHidden}\n          />\n        )}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}