{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/video_modal.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\nimport { getAverageFromBlurhash } from 'mastodon/blurhash';\n\nvar VideoModal = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(VideoModal, _ImmutablePureCompone);\n\n  function VideoModal() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = VideoModal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props = this.props,\n        media = _this$props.media,\n        onChangeBackgroundColor = _this$props.onChangeBackgroundColor,\n        onClose = _this$props.onClose;\n    var backgroundColor = getAverageFromBlurhash(media.get('blurhash'));\n\n    if (backgroundColor) {\n      onChangeBackgroundColor(backgroundColor);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        media = _this$props2.media,\n        statusId = _this$props2.statusId,\n        onClose = _this$props2.onClose;\n    var options = this.props.options || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal video-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"video-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Video, {\n      preview: media.get('preview_url'),\n      frameRate: media.getIn(['meta', 'original', 'frame_rate']),\n      blurhash: media.get('blurhash'),\n      src: media.get('url'),\n      currentTime: options.startTime,\n      autoPlay: options.autoPlay,\n      volume: options.defaultVolume,\n      onCloseVideo: onClose,\n      detailed: true,\n      alt: media.get('description'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-modal__overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, statusId && /*#__PURE__*/React.createElement(Footer, {\n      statusId: statusId,\n      withOpenButton: true,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 24\n      }\n    })));\n  };\n\n  return VideoModal;\n}(ImmutablePureComponent);\n\nVideoModal.propTypes = {\n  media: ImmutablePropTypes.map.isRequired,\n  statusId: PropTypes.string,\n  options: PropTypes.shape({\n    startTime: PropTypes.number,\n    autoPlay: PropTypes.bool,\n    defaultVolume: PropTypes.number\n  }),\n  onClose: PropTypes.func.isRequired,\n  onChangeBackgroundColor: PropTypes.func.isRequired\n};\nexport { VideoModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/video_modal.js"],"names":["React","ImmutablePropTypes","PropTypes","Video","ImmutablePureComponent","Footer","getAverageFromBlurhash","VideoModal","componentDidMount","props","media","onChangeBackgroundColor","onClose","backgroundColor","get","render","statusId","options","getIn","startTime","autoPlay","defaultVolume","propTypes","map","isRequired","string","shape","number","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\nimport { getAverageFromBlurhash } from 'mastodon/blurhash';\n\nexport default class VideoModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    statusId: PropTypes.string,\n    options: PropTypes.shape({\n      startTime: PropTypes.number,\n      autoPlay: PropTypes.bool,\n      defaultVolume: PropTypes.number,\n    }),\n    onClose: PropTypes.func.isRequired,\n    onChangeBackgroundColor: PropTypes.func.isRequired,\n  };\n\n  componentDidMount () {\n    const { media, onChangeBackgroundColor, onClose } = this.props;\n\n    const backgroundColor = getAverageFromBlurhash(media.get('blurhash'));\n\n    if (backgroundColor) {\n      onChangeBackgroundColor(backgroundColor);\n    }\n  }\n\n  render () {\n    const { media, statusId, onClose } = this.props;\n    const options = this.props.options || {};\n\n    return (\n      <div className='modal-root__modal video-modal'>\n        <div className='video-modal__container'>\n          <Video\n            preview={media.get('preview_url')}\n            frameRate={media.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={media.get('blurhash')}\n            src={media.get('url')}\n            currentTime={options.startTime}\n            autoPlay={options.autoPlay}\n            volume={options.defaultVolume}\n            onCloseVideo={onClose}\n            detailed\n            alt={media.get('description')}\n          />\n        </div>\n\n        <div className='media-modal__overlay'>\n          {statusId && <Footer statusId={statusId} withOpenButton onClose={onClose} />}\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}