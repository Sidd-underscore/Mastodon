{"ast":null,"code":"//\n// Tools for performance debugging, only enabled in development mode.\n// Open up Chrome Dev Tools, then Timeline, then User Timing to see output.\n// Also see config/webpack/loaders/mark.js for the webpack loader marks.\n//\nvar marky;\n\nif (process.env.NODE_ENV === 'development') {\n  if (typeof performance !== 'undefined' && performance.setResourceTimingBufferSize) {\n    // Increase Firefox's performance entry limit; otherwise it's capped to 150.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1331135\n    performance.setResourceTimingBufferSize(Infinity);\n  }\n\n  marky = require('marky'); // allows us to easily do e.g. ReactPerf.printWasted() while debugging\n  //window.ReactPerf = require('react-addons-perf');\n  //window.ReactPerf.start();\n}\n\nexport function start(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.mark(name);\n  }\n}\nexport function stop(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.stop(name);\n  }\n}","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/performance.js"],"names":["marky","process","env","NODE_ENV","performance","setResourceTimingBufferSize","Infinity","require","start","name","mark","stop"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAJ;;AAEA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAI,OAAOC,WAAP,KAAuB,WAAvB,IAAsCA,WAAW,CAACC,2BAAtD,EAAmF;AACjF;AACA;AACAD,IAAAA,WAAW,CAACC,2BAAZ,CAAwCC,QAAxC;AACD;;AACDN,EAAAA,KAAK,GAAGO,OAAO,CAAC,OAAD,CAAf,CAN0C,CAO1C;AACA;AACA;AACD;;AAED,OAAO,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAC1B,MAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,IAAAA,KAAK,CAACU,IAAN,CAAWD,IAAX;AACD;AACF;AAED,OAAO,SAASE,IAAT,CAAcF,IAAd,EAAoB;AACzB,MAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CH,IAAAA,KAAK,CAACW,IAAN,CAAWF,IAAX;AACD;AACF","sourcesContent":["//\n// Tools for performance debugging, only enabled in development mode.\n// Open up Chrome Dev Tools, then Timeline, then User Timing to see output.\n// Also see config/webpack/loaders/mark.js for the webpack loader marks.\n//\n\nlet marky;\n\nif (process.env.NODE_ENV === 'development') {\n  if (typeof performance !== 'undefined' && performance.setResourceTimingBufferSize) {\n    // Increase Firefox's performance entry limit; otherwise it's capped to 150.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1331135\n    performance.setResourceTimingBufferSize(Infinity);\n  }\n  marky = require('marky');\n  // allows us to easily do e.g. ReactPerf.printWasted() while debugging\n  //window.ReactPerf = require('react-addons-perf');\n  //window.ReactPerf.start();\n}\n\nexport function start(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.mark(name);\n  }\n}\n\nexport function stop(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.stop(name);\n  }\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}