{"ast":null,"code":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { COMPOSE_MOUNT, COMPOSE_UNMOUNT, COMPOSE_CHANGE, COMPOSE_REPLY, COMPOSE_REPLY_CANCEL, COMPOSE_DIRECT, COMPOSE_MENTION, COMPOSE_SUBMIT_REQUEST, COMPOSE_SUBMIT_SUCCESS, COMPOSE_SUBMIT_FAIL, COMPOSE_UPLOAD_REQUEST, COMPOSE_UPLOAD_SUCCESS, COMPOSE_UPLOAD_FAIL, COMPOSE_UPLOAD_UNDO, COMPOSE_UPLOAD_PROGRESS, THUMBNAIL_UPLOAD_REQUEST, THUMBNAIL_UPLOAD_SUCCESS, THUMBNAIL_UPLOAD_FAIL, THUMBNAIL_UPLOAD_PROGRESS, COMPOSE_SUGGESTIONS_CLEAR, COMPOSE_SUGGESTIONS_READY, COMPOSE_SUGGESTION_SELECT, COMPOSE_SUGGESTION_TAGS_UPDATE, COMPOSE_TAG_HISTORY_UPDATE, COMPOSE_SENSITIVITY_CHANGE, COMPOSE_SPOILERNESS_CHANGE, COMPOSE_SPOILER_TEXT_CHANGE, COMPOSE_VISIBILITY_CHANGE, COMPOSE_COMPOSING_CHANGE, COMPOSE_EMOJI_INSERT, COMPOSE_UPLOAD_CHANGE_REQUEST, COMPOSE_UPLOAD_CHANGE_SUCCESS, COMPOSE_UPLOAD_CHANGE_FAIL, COMPOSE_RESET, COMPOSE_POLL_ADD, COMPOSE_POLL_REMOVE, COMPOSE_POLL_OPTION_ADD, COMPOSE_POLL_OPTION_CHANGE, COMPOSE_POLL_OPTION_REMOVE, COMPOSE_POLL_SETTINGS_CHANGE } from '../actions/compose';\nimport { TIMELINE_DELETE } from '../actions/timelines';\nimport { STORE_HYDRATE } from '../actions/store';\nimport { REDRAFT } from '../actions/statuses';\nimport { Map as ImmutableMap, List as ImmutableList, OrderedSet as ImmutableOrderedSet, fromJS } from 'immutable';\nimport uuid from '../uuid';\nimport { me } from '../initial_state';\nimport { unescapeHTML } from '../utils/html';\nvar initialState = ImmutableMap({\n  mounted: 0,\n  sensitive: false,\n  spoiler: false,\n  spoiler_text: '',\n  privacy: null,\n  text: '',\n  focusDate: null,\n  caretPosition: null,\n  preselectDate: null,\n  in_reply_to: null,\n  is_composing: false,\n  is_submitting: false,\n  is_changing_upload: false,\n  is_uploading: false,\n  progress: 0,\n  isUploadingThumbnail: false,\n  thumbnailProgress: 0,\n  media_attachments: ImmutableList(),\n  pending_media_attachments: 0,\n  poll: null,\n  suggestion_token: null,\n  suggestions: ImmutableList(),\n  default_privacy: 'public',\n  default_sensitive: false,\n  resetFileKey: Math.floor(Math.random() * 0x10000),\n  idempotencyKey: null,\n  tagHistory: ImmutableList()\n});\nvar initialPoll = ImmutableMap({\n  options: ImmutableList(['', '']),\n  expires_in: 24 * 3600,\n  multiple: false\n});\n\nfunction statusToTextMentions(state, status) {\n  var set = ImmutableOrderedSet([]);\n\n  if (status.getIn(['account', 'id']) !== me) {\n    set = set.add(\"@\" + status.getIn(['account', 'acct']) + \" \");\n  }\n\n  return set.union(status.get('mentions').filterNot(function (mention) {\n    return mention.get('id') === me;\n  }).map(function (mention) {\n    return \"@\" + mention.get('acct') + \" \";\n  })).join('');\n}\n\n;\n\nfunction clearAll(state) {\n  return state.withMutations(function (map) {\n    map.set('text', '');\n    map.set('spoiler', false);\n    map.set('spoiler_text', '');\n    map.set('is_submitting', false);\n    map.set('is_changing_upload', false);\n    map.set('in_reply_to', null);\n    map.set('privacy', state.get('default_privacy'));\n    map.set('sensitive', false);\n    map.update('media_attachments', function (list) {\n      return list.clear();\n    });\n    map.set('poll', null);\n    map.set('idempotencyKey', uuid());\n  });\n}\n\n;\n\nfunction appendMedia(state, media, file) {\n  var prevSize = state.get('media_attachments').size;\n  return state.withMutations(function (map) {\n    if (media.get('type') === 'image') {\n      media = media.set('file', file);\n    }\n\n    map.update('media_attachments', function (list) {\n      return list.push(media);\n    });\n    map.set('is_uploading', false);\n    map.set('resetFileKey', Math.floor(Math.random() * 0x10000));\n    map.set('idempotencyKey', uuid());\n    map.update('pending_media_attachments', function (n) {\n      return n - 1;\n    });\n\n    if (prevSize === 0 && (state.get('default_sensitive') || state.get('spoiler'))) {\n      map.set('sensitive', true);\n    }\n  });\n}\n\n;\n\nfunction removeMedia(state, mediaId) {\n  var prevSize = state.get('media_attachments').size;\n  return state.withMutations(function (map) {\n    map.update('media_attachments', function (list) {\n      return list.filterNot(function (item) {\n        return item.get('id') === mediaId;\n      });\n    });\n    map.set('idempotencyKey', uuid());\n\n    if (prevSize === 1) {\n      map.set('sensitive', false);\n    }\n  });\n}\n\n;\n\nvar insertSuggestion = function insertSuggestion(state, position, token, completion, path) {\n  return state.withMutations(function (map) {\n    map.updateIn(path, function (oldText) {\n      return \"\" + oldText.slice(0, position) + completion + \" \" + oldText.slice(position + token.length);\n    });\n    map.set('suggestion_token', null);\n    map.set('suggestions', ImmutableList());\n\n    if (path.length === 1 && path[0] === 'text') {\n      map.set('focusDate', new Date());\n      map.set('caretPosition', position + completion.length + 1);\n    }\n\n    map.set('idempotencyKey', uuid());\n  });\n};\n\nvar sortHashtagsByUse = function sortHashtagsByUse(state, tags) {\n  var personalHistory = state.get('tagHistory');\n  return tags.sort(function (a, b) {\n    var usedA = personalHistory.includes(a.name);\n    var usedB = personalHistory.includes(b.name);\n\n    if (usedA === usedB) {\n      return 0;\n    } else if (usedA && !usedB) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nvar insertEmoji = function insertEmoji(state, position, emojiData, needsSpace) {\n  var oldText = state.get('text');\n  var emoji = needsSpace ? ' ' + emojiData.native : emojiData.native;\n  return state.merge({\n    text: \"\" + oldText.slice(0, position) + emoji + \" \" + oldText.slice(position),\n    focusDate: new Date(),\n    caretPosition: position + emoji.length + 1,\n    idempotencyKey: uuid()\n  });\n};\n\nvar privacyPreference = function privacyPreference(a, b) {\n  var order = ['public', 'unlisted', 'private', 'direct'];\n  return order[Math.max(order.indexOf(a), order.indexOf(b), 0)];\n};\n\nvar hydrate = function hydrate(state, hydratedState) {\n  state = clearAll(state.merge(hydratedState));\n\n  if (hydratedState.has('text')) {\n    state = state.set('text', hydratedState.get('text'));\n  }\n\n  return state;\n};\n\nvar domParser = new DOMParser();\n\nvar expandMentions = function expandMentions(status) {\n  var fragment = domParser.parseFromString(status.get('content'), 'text/html').documentElement;\n  status.get('mentions').forEach(function (mention) {\n    fragment.querySelector(\"a[href=\\\"\" + mention.get('url') + \"\\\"]\").textContent = \"@\" + mention.get('acct');\n  });\n  return fragment.innerHTML;\n};\n\nvar expiresInFromExpiresAt = function expiresInFromExpiresAt(expires_at) {\n  if (!expires_at) return 24 * 3600;\n  var delta = (new Date(expires_at).getTime() - Date.now()) / 1000;\n  return [300, 1800, 3600, 21600, 86400, 259200, 604800].find(function (expires_in) {\n    return expires_in >= delta;\n  }) || 24 * 3600;\n};\n\nvar mergeLocalHashtagResults = function mergeLocalHashtagResults(suggestions, prefix, tagHistory) {\n  prefix = prefix.toLowerCase();\n\n  if (suggestions.length < 4) {\n    var localTags = tagHistory.filter(function (tag) {\n      return tag.toLowerCase().startsWith(prefix) && !suggestions.some(function (suggestion) {\n        return suggestion.type === 'hashtag' && suggestion.name.toLowerCase() === tag.toLowerCase();\n      });\n    });\n    return suggestions.concat(localTags.slice(0, 4 - suggestions.length).toJS().map(function (tag) {\n      return {\n        type: 'hashtag',\n        name: tag\n      };\n    }));\n  } else {\n    return suggestions;\n  }\n};\n\nvar normalizeSuggestions = function normalizeSuggestions(state, _ref) {\n  var accounts = _ref.accounts,\n      emojis = _ref.emojis,\n      tags = _ref.tags,\n      token = _ref.token;\n\n  if (accounts) {\n    return accounts.map(function (item) {\n      return {\n        id: item.id,\n        type: 'account'\n      };\n    });\n  } else if (emojis) {\n    return emojis.map(function (item) {\n      return _extends({}, item, {\n        type: 'emoji'\n      });\n    });\n  } else {\n    return mergeLocalHashtagResults(sortHashtagsByUse(state, tags.map(function (item) {\n      return _extends({}, item, {\n        type: 'hashtag'\n      });\n    })), token.slice(1), state.get('tagHistory'));\n  }\n};\n\nvar updateSuggestionTags = function updateSuggestionTags(state, token) {\n  var prefix = token.slice(1);\n  var suggestions = state.get('suggestions').toJS();\n  return state.merge({\n    suggestions: ImmutableList(mergeLocalHashtagResults(suggestions, prefix, state.get('tagHistory'))),\n    suggestion_token: token\n  });\n};\n\nexport default function compose(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case STORE_HYDRATE:\n      return hydrate(state, action.state.get('compose'));\n\n    case COMPOSE_MOUNT:\n      return state.set('mounted', state.get('mounted') + 1);\n\n    case COMPOSE_UNMOUNT:\n      return state.set('mounted', Math.max(state.get('mounted') - 1, 0)).set('is_composing', false);\n\n    case COMPOSE_SENSITIVITY_CHANGE:\n      return state.withMutations(function (map) {\n        if (!state.get('spoiler')) {\n          map.set('sensitive', !state.get('sensitive'));\n        }\n\n        map.set('idempotencyKey', uuid());\n      });\n\n    case COMPOSE_SPOILERNESS_CHANGE:\n      return state.withMutations(function (map) {\n        map.set('spoiler', !state.get('spoiler'));\n        map.set('idempotencyKey', uuid());\n\n        if (!state.get('sensitive') && state.get('media_attachments').size >= 1) {\n          map.set('sensitive', true);\n        }\n      });\n\n    case COMPOSE_SPOILER_TEXT_CHANGE:\n      if (!state.get('spoiler')) return state;\n      return state.set('spoiler_text', action.text).set('idempotencyKey', uuid());\n\n    case COMPOSE_VISIBILITY_CHANGE:\n      return state.set('privacy', action.value).set('idempotencyKey', uuid());\n\n    case COMPOSE_CHANGE:\n      return state.set('text', action.text).set('idempotencyKey', uuid());\n\n    case COMPOSE_COMPOSING_CHANGE:\n      return state.set('is_composing', action.value);\n\n    case COMPOSE_REPLY:\n      return state.withMutations(function (map) {\n        map.set('in_reply_to', action.status.get('id'));\n        map.set('text', statusToTextMentions(state, action.status));\n        map.set('privacy', privacyPreference(action.status.get('visibility'), state.get('default_privacy')));\n        map.set('focusDate', new Date());\n        map.set('caretPosition', null);\n        map.set('preselectDate', new Date());\n        map.set('idempotencyKey', uuid());\n\n        if (action.status.get('spoiler_text').length > 0) {\n          map.set('spoiler', true);\n          map.set('spoiler_text', action.status.get('spoiler_text'));\n        } else {\n          map.set('spoiler', false);\n          map.set('spoiler_text', '');\n        }\n      });\n\n    case COMPOSE_REPLY_CANCEL:\n    case COMPOSE_RESET:\n      return state.withMutations(function (map) {\n        map.set('in_reply_to', null);\n        map.set('text', '');\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n        map.set('privacy', state.get('default_privacy'));\n        map.set('poll', null);\n        map.set('idempotencyKey', uuid());\n      });\n\n    case COMPOSE_SUBMIT_REQUEST:\n      return state.set('is_submitting', true);\n\n    case COMPOSE_UPLOAD_CHANGE_REQUEST:\n      return state.set('is_changing_upload', true);\n\n    case COMPOSE_SUBMIT_SUCCESS:\n      return clearAll(state);\n\n    case COMPOSE_SUBMIT_FAIL:\n      return state.set('is_submitting', false);\n\n    case COMPOSE_UPLOAD_CHANGE_FAIL:\n      return state.set('is_changing_upload', false);\n\n    case COMPOSE_UPLOAD_REQUEST:\n      return state.set('is_uploading', true).update('pending_media_attachments', function (n) {\n        return n + 1;\n      });\n\n    case COMPOSE_UPLOAD_SUCCESS:\n      return appendMedia(state, fromJS(action.media), action.file);\n\n    case COMPOSE_UPLOAD_FAIL:\n      return state.set('is_uploading', false).update('pending_media_attachments', function (n) {\n        return n - 1;\n      });\n\n    case COMPOSE_UPLOAD_UNDO:\n      return removeMedia(state, action.media_id);\n\n    case COMPOSE_UPLOAD_PROGRESS:\n      return state.set('progress', Math.round(action.loaded / action.total * 100));\n\n    case THUMBNAIL_UPLOAD_REQUEST:\n      return state.set('isUploadingThumbnail', true);\n\n    case THUMBNAIL_UPLOAD_PROGRESS:\n      return state.set('thumbnailProgress', Math.round(action.loaded / action.total * 100));\n\n    case THUMBNAIL_UPLOAD_FAIL:\n      return state.set('isUploadingThumbnail', false);\n\n    case THUMBNAIL_UPLOAD_SUCCESS:\n      return state.set('isUploadingThumbnail', false).update('media_attachments', function (list) {\n        return list.map(function (item) {\n          if (item.get('id') === action.media.id) {\n            return fromJS(action.media);\n          }\n\n          return item;\n        });\n      });\n\n    case COMPOSE_MENTION:\n      return state.withMutations(function (map) {\n        map.update('text', function (text) {\n          return [text.trim(), \"@\" + action.account.get('acct') + \" \"].filter(function (str) {\n            return str.length !== 0;\n          }).join(' ');\n        });\n        map.set('focusDate', new Date());\n        map.set('caretPosition', null);\n        map.set('idempotencyKey', uuid());\n      });\n\n    case COMPOSE_DIRECT:\n      return state.withMutations(function (map) {\n        map.update('text', function (text) {\n          return [text.trim(), \"@\" + action.account.get('acct') + \" \"].filter(function (str) {\n            return str.length !== 0;\n          }).join(' ');\n        });\n        map.set('privacy', 'direct');\n        map.set('focusDate', new Date());\n        map.set('caretPosition', null);\n        map.set('idempotencyKey', uuid());\n      });\n\n    case COMPOSE_SUGGESTIONS_CLEAR:\n      return state.update('suggestions', ImmutableList(), function (list) {\n        return list.clear();\n      }).set('suggestion_token', null);\n\n    case COMPOSE_SUGGESTIONS_READY:\n      return state.set('suggestions', ImmutableList(normalizeSuggestions(state, action))).set('suggestion_token', action.token);\n\n    case COMPOSE_SUGGESTION_SELECT:\n      return insertSuggestion(state, action.position, action.token, action.completion, action.path);\n\n    case COMPOSE_SUGGESTION_TAGS_UPDATE:\n      return updateSuggestionTags(state, action.token);\n\n    case COMPOSE_TAG_HISTORY_UPDATE:\n      return state.set('tagHistory', fromJS(action.tags));\n\n    case TIMELINE_DELETE:\n      if (action.id === state.get('in_reply_to')) {\n        return state.set('in_reply_to', null);\n      } else {\n        return state;\n      }\n\n    case COMPOSE_EMOJI_INSERT:\n      return insertEmoji(state, action.position, action.emoji, action.needsSpace);\n\n    case COMPOSE_UPLOAD_CHANGE_SUCCESS:\n      return state.set('is_changing_upload', false).update('media_attachments', function (list) {\n        return list.map(function (item) {\n          if (item.get('id') === action.media.id) {\n            return fromJS(action.media);\n          }\n\n          return item;\n        });\n      });\n\n    case REDRAFT:\n      return state.withMutations(function (map) {\n        map.set('text', action.raw_text || unescapeHTML(expandMentions(action.status)));\n        map.set('in_reply_to', action.status.get('in_reply_to_id'));\n        map.set('privacy', action.status.get('visibility'));\n        map.set('media_attachments', action.status.get('media_attachments'));\n        map.set('focusDate', new Date());\n        map.set('caretPosition', null);\n        map.set('idempotencyKey', uuid());\n        map.set('sensitive', action.status.get('sensitive'));\n\n        if (action.status.get('spoiler_text').length > 0) {\n          map.set('spoiler', true);\n          map.set('spoiler_text', action.status.get('spoiler_text'));\n        } else {\n          map.set('spoiler', false);\n          map.set('spoiler_text', '');\n        }\n\n        if (action.status.get('poll')) {\n          map.set('poll', ImmutableMap({\n            options: action.status.getIn(['poll', 'options']).map(function (x) {\n              return x.get('title');\n            }),\n            multiple: action.status.getIn(['poll', 'multiple']),\n            expires_in: expiresInFromExpiresAt(action.status.getIn(['poll', 'expires_at']))\n          }));\n        }\n      });\n\n    case COMPOSE_POLL_ADD:\n      return state.set('poll', initialPoll);\n\n    case COMPOSE_POLL_REMOVE:\n      return state.set('poll', null);\n\n    case COMPOSE_POLL_OPTION_ADD:\n      return state.updateIn(['poll', 'options'], function (options) {\n        return options.push(action.title);\n      });\n\n    case COMPOSE_POLL_OPTION_CHANGE:\n      return state.setIn(['poll', 'options', action.index], action.title);\n\n    case COMPOSE_POLL_OPTION_REMOVE:\n      return state.updateIn(['poll', 'options'], function (options) {\n        return options.delete(action.index);\n      });\n\n    case COMPOSE_POLL_SETTINGS_CHANGE:\n      return state.update('poll', function (poll) {\n        return poll.set('expires_in', action.expiresIn).set('multiple', action.isMultiple);\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/compose.js"],"names":["COMPOSE_MOUNT","COMPOSE_UNMOUNT","COMPOSE_CHANGE","COMPOSE_REPLY","COMPOSE_REPLY_CANCEL","COMPOSE_DIRECT","COMPOSE_MENTION","COMPOSE_SUBMIT_REQUEST","COMPOSE_SUBMIT_SUCCESS","COMPOSE_SUBMIT_FAIL","COMPOSE_UPLOAD_REQUEST","COMPOSE_UPLOAD_SUCCESS","COMPOSE_UPLOAD_FAIL","COMPOSE_UPLOAD_UNDO","COMPOSE_UPLOAD_PROGRESS","THUMBNAIL_UPLOAD_REQUEST","THUMBNAIL_UPLOAD_SUCCESS","THUMBNAIL_UPLOAD_FAIL","THUMBNAIL_UPLOAD_PROGRESS","COMPOSE_SUGGESTIONS_CLEAR","COMPOSE_SUGGESTIONS_READY","COMPOSE_SUGGESTION_SELECT","COMPOSE_SUGGESTION_TAGS_UPDATE","COMPOSE_TAG_HISTORY_UPDATE","COMPOSE_SENSITIVITY_CHANGE","COMPOSE_SPOILERNESS_CHANGE","COMPOSE_SPOILER_TEXT_CHANGE","COMPOSE_VISIBILITY_CHANGE","COMPOSE_COMPOSING_CHANGE","COMPOSE_EMOJI_INSERT","COMPOSE_UPLOAD_CHANGE_REQUEST","COMPOSE_UPLOAD_CHANGE_SUCCESS","COMPOSE_UPLOAD_CHANGE_FAIL","COMPOSE_RESET","COMPOSE_POLL_ADD","COMPOSE_POLL_REMOVE","COMPOSE_POLL_OPTION_ADD","COMPOSE_POLL_OPTION_CHANGE","COMPOSE_POLL_OPTION_REMOVE","COMPOSE_POLL_SETTINGS_CHANGE","TIMELINE_DELETE","STORE_HYDRATE","REDRAFT","Map","ImmutableMap","List","ImmutableList","OrderedSet","ImmutableOrderedSet","fromJS","uuid","me","unescapeHTML","initialState","mounted","sensitive","spoiler","spoiler_text","privacy","text","focusDate","caretPosition","preselectDate","in_reply_to","is_composing","is_submitting","is_changing_upload","is_uploading","progress","isUploadingThumbnail","thumbnailProgress","media_attachments","pending_media_attachments","poll","suggestion_token","suggestions","default_privacy","default_sensitive","resetFileKey","Math","floor","random","idempotencyKey","tagHistory","initialPoll","options","expires_in","multiple","statusToTextMentions","state","status","set","getIn","add","union","get","filterNot","mention","map","join","clearAll","withMutations","update","list","clear","appendMedia","media","file","prevSize","size","push","n","removeMedia","mediaId","item","insertSuggestion","position","token","completion","path","updateIn","oldText","slice","length","Date","sortHashtagsByUse","tags","personalHistory","sort","a","b","usedA","includes","name","usedB","insertEmoji","emojiData","needsSpace","emoji","native","merge","privacyPreference","order","max","indexOf","hydrate","hydratedState","has","domParser","DOMParser","expandMentions","fragment","parseFromString","documentElement","forEach","querySelector","textContent","innerHTML","expiresInFromExpiresAt","expires_at","delta","getTime","now","find","mergeLocalHashtagResults","prefix","toLowerCase","localTags","filter","tag","startsWith","some","suggestion","type","concat","toJS","normalizeSuggestions","accounts","emojis","id","updateSuggestionTags","compose","action","value","media_id","round","loaded","total","trim","account","str","raw_text","x","title","setIn","index","delete","expiresIn","isMultiple"],"mappings":"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","sourcesContent":["import {\n  COMPOSE_MOUNT,\n  COMPOSE_UNMOUNT,\n  COMPOSE_CHANGE,\n  COMPOSE_REPLY,\n  COMPOSE_REPLY_CANCEL,\n  COMPOSE_DIRECT,\n  COMPOSE_MENTION,\n  COMPOSE_SUBMIT_REQUEST,\n  COMPOSE_SUBMIT_SUCCESS,\n  COMPOSE_SUBMIT_FAIL,\n  COMPOSE_UPLOAD_REQUEST,\n  COMPOSE_UPLOAD_SUCCESS,\n  COMPOSE_UPLOAD_FAIL,\n  COMPOSE_UPLOAD_UNDO,\n  COMPOSE_UPLOAD_PROGRESS,\n  THUMBNAIL_UPLOAD_REQUEST,\n  THUMBNAIL_UPLOAD_SUCCESS,\n  THUMBNAIL_UPLOAD_FAIL,\n  THUMBNAIL_UPLOAD_PROGRESS,\n  COMPOSE_SUGGESTIONS_CLEAR,\n  COMPOSE_SUGGESTIONS_READY,\n  COMPOSE_SUGGESTION_SELECT,\n  COMPOSE_SUGGESTION_TAGS_UPDATE,\n  COMPOSE_TAG_HISTORY_UPDATE,\n  COMPOSE_SENSITIVITY_CHANGE,\n  COMPOSE_SPOILERNESS_CHANGE,\n  COMPOSE_SPOILER_TEXT_CHANGE,\n  COMPOSE_VISIBILITY_CHANGE,\n  COMPOSE_COMPOSING_CHANGE,\n  COMPOSE_EMOJI_INSERT,\n  COMPOSE_UPLOAD_CHANGE_REQUEST,\n  COMPOSE_UPLOAD_CHANGE_SUCCESS,\n  COMPOSE_UPLOAD_CHANGE_FAIL,\n  COMPOSE_RESET,\n  COMPOSE_POLL_ADD,\n  COMPOSE_POLL_REMOVE,\n  COMPOSE_POLL_OPTION_ADD,\n  COMPOSE_POLL_OPTION_CHANGE,\n  COMPOSE_POLL_OPTION_REMOVE,\n  COMPOSE_POLL_SETTINGS_CHANGE,\n} from '../actions/compose';\nimport { TIMELINE_DELETE } from '../actions/timelines';\nimport { STORE_HYDRATE } from '../actions/store';\nimport { REDRAFT } from '../actions/statuses';\nimport { Map as ImmutableMap, List as ImmutableList, OrderedSet as ImmutableOrderedSet, fromJS } from 'immutable';\nimport uuid from '../uuid';\nimport { me } from '../initial_state';\nimport { unescapeHTML } from '../utils/html';\n\nconst initialState = ImmutableMap({\n  mounted: 0,\n  sensitive: false,\n  spoiler: false,\n  spoiler_text: '',\n  privacy: null,\n  text: '',\n  focusDate: null,\n  caretPosition: null,\n  preselectDate: null,\n  in_reply_to: null,\n  is_composing: false,\n  is_submitting: false,\n  is_changing_upload: false,\n  is_uploading: false,\n  progress: 0,\n  isUploadingThumbnail: false,\n  thumbnailProgress: 0,\n  media_attachments: ImmutableList(),\n  pending_media_attachments: 0,\n  poll: null,\n  suggestion_token: null,\n  suggestions: ImmutableList(),\n  default_privacy: 'public',\n  default_sensitive: false,\n  resetFileKey: Math.floor((Math.random() * 0x10000)),\n  idempotencyKey: null,\n  tagHistory: ImmutableList(),\n});\n\nconst initialPoll = ImmutableMap({\n  options: ImmutableList(['', '']),\n  expires_in: 24 * 3600,\n  multiple: false,\n});\n\nfunction statusToTextMentions(state, status) {\n  let set = ImmutableOrderedSet([]);\n\n  if (status.getIn(['account', 'id']) !== me) {\n    set = set.add(`@${status.getIn(['account', 'acct'])} `);\n  }\n\n  return set.union(status.get('mentions').filterNot(mention => mention.get('id') === me).map(mention => `@${mention.get('acct')} `)).join('');\n};\n\nfunction clearAll(state) {\n  return state.withMutations(map => {\n    map.set('text', '');\n    map.set('spoiler', false);\n    map.set('spoiler_text', '');\n    map.set('is_submitting', false);\n    map.set('is_changing_upload', false);\n    map.set('in_reply_to', null);\n    map.set('privacy', state.get('default_privacy'));\n    map.set('sensitive', false);\n    map.update('media_attachments', list => list.clear());\n    map.set('poll', null);\n    map.set('idempotencyKey', uuid());\n  });\n};\n\nfunction appendMedia(state, media, file) {\n  const prevSize = state.get('media_attachments').size;\n\n  return state.withMutations(map => {\n    if (media.get('type') === 'image') {\n      media = media.set('file', file);\n    }\n    map.update('media_attachments', list => list.push(media));\n    map.set('is_uploading', false);\n    map.set('resetFileKey', Math.floor((Math.random() * 0x10000)));\n    map.set('idempotencyKey', uuid());\n    map.update('pending_media_attachments', n => n - 1);\n\n    if (prevSize === 0 && (state.get('default_sensitive') || state.get('spoiler'))) {\n      map.set('sensitive', true);\n    }\n  });\n};\n\nfunction removeMedia(state, mediaId) {\n  const prevSize = state.get('media_attachments').size;\n\n  return state.withMutations(map => {\n    map.update('media_attachments', list => list.filterNot(item => item.get('id') === mediaId));\n    map.set('idempotencyKey', uuid());\n\n    if (prevSize === 1) {\n      map.set('sensitive', false);\n    }\n  });\n};\n\nconst insertSuggestion = (state, position, token, completion, path) => {\n  return state.withMutations(map => {\n    map.updateIn(path, oldText => `${oldText.slice(0, position)}${completion} ${oldText.slice(position + token.length)}`);\n    map.set('suggestion_token', null);\n    map.set('suggestions', ImmutableList());\n    if (path.length === 1 && path[0] === 'text') {\n      map.set('focusDate', new Date());\n      map.set('caretPosition', position + completion.length + 1);\n    }\n    map.set('idempotencyKey', uuid());\n  });\n};\n\nconst sortHashtagsByUse = (state, tags) => {\n  const personalHistory = state.get('tagHistory');\n\n  return tags.sort((a, b) => {\n    const usedA = personalHistory.includes(a.name);\n    const usedB = personalHistory.includes(b.name);\n\n    if (usedA === usedB) {\n      return 0;\n    } else if (usedA && !usedB) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n};\n\nconst insertEmoji = (state, position, emojiData, needsSpace) => {\n  const oldText = state.get('text');\n  const emoji = needsSpace ? ' ' + emojiData.native : emojiData.native;\n\n  return state.merge({\n    text: `${oldText.slice(0, position)}${emoji} ${oldText.slice(position)}`,\n    focusDate: new Date(),\n    caretPosition: position + emoji.length + 1,\n    idempotencyKey: uuid(),\n  });\n};\n\nconst privacyPreference = (a, b) => {\n  const order = ['public', 'unlisted', 'private', 'direct'];\n  return order[Math.max(order.indexOf(a), order.indexOf(b), 0)];\n};\n\nconst hydrate = (state, hydratedState) => {\n  state = clearAll(state.merge(hydratedState));\n\n  if (hydratedState.has('text')) {\n    state = state.set('text', hydratedState.get('text'));\n  }\n\n  return state;\n};\n\nconst domParser = new DOMParser();\n\nconst expandMentions = status => {\n  const fragment = domParser.parseFromString(status.get('content'), 'text/html').documentElement;\n\n  status.get('mentions').forEach(mention => {\n    fragment.querySelector(`a[href=\"${mention.get('url')}\"]`).textContent = `@${mention.get('acct')}`;\n  });\n\n  return fragment.innerHTML;\n};\n\nconst expiresInFromExpiresAt = expires_at => {\n  if (!expires_at) return 24 * 3600;\n  const delta = (new Date(expires_at).getTime() - Date.now()) / 1000;\n  return [300, 1800, 3600, 21600, 86400, 259200, 604800].find(expires_in => expires_in >= delta) || 24 * 3600;\n};\n\nconst mergeLocalHashtagResults = (suggestions, prefix, tagHistory) => {\n  prefix = prefix.toLowerCase();\n  if (suggestions.length < 4) {\n    const localTags = tagHistory.filter(tag => tag.toLowerCase().startsWith(prefix) && !suggestions.some(suggestion => suggestion.type === 'hashtag' && suggestion.name.toLowerCase() === tag.toLowerCase()));\n    return suggestions.concat(localTags.slice(0, 4 - suggestions.length).toJS().map(tag => ({ type: 'hashtag', name: tag })));\n  } else {\n    return suggestions;\n  }\n};\n\nconst normalizeSuggestions = (state, { accounts, emojis, tags, token }) => {\n  if (accounts) {\n    return accounts.map(item => ({ id: item.id, type: 'account' }));\n  } else if (emojis) {\n    return emojis.map(item => ({ ...item, type: 'emoji' }));\n  } else {\n    return mergeLocalHashtagResults(sortHashtagsByUse(state, tags.map(item => ({ ...item, type: 'hashtag' }))), token.slice(1), state.get('tagHistory'));\n  }\n};\n\nconst updateSuggestionTags = (state, token) => {\n  const prefix = token.slice(1);\n\n  const suggestions = state.get('suggestions').toJS();\n  return state.merge({\n    suggestions: ImmutableList(mergeLocalHashtagResults(suggestions, prefix, state.get('tagHistory'))),\n    suggestion_token: token,\n  });\n};\n\nexport default function compose(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE:\n    return hydrate(state, action.state.get('compose'));\n  case COMPOSE_MOUNT:\n    return state.set('mounted', state.get('mounted') + 1);\n  case COMPOSE_UNMOUNT:\n    return state\n      .set('mounted', Math.max(state.get('mounted') - 1, 0))\n      .set('is_composing', false);\n  case COMPOSE_SENSITIVITY_CHANGE:\n    return state.withMutations(map => {\n      if (!state.get('spoiler')) {\n        map.set('sensitive', !state.get('sensitive'));\n      }\n\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_SPOILERNESS_CHANGE:\n    return state.withMutations(map => {\n      map.set('spoiler', !state.get('spoiler'));\n      map.set('idempotencyKey', uuid());\n\n      if (!state.get('sensitive') && state.get('media_attachments').size >= 1) {\n        map.set('sensitive', true);\n      }\n    });\n  case COMPOSE_SPOILER_TEXT_CHANGE:\n    if (!state.get('spoiler')) return state;\n    return state\n      .set('spoiler_text', action.text)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_VISIBILITY_CHANGE:\n    return state\n      .set('privacy', action.value)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_CHANGE:\n    return state\n      .set('text', action.text)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_COMPOSING_CHANGE:\n    return state.set('is_composing', action.value);\n  case COMPOSE_REPLY:\n    return state.withMutations(map => {\n      map.set('in_reply_to', action.status.get('id'));\n      map.set('text', statusToTextMentions(state, action.status));\n      map.set('privacy', privacyPreference(action.status.get('visibility'), state.get('default_privacy')));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('preselectDate', new Date());\n      map.set('idempotencyKey', uuid());\n\n      if (action.status.get('spoiler_text').length > 0) {\n        map.set('spoiler', true);\n        map.set('spoiler_text', action.status.get('spoiler_text'));\n      } else {\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n      }\n    });\n  case COMPOSE_REPLY_CANCEL:\n  case COMPOSE_RESET:\n    return state.withMutations(map => {\n      map.set('in_reply_to', null);\n      map.set('text', '');\n      map.set('spoiler', false);\n      map.set('spoiler_text', '');\n      map.set('privacy', state.get('default_privacy'));\n      map.set('poll', null);\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_SUBMIT_REQUEST:\n    return state.set('is_submitting', true);\n  case COMPOSE_UPLOAD_CHANGE_REQUEST:\n    return state.set('is_changing_upload', true);\n  case COMPOSE_SUBMIT_SUCCESS:\n    return clearAll(state);\n  case COMPOSE_SUBMIT_FAIL:\n    return state.set('is_submitting', false);\n  case COMPOSE_UPLOAD_CHANGE_FAIL:\n    return state.set('is_changing_upload', false);\n  case COMPOSE_UPLOAD_REQUEST:\n    return state.set('is_uploading', true).update('pending_media_attachments', n => n + 1);\n  case COMPOSE_UPLOAD_SUCCESS:\n    return appendMedia(state, fromJS(action.media), action.file);\n  case COMPOSE_UPLOAD_FAIL:\n    return state.set('is_uploading', false).update('pending_media_attachments', n => n - 1);\n  case COMPOSE_UPLOAD_UNDO:\n    return removeMedia(state, action.media_id);\n  case COMPOSE_UPLOAD_PROGRESS:\n    return state.set('progress', Math.round((action.loaded / action.total) * 100));\n  case THUMBNAIL_UPLOAD_REQUEST:\n    return state.set('isUploadingThumbnail', true);\n  case THUMBNAIL_UPLOAD_PROGRESS:\n    return state.set('thumbnailProgress', Math.round((action.loaded / action.total) * 100));\n  case THUMBNAIL_UPLOAD_FAIL:\n    return state.set('isUploadingThumbnail', false);\n  case THUMBNAIL_UPLOAD_SUCCESS:\n    return state\n      .set('isUploadingThumbnail', false)\n      .update('media_attachments', list => list.map(item => {\n        if (item.get('id') === action.media.id) {\n          return fromJS(action.media);\n        }\n\n        return item;\n      }));\n  case COMPOSE_MENTION:\n    return state.withMutations(map => {\n      map.update('text', text => [text.trim(), `@${action.account.get('acct')} `].filter((str) => str.length !== 0).join(' '));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_DIRECT:\n    return state.withMutations(map => {\n      map.update('text', text => [text.trim(), `@${action.account.get('acct')} `].filter((str) => str.length !== 0).join(' '));\n      map.set('privacy', 'direct');\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_SUGGESTIONS_CLEAR:\n    return state.update('suggestions', ImmutableList(), list => list.clear()).set('suggestion_token', null);\n  case COMPOSE_SUGGESTIONS_READY:\n    return state.set('suggestions', ImmutableList(normalizeSuggestions(state, action))).set('suggestion_token', action.token);\n  case COMPOSE_SUGGESTION_SELECT:\n    return insertSuggestion(state, action.position, action.token, action.completion, action.path);\n  case COMPOSE_SUGGESTION_TAGS_UPDATE:\n    return updateSuggestionTags(state, action.token);\n  case COMPOSE_TAG_HISTORY_UPDATE:\n    return state.set('tagHistory', fromJS(action.tags));\n  case TIMELINE_DELETE:\n    if (action.id === state.get('in_reply_to')) {\n      return state.set('in_reply_to', null);\n    } else {\n      return state;\n    }\n  case COMPOSE_EMOJI_INSERT:\n    return insertEmoji(state, action.position, action.emoji, action.needsSpace);\n  case COMPOSE_UPLOAD_CHANGE_SUCCESS:\n    return state\n      .set('is_changing_upload', false)\n      .update('media_attachments', list => list.map(item => {\n        if (item.get('id') === action.media.id) {\n          return fromJS(action.media);\n        }\n\n        return item;\n      }));\n  case REDRAFT:\n    return state.withMutations(map => {\n      map.set('text', action.raw_text || unescapeHTML(expandMentions(action.status)));\n      map.set('in_reply_to', action.status.get('in_reply_to_id'));\n      map.set('privacy', action.status.get('visibility'));\n      map.set('media_attachments', action.status.get('media_attachments'));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n      map.set('sensitive', action.status.get('sensitive'));\n\n      if (action.status.get('spoiler_text').length > 0) {\n        map.set('spoiler', true);\n        map.set('spoiler_text', action.status.get('spoiler_text'));\n      } else {\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n      }\n\n      if (action.status.get('poll')) {\n        map.set('poll', ImmutableMap({\n          options: action.status.getIn(['poll', 'options']).map(x => x.get('title')),\n          multiple: action.status.getIn(['poll', 'multiple']),\n          expires_in: expiresInFromExpiresAt(action.status.getIn(['poll', 'expires_at'])),\n        }));\n      }\n    });\n  case COMPOSE_POLL_ADD:\n    return state.set('poll', initialPoll);\n  case COMPOSE_POLL_REMOVE:\n    return state.set('poll', null);\n  case COMPOSE_POLL_OPTION_ADD:\n    return state.updateIn(['poll', 'options'], options => options.push(action.title));\n  case COMPOSE_POLL_OPTION_CHANGE:\n    return state.setIn(['poll', 'options', action.index], action.title);\n  case COMPOSE_POLL_OPTION_REMOVE:\n    return state.updateIn(['poll', 'options'], options => options.delete(action.index));\n  case COMPOSE_POLL_SETTINGS_CHANGE:\n    return state.update('poll', poll => poll.set('expires_in', action.expiresIn).set('multiple', action.isMultiple));\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}