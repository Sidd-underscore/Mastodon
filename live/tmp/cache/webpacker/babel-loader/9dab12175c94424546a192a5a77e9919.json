{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/follow_recommendations/components/account.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from 'mastodon/selectors';\nimport Avatar from 'mastodon/components/avatar';\nimport DisplayName from 'mastodon/components/display_name';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport { followAccount, unfollowAccount } from 'mastodon/actions/accounts';\nvar messages = defineMessages({\n  follow: {\n    \"id\": \"account.follow\",\n    \"defaultMessage\": \"Follow\"\n  },\n  unfollow: {\n    \"id\": \"account.unfollow\",\n    \"defaultMessage\": \"Unfollow\"\n  }\n});\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getAccount = makeGetAccount();\n\n  var mapStateToProps = function mapStateToProps(state, props) {\n    return {\n      account: getAccount(state, props.id)\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar getFirstSentence = function getFirstSentence(str) {\n  var arr = str.split(/(([\\.\\?!]+\\s)|[．。？！\\n•])/);\n  return arr[0];\n};\n\nvar Account = (_dec = connect(makeMapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Account, _ImmutablePureCompone);\n\n  function Account() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleFollow = function () {\n      var _this$props = _this.props,\n          account = _this$props.account,\n          dispatch = _this$props.dispatch;\n\n      if (account.getIn(['relationship', 'following']) || account.getIn(['relationship', 'requested'])) {\n        dispatch(unfollowAccount(account.get('id')));\n      } else {\n        dispatch(followAccount(account.get('id')));\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = Account.prototype;\n\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n        account = _this$props2.account,\n        intl = _this$props2.intl;\n    var button;\n\n    if (account.getIn(['relationship', 'following'])) {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"check\",\n        title: intl.formatMessage(messages.unfollow),\n        active: true,\n        onClick: this.handleFollow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }\n      });\n    } else {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"plus\",\n        title: intl.formatMessage(messages.follow),\n        onClick: this.handleFollow,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account follow-recommendations-account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Permalink, {\n      className: \"account__display-name account__display-name--with-note\",\n      title: account.get('acct'),\n      href: account.get('url'),\n      to: \"/accounts/\" + account.get('id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__avatar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: account,\n      size: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__note\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, getFirstSentence(account.get('note_plain')))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__relationship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }, button)));\n  };\n\n  return Account;\n}(ImmutablePureComponent), _class2.propTypes = {\n  account: ImmutablePropTypes.map.isRequired,\n  intl: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired\n}, _temp)) || _class) || _class);\nexport { Account as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/follow_recommendations/components/account.js"],"names":["React","PropTypes","ImmutablePropTypes","ImmutablePureComponent","connect","makeGetAccount","Avatar","DisplayName","Permalink","IconButton","injectIntl","defineMessages","followAccount","unfollowAccount","messages","follow","unfollow","makeMapStateToProps","getAccount","mapStateToProps","state","props","account","id","getFirstSentence","str","arr","split","Account","handleFollow","dispatch","getIn","get","render","intl","button","formatMessage","propTypes","map","isRequired","object","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from 'mastodon/selectors';\nimport Avatar from 'mastodon/components/avatar';\nimport DisplayName from 'mastodon/components/display_name';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport { followAccount, unfollowAccount } from 'mastodon/actions/accounts';\n\nconst messages = defineMessages({\n  follow: { id: 'account.follow', defaultMessage: 'Follow' },\n  unfollow: { id: 'account.unfollow', defaultMessage: 'Unfollow' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, props) => ({\n    account: getAccount(state, props.id),\n  });\n\n  return mapStateToProps;\n};\n\nconst getFirstSentence = str => {\n  const arr = str.split(/(([\\.\\?!]+\\s)|[．。？！\\n•])/);\n\n  return arr[0];\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleFollow = () => {\n    const { account, dispatch } = this.props;\n\n    if (account.getIn(['relationship', 'following']) || account.getIn(['relationship', 'requested'])) {\n      dispatch(unfollowAccount(account.get('id')));\n    } else {\n      dispatch(followAccount(account.get('id')));\n    }\n  }\n\n  render () {\n    const { account, intl } = this.props;\n\n    let button;\n\n    if (account.getIn(['relationship', 'following'])) {\n      button = <IconButton icon='check' title={intl.formatMessage(messages.unfollow)} active onClick={this.handleFollow} />;\n    } else {\n      button = <IconButton icon='plus' title={intl.formatMessage(messages.follow)} onClick={this.handleFollow} />;\n    }\n\n    return (\n      <div className='account follow-recommendations-account'>\n        <div className='account__wrapper'>\n          <Permalink className='account__display-name account__display-name--with-note' title={account.get('acct')} href={account.get('url')} to={`/accounts/${account.get('id')}`}>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n\n            <DisplayName account={account} />\n\n            <div className='account__note'>{getFirstSentence(account.get('note_plain'))}</div>\n          </Permalink>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"account.follow","defaultMessage":"Follow"},{"id":"account.unfollow","defaultMessage":"Unfollow"}]}},"sourceType":"module"}