{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/hashtag.js\",\n    _this2 = this;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n// @ts-check\nimport React from 'react';\nimport { Sparklines, SparklinesCurve } from 'react-sparklines';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Permalink from './permalink';\nimport ShortNumber from 'mastodon/components/short_number';\n\nvar SilentErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(SilentErrorBoundary, _React$Component);\n\n  function SilentErrorBoundary() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      error: false\n    };\n    return _this;\n  }\n\n  var _proto = SilentErrorBoundary.prototype;\n\n  _proto.componentDidCatch = function componentDidCatch() {\n    this.setState({\n      error: true\n    });\n  };\n\n  _proto.render = function render() {\n    if (this.state.error) {\n      return null;\n    }\n\n    return this.props.children;\n  };\n\n  return SilentErrorBoundary;\n}(React.Component);\n/**\n * Used to render counter of how much people are talking about hashtag\n *\n * @type {(displayNumber: JSX.Element, pluralReady: number) => JSX.Element}\n */\n\n\nSilentErrorBoundary.propTypes = {\n  children: PropTypes.node\n};\n\nvar accountsCountRenderer = function accountsCountRenderer(displayNumber, pluralReady) {\n  return /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"trends.counter_by_accounts\",\n    defaultMessage: \"{count, plural, one {{counter} person} other {{counter} people}} talking\",\n    values: {\n      count: pluralReady,\n      counter: /*#__PURE__*/React.createElement(\"strong\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }\n      }, displayNumber)\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  });\n};\n\nvar Hashtag = function Hashtag(_ref) {\n  var hashtag = _ref.hashtag;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends__item\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends__item__name\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Permalink, {\n    href: hashtag.get('url'),\n    to: \"/timelines/tag/\" + hashtag.get('name'),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"#\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 10\n    }\n  }, hashtag.get('name'))), /*#__PURE__*/React.createElement(ShortNumber, {\n    value: hashtag.getIn(['history', 0, 'accounts']) * 1 + hashtag.getIn(['history', 1, 'accounts']) * 1,\n    renderer: accountsCountRenderer,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends__item__current\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ShortNumber, {\n    value: hashtag.getIn(['history', 0, 'uses']) * 1 + hashtag.getIn(['history', 1, 'uses']) * 1,\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"trends__item__sparkline\",\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SilentErrorBoundary, {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Sparklines, {\n    width: 50,\n    height: 28,\n    data: hashtag.get('history').reverse().map(function (day) {\n      return day.get('uses');\n    }).toArray(),\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SparklinesCurve, {\n    style: {\n      fill: 'none'\n    },\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  })))));\n};\n\nHashtag.propTypes = {\n  hashtag: ImmutablePropTypes.map.isRequired\n};\nexport default Hashtag;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/hashtag.js"],"names":["React","Sparklines","SparklinesCurve","FormattedMessage","PropTypes","ImmutablePropTypes","Permalink","ShortNumber","SilentErrorBoundary","state","error","componentDidCatch","setState","render","props","children","Component","propTypes","node","accountsCountRenderer","displayNumber","pluralReady","count","counter","Hashtag","hashtag","get","getIn","reverse","map","day","toArray","fill","isRequired"],"mappings":"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","sourcesContent":["// @ts-check\nimport React from 'react';\nimport { Sparklines, SparklinesCurve } from 'react-sparklines';\nimport { FormattedMessage } from 'react-intl';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Permalink from './permalink';\nimport ShortNumber from 'mastodon/components/short_number';\n\nclass SilentErrorBoundary extends React.Component {\n\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  state = {\n    error: false,\n  };\n\n  componentDidCatch () {\n    this.setState({ error: true });\n  }\n\n  render () {\n    if (this.state.error) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n\n}\n\n/**\n * Used to render counter of how much people are talking about hashtag\n *\n * @type {(displayNumber: JSX.Element, pluralReady: number) => JSX.Element}\n */\nconst accountsCountRenderer = (displayNumber, pluralReady) => (\n  <FormattedMessage\n    id='trends.counter_by_accounts'\n    defaultMessage='{count, plural, one {{counter} person} other {{counter} people}} talking'\n    values={{\n      count: pluralReady,\n      counter: <strong>{displayNumber}</strong>,\n    }}\n  />\n);\n\nconst Hashtag = ({ hashtag }) => (\n  <div className='trends__item'>\n    <div className='trends__item__name'>\n      <Permalink\n        href={hashtag.get('url')}\n        to={`/timelines/tag/${hashtag.get('name')}`}\n      >\n        #<span>{hashtag.get('name')}</span>\n      </Permalink>\n\n      <ShortNumber\n        value={\n          hashtag.getIn(['history', 0, 'accounts']) * 1 +\n          hashtag.getIn(['history', 1, 'accounts']) * 1\n        }\n        renderer={accountsCountRenderer}\n      />\n    </div>\n\n    <div className='trends__item__current'>\n      <ShortNumber\n        value={\n          hashtag.getIn(['history', 0, 'uses']) * 1 +\n          hashtag.getIn(['history', 1, 'uses']) * 1\n        }\n      />\n    </div>\n\n    <div className='trends__item__sparkline'>\n      <SilentErrorBoundary>\n        <Sparklines\n          width={50}\n          height={28}\n          data={hashtag\n            .get('history')\n            .reverse()\n            .map((day) => day.get('uses'))\n            .toArray()}\n        >\n          <SparklinesCurve style={{ fill: 'none' }} />\n        </Sparklines>\n      </SilentErrorBoundary>\n    </div>\n  </div>\n);\n\nHashtag.propTypes = {\n  hashtag: ImmutablePropTypes.map.isRequired,\n};\n\nexport default Hashtag;\n"]},"metadata":{"react-intl":{"messages":[{"id":"trends.counter_by_accounts","defaultMessage":"{count, plural, one {{counter} person} other {{counter} people}} talking"}]}},"sourceType":"module"}