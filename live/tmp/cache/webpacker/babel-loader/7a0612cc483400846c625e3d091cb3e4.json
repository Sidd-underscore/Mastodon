{"ast":null,"code":"import api from '../api';\nimport { importFetchedAccounts, importFetchedStatus } from './importer';\nexport var REBLOG_REQUEST = 'REBLOG_REQUEST';\nexport var REBLOG_SUCCESS = 'REBLOG_SUCCESS';\nexport var REBLOG_FAIL = 'REBLOG_FAIL';\nexport var FAVOURITE_REQUEST = 'FAVOURITE_REQUEST';\nexport var FAVOURITE_SUCCESS = 'FAVOURITE_SUCCESS';\nexport var FAVOURITE_FAIL = 'FAVOURITE_FAIL';\nexport var UNREBLOG_REQUEST = 'UNREBLOG_REQUEST';\nexport var UNREBLOG_SUCCESS = 'UNREBLOG_SUCCESS';\nexport var UNREBLOG_FAIL = 'UNREBLOG_FAIL';\nexport var UNFAVOURITE_REQUEST = 'UNFAVOURITE_REQUEST';\nexport var UNFAVOURITE_SUCCESS = 'UNFAVOURITE_SUCCESS';\nexport var UNFAVOURITE_FAIL = 'UNFAVOURITE_FAIL';\nexport var REBLOGS_FETCH_REQUEST = 'REBLOGS_FETCH_REQUEST';\nexport var REBLOGS_FETCH_SUCCESS = 'REBLOGS_FETCH_SUCCESS';\nexport var REBLOGS_FETCH_FAIL = 'REBLOGS_FETCH_FAIL';\nexport var FAVOURITES_FETCH_REQUEST = 'FAVOURITES_FETCH_REQUEST';\nexport var FAVOURITES_FETCH_SUCCESS = 'FAVOURITES_FETCH_SUCCESS';\nexport var FAVOURITES_FETCH_FAIL = 'FAVOURITES_FETCH_FAIL';\nexport var PIN_REQUEST = 'PIN_REQUEST';\nexport var PIN_SUCCESS = 'PIN_SUCCESS';\nexport var PIN_FAIL = 'PIN_FAIL';\nexport var UNPIN_REQUEST = 'UNPIN_REQUEST';\nexport var UNPIN_SUCCESS = 'UNPIN_SUCCESS';\nexport var UNPIN_FAIL = 'UNPIN_FAIL';\nexport var BOOKMARK_REQUEST = 'BOOKMARK_REQUEST';\nexport var BOOKMARK_SUCCESS = 'BOOKMARKED_SUCCESS';\nexport var BOOKMARK_FAIL = 'BOOKMARKED_FAIL';\nexport var UNBOOKMARK_REQUEST = 'UNBOOKMARKED_REQUEST';\nexport var UNBOOKMARK_SUCCESS = 'UNBOOKMARKED_SUCCESS';\nexport var UNBOOKMARK_FAIL = 'UNBOOKMARKED_FAIL';\nexport function reblog(status, visibility) {\n  return function (dispatch, getState) {\n    dispatch(reblogRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/reblog\", {\n      visibility\n    }).then(function (response) {\n      // The reblog API method returns a new status wrapped around the original. In this case we are only\n      // interested in how the original is modified, hence passing it skipping the wrapper\n      dispatch(importFetchedStatus(response.data.reblog));\n      dispatch(reblogSuccess(status));\n    }).catch(function (error) {\n      dispatch(reblogFail(status, error));\n    });\n  };\n}\n;\nexport function unreblog(status) {\n  return function (dispatch, getState) {\n    dispatch(unreblogRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/unreblog\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unreblogSuccess(status));\n    }).catch(function (error) {\n      dispatch(unreblogFail(status, error));\n    });\n  };\n}\n;\nexport function reblogRequest(status) {\n  return {\n    type: REBLOG_REQUEST,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function reblogSuccess(status) {\n  return {\n    type: REBLOG_SUCCESS,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function reblogFail(status, error) {\n  return {\n    type: REBLOG_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true\n  };\n}\n;\nexport function unreblogRequest(status) {\n  return {\n    type: UNREBLOG_REQUEST,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function unreblogSuccess(status) {\n  return {\n    type: UNREBLOG_SUCCESS,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function unreblogFail(status, error) {\n  return {\n    type: UNREBLOG_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true\n  };\n}\n;\nexport function favourite(status) {\n  return function (dispatch, getState) {\n    dispatch(favouriteRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/favourite\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(favouriteSuccess(status));\n    }).catch(function (error) {\n      dispatch(favouriteFail(status, error));\n    });\n  };\n}\n;\nexport function unfavourite(status) {\n  return function (dispatch, getState) {\n    dispatch(unfavouriteRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/unfavourite\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unfavouriteSuccess(status));\n    }).catch(function (error) {\n      dispatch(unfavouriteFail(status, error));\n    });\n  };\n}\n;\nexport function favouriteRequest(status) {\n  return {\n    type: FAVOURITE_REQUEST,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function favouriteSuccess(status) {\n  return {\n    type: FAVOURITE_SUCCESS,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function favouriteFail(status, error) {\n  return {\n    type: FAVOURITE_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true\n  };\n}\n;\nexport function unfavouriteRequest(status) {\n  return {\n    type: UNFAVOURITE_REQUEST,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function unfavouriteSuccess(status) {\n  return {\n    type: UNFAVOURITE_SUCCESS,\n    status: status,\n    skipLoading: true\n  };\n}\n;\nexport function unfavouriteFail(status, error) {\n  return {\n    type: UNFAVOURITE_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true\n  };\n}\n;\nexport function bookmark(status) {\n  return function (dispatch, getState) {\n    dispatch(bookmarkRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/bookmark\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(bookmarkSuccess(status, response.data));\n    }).catch(function (error) {\n      dispatch(bookmarkFail(status, error));\n    });\n  };\n}\n;\nexport function unbookmark(status) {\n  return function (dispatch, getState) {\n    dispatch(unbookmarkRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/unbookmark\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unbookmarkSuccess(status, response.data));\n    }).catch(function (error) {\n      dispatch(unbookmarkFail(status, error));\n    });\n  };\n}\n;\nexport function bookmarkRequest(status) {\n  return {\n    type: BOOKMARK_REQUEST,\n    status: status\n  };\n}\n;\nexport function bookmarkSuccess(status, response) {\n  return {\n    type: BOOKMARK_SUCCESS,\n    status: status,\n    response: response\n  };\n}\n;\nexport function bookmarkFail(status, error) {\n  return {\n    type: BOOKMARK_FAIL,\n    status: status,\n    error: error\n  };\n}\n;\nexport function unbookmarkRequest(status) {\n  return {\n    type: UNBOOKMARK_REQUEST,\n    status: status\n  };\n}\n;\nexport function unbookmarkSuccess(status, response) {\n  return {\n    type: UNBOOKMARK_SUCCESS,\n    status: status,\n    response: response\n  };\n}\n;\nexport function unbookmarkFail(status, error) {\n  return {\n    type: UNBOOKMARK_FAIL,\n    status: status,\n    error: error\n  };\n}\n;\nexport function fetchReblogs(id) {\n  return function (dispatch, getState) {\n    dispatch(fetchReblogsRequest(id));\n    api(getState).get(\"/api/v1/statuses/\" + id + \"/reblogged_by\").then(function (response) {\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchReblogsSuccess(id, response.data));\n    }).catch(function (error) {\n      dispatch(fetchReblogsFail(id, error));\n    });\n  };\n}\n;\nexport function fetchReblogsRequest(id) {\n  return {\n    type: REBLOGS_FETCH_REQUEST,\n    id\n  };\n}\n;\nexport function fetchReblogsSuccess(id, accounts) {\n  return {\n    type: REBLOGS_FETCH_SUCCESS,\n    id,\n    accounts\n  };\n}\n;\nexport function fetchReblogsFail(id, error) {\n  return {\n    type: REBLOGS_FETCH_FAIL,\n    error\n  };\n}\n;\nexport function fetchFavourites(id) {\n  return function (dispatch, getState) {\n    dispatch(fetchFavouritesRequest(id));\n    api(getState).get(\"/api/v1/statuses/\" + id + \"/favourited_by\").then(function (response) {\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchFavouritesSuccess(id, response.data));\n    }).catch(function (error) {\n      dispatch(fetchFavouritesFail(id, error));\n    });\n  };\n}\n;\nexport function fetchFavouritesRequest(id) {\n  return {\n    type: FAVOURITES_FETCH_REQUEST,\n    id\n  };\n}\n;\nexport function fetchFavouritesSuccess(id, accounts) {\n  return {\n    type: FAVOURITES_FETCH_SUCCESS,\n    id,\n    accounts\n  };\n}\n;\nexport function fetchFavouritesFail(id, error) {\n  return {\n    type: FAVOURITES_FETCH_FAIL,\n    error\n  };\n}\n;\nexport function pin(status) {\n  return function (dispatch, getState) {\n    dispatch(pinRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/pin\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(pinSuccess(status));\n    }).catch(function (error) {\n      dispatch(pinFail(status, error));\n    });\n  };\n}\n;\nexport function pinRequest(status) {\n  return {\n    type: PIN_REQUEST,\n    status,\n    skipLoading: true\n  };\n}\n;\nexport function pinSuccess(status) {\n  return {\n    type: PIN_SUCCESS,\n    status,\n    skipLoading: true\n  };\n}\n;\nexport function pinFail(status, error) {\n  return {\n    type: PIN_FAIL,\n    status,\n    error,\n    skipLoading: true\n  };\n}\n;\nexport function unpin(status) {\n  return function (dispatch, getState) {\n    dispatch(unpinRequest(status));\n    api(getState).post(\"/api/v1/statuses/\" + status.get('id') + \"/unpin\").then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unpinSuccess(status));\n    }).catch(function (error) {\n      dispatch(unpinFail(status, error));\n    });\n  };\n}\n;\nexport function unpinRequest(status) {\n  return {\n    type: UNPIN_REQUEST,\n    status,\n    skipLoading: true\n  };\n}\n;\nexport function unpinSuccess(status) {\n  return {\n    type: UNPIN_SUCCESS,\n    status,\n    skipLoading: true\n  };\n}\n;\nexport function unpinFail(status, error) {\n  return {\n    type: UNPIN_FAIL,\n    status,\n    error,\n    skipLoading: true\n  };\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/interactions.js"],"names":["api","importFetchedAccounts","importFetchedStatus","REBLOG_REQUEST","REBLOG_SUCCESS","REBLOG_FAIL","FAVOURITE_REQUEST","FAVOURITE_SUCCESS","FAVOURITE_FAIL","UNREBLOG_REQUEST","UNREBLOG_SUCCESS","UNREBLOG_FAIL","UNFAVOURITE_REQUEST","UNFAVOURITE_SUCCESS","UNFAVOURITE_FAIL","REBLOGS_FETCH_REQUEST","REBLOGS_FETCH_SUCCESS","REBLOGS_FETCH_FAIL","FAVOURITES_FETCH_REQUEST","FAVOURITES_FETCH_SUCCESS","FAVOURITES_FETCH_FAIL","PIN_REQUEST","PIN_SUCCESS","PIN_FAIL","UNPIN_REQUEST","UNPIN_SUCCESS","UNPIN_FAIL","BOOKMARK_REQUEST","BOOKMARK_SUCCESS","BOOKMARK_FAIL","UNBOOKMARK_REQUEST","UNBOOKMARK_SUCCESS","UNBOOKMARK_FAIL","reblog","status","visibility","dispatch","getState","reblogRequest","post","get","then","response","data","reblogSuccess","catch","error","reblogFail","unreblog","unreblogRequest","unreblogSuccess","unreblogFail","type","skipLoading","favourite","favouriteRequest","favouriteSuccess","favouriteFail","unfavourite","unfavouriteRequest","unfavouriteSuccess","unfavouriteFail","bookmark","bookmarkRequest","bookmarkSuccess","bookmarkFail","unbookmark","unbookmarkRequest","unbookmarkSuccess","unbookmarkFail","fetchReblogs","id","fetchReblogsRequest","fetchReblogsSuccess","fetchReblogsFail","accounts","fetchFavourites","fetchFavouritesRequest","fetchFavouritesSuccess","fetchFavouritesFail","pin","pinRequest","pinSuccess","pinFail","unpin","unpinRequest","unpinSuccess","unpinFail"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,qBAAT,EAAgCC,mBAAhC,QAA2D,YAA3D;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,WAAW,GAAM,aAAvB;AAEP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,IAAMC,cAAc,GAAM,gBAA1B;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,aAAa,GAAM,eAAzB;AAEP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,IAAMC,gBAAgB,GAAM,kBAA5B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,kBAAkB,GAAM,oBAA9B;AAEP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AACP,OAAO,IAAMC,qBAAqB,GAAM,uBAAjC;AAEP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,WAAW,GAAG,aAApB;AACP,OAAO,IAAMC,QAAQ,GAAM,UAApB;AAEP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,IAAMC,UAAU,GAAM,YAAtB;AAEP,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,IAAMC,gBAAgB,GAAG,oBAAzB;AACP,OAAO,IAAMC,aAAa,GAAM,iBAAzB;AAEP,OAAO,IAAMC,kBAAkB,GAAG,sBAA3B;AACP,OAAO,IAAMC,kBAAkB,GAAG,sBAA3B;AACP,OAAO,IAAMC,eAAe,GAAM,mBAA3B;AAEP,OAAO,SAASC,MAAT,CAAgBC,MAAhB,EAAwBC,UAAxB,EAAoC;AACzC,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AACnCD,IAAAA,QAAQ,CAACE,aAAa,CAACJ,MAAD,CAAd,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,cAAkE;AAAEL,MAAAA;AAAF,KAAlE,EAAkFM,IAAlF,CAAuF,UAAUC,QAAV,EAAoB;AACzG;AACA;AACAN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAT,CAAcV,MAAf,CAApB,CAAR;AACAG,MAAAA,QAAQ,CAACQ,aAAa,CAACV,MAAD,CAAd,CAAR;AACD,KALD,EAKGW,KALH,CAKS,UAAUC,KAAV,EAAiB;AACxBV,MAAAA,QAAQ,CAACW,UAAU,CAACb,MAAD,EAASY,KAAT,CAAX,CAAR;AACD,KAPD;AAQD,GAXD;AAYD;AAAA;AAED,OAAO,SAASE,QAAT,CAAkBd,MAAlB,EAA0B;AAC/B,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACa,eAAe,CAACf,MAAD,CAAhB,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,gBAAoEC,IAApE,CAAyE,UAAAC,QAAQ,EAAI;AACnFN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACc,eAAe,CAAChB,MAAD,CAAhB,CAAR;AACD,KAHD,EAGGW,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACe,YAAY,CAACjB,MAAD,EAASY,KAAT,CAAb,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASR,aAAT,CAAuBJ,MAAvB,EAA+B;AACpC,SAAO;AACLkB,IAAAA,IAAI,EAAEjD,cADD;AAEL+B,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAAST,aAAT,CAAuBV,MAAvB,EAA+B;AACpC,SAAO;AACLkB,IAAAA,IAAI,EAAEhD,cADD;AAEL8B,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASN,UAAT,CAAoBb,MAApB,EAA4BY,KAA5B,EAAmC;AACxC,SAAO;AACLM,IAAAA,IAAI,EAAE/C,WADD;AAEL6B,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA,KAHF;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA;AAED,OAAO,SAASJ,eAAT,CAAyBf,MAAzB,EAAiC;AACtC,SAAO;AACLkB,IAAAA,IAAI,EAAE3C,gBADD;AAELyB,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASH,eAAT,CAAyBhB,MAAzB,EAAiC;AACtC,SAAO;AACLkB,IAAAA,IAAI,EAAE1C,gBADD;AAELwB,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASF,YAAT,CAAsBjB,MAAtB,EAA8BY,KAA9B,EAAqC;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAEzC,aADD;AAELuB,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA,KAHF;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA;AAED,OAAO,SAASC,SAAT,CAAmBpB,MAAnB,EAA2B;AAChC,SAAO,UAAUE,QAAV,EAAoBC,QAApB,EAA8B;AACnCD,IAAAA,QAAQ,CAACmB,gBAAgB,CAACrB,MAAD,CAAjB,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,iBAAqEC,IAArE,CAA0E,UAAUC,QAAV,EAAoB;AAC5FN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACoB,gBAAgB,CAACtB,MAAD,CAAjB,CAAR;AACD,KAHD,EAGGW,KAHH,CAGS,UAAUC,KAAV,EAAiB;AACxBV,MAAAA,QAAQ,CAACqB,aAAa,CAACvB,MAAD,EAASY,KAAT,CAAd,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASY,WAAT,CAAqBxB,MAArB,EAA6B;AAClC,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACuB,kBAAkB,CAACzB,MAAD,CAAnB,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,mBAAuEC,IAAvE,CAA4E,UAAAC,QAAQ,EAAI;AACtFN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACwB,kBAAkB,CAAC1B,MAAD,CAAnB,CAAR;AACD,KAHD,EAGGW,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACyB,eAAe,CAAC3B,MAAD,EAASY,KAAT,CAAhB,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASS,gBAAT,CAA0BrB,MAA1B,EAAkC;AACvC,SAAO;AACLkB,IAAAA,IAAI,EAAE9C,iBADD;AAEL4B,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASG,gBAAT,CAA0BtB,MAA1B,EAAkC;AACvC,SAAO;AACLkB,IAAAA,IAAI,EAAE7C,iBADD;AAEL2B,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASI,aAAT,CAAuBvB,MAAvB,EAA+BY,KAA/B,EAAsC;AAC3C,SAAO;AACLM,IAAAA,IAAI,EAAE5C,cADD;AAEL0B,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA,KAHF;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA;AAED,OAAO,SAASM,kBAAT,CAA4BzB,MAA5B,EAAoC;AACzC,SAAO;AACLkB,IAAAA,IAAI,EAAExC,mBADD;AAELsB,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASO,kBAAT,CAA4B1B,MAA5B,EAAoC;AACzC,SAAO;AACLkB,IAAAA,IAAI,EAAEvC,mBADD;AAELqB,IAAAA,MAAM,EAAEA,MAFH;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASQ,eAAT,CAAyB3B,MAAzB,EAAiCY,KAAjC,EAAwC;AAC7C,SAAO;AACLM,IAAAA,IAAI,EAAEtC,gBADD;AAELoB,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA,KAHF;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA;AAED,OAAO,SAASS,QAAT,CAAkB5B,MAAlB,EAA0B;AAC/B,SAAO,UAAUE,QAAV,EAAoBC,QAApB,EAA8B;AACnCD,IAAAA,QAAQ,CAAC2B,eAAe,CAAC7B,MAAD,CAAhB,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,gBAAoEC,IAApE,CAAyE,UAAUC,QAAV,EAAoB;AAC3FN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAAC4B,eAAe,CAAC9B,MAAD,EAASQ,QAAQ,CAACC,IAAlB,CAAhB,CAAR;AACD,KAHD,EAGGE,KAHH,CAGS,UAAUC,KAAV,EAAiB;AACxBV,MAAAA,QAAQ,CAAC6B,YAAY,CAAC/B,MAAD,EAASY,KAAT,CAAb,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASoB,UAAT,CAAoBhC,MAApB,EAA4B;AACjC,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAAC+B,iBAAiB,CAACjC,MAAD,CAAlB,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,kBAAsEC,IAAtE,CAA2E,UAAAC,QAAQ,EAAI;AACrFN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACgC,iBAAiB,CAAClC,MAAD,EAASQ,QAAQ,CAACC,IAAlB,CAAlB,CAAR;AACD,KAHD,EAGGE,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACiC,cAAc,CAACnC,MAAD,EAASY,KAAT,CAAf,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASiB,eAAT,CAAyB7B,MAAzB,EAAiC;AACtC,SAAO;AACLkB,IAAAA,IAAI,EAAEzB,gBADD;AAELO,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID;AAAA;AAED,OAAO,SAAS8B,eAAT,CAAyB9B,MAAzB,EAAiCQ,QAAjC,EAA2C;AAChD,SAAO;AACLU,IAAAA,IAAI,EAAExB,gBADD;AAELM,IAAAA,MAAM,EAAEA,MAFH;AAGLQ,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD;AAAA;AAED,OAAO,SAASuB,YAAT,CAAsB/B,MAAtB,EAA8BY,KAA9B,EAAqC;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAEvB,aADD;AAELK,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD;AAAA;AAED,OAAO,SAASqB,iBAAT,CAA2BjC,MAA3B,EAAmC;AACxC,SAAO;AACLkB,IAAAA,IAAI,EAAEtB,kBADD;AAELI,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID;AAAA;AAED,OAAO,SAASkC,iBAAT,CAA2BlC,MAA3B,EAAmCQ,QAAnC,EAA6C;AAClD,SAAO;AACLU,IAAAA,IAAI,EAAErB,kBADD;AAELG,IAAAA,MAAM,EAAEA,MAFH;AAGLQ,IAAAA,QAAQ,EAAEA;AAHL,GAAP;AAKD;AAAA;AAED,OAAO,SAAS2B,cAAT,CAAwBnC,MAAxB,EAAgCY,KAAhC,EAAuC;AAC5C,SAAO;AACLM,IAAAA,IAAI,EAAEpB,eADD;AAELE,IAAAA,MAAM,EAAEA,MAFH;AAGLY,IAAAA,KAAK,EAAEA;AAHF,GAAP;AAKD;AAAA;AAED,OAAO,SAASwB,YAAT,CAAsBC,EAAtB,EAA0B;AAC/B,SAAO,UAACnC,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACoC,mBAAmB,CAACD,EAAD,CAApB,CAAR;AAEAvE,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcG,GAAd,uBAAsC+B,EAAtC,oBAAyD9B,IAAzD,CAA8D,UAAAC,QAAQ,EAAI;AACxEN,MAAAA,QAAQ,CAACnC,qBAAqB,CAACyC,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACAP,MAAAA,QAAQ,CAACqC,mBAAmB,CAACF,EAAD,EAAK7B,QAAQ,CAACC,IAAd,CAApB,CAAR;AACD,KAHD,EAGGE,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACsC,gBAAgB,CAACH,EAAD,EAAKzB,KAAL,CAAjB,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAAS0B,mBAAT,CAA6BD,EAA7B,EAAiC;AACtC,SAAO;AACLnB,IAAAA,IAAI,EAAErC,qBADD;AAELwD,IAAAA;AAFK,GAAP;AAID;AAAA;AAED,OAAO,SAASE,mBAAT,CAA6BF,EAA7B,EAAiCI,QAAjC,EAA2C;AAChD,SAAO;AACLvB,IAAAA,IAAI,EAAEpC,qBADD;AAELuD,IAAAA,EAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD;AAAA;AAED,OAAO,SAASD,gBAAT,CAA0BH,EAA1B,EAA8BzB,KAA9B,EAAqC;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAEnC,kBADD;AAEL6B,IAAAA;AAFK,GAAP;AAID;AAAA;AAED,OAAO,SAAS8B,eAAT,CAAyBL,EAAzB,EAA6B;AAClC,SAAO,UAACnC,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACyC,sBAAsB,CAACN,EAAD,CAAvB,CAAR;AAEAvE,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcG,GAAd,uBAAsC+B,EAAtC,qBAA0D9B,IAA1D,CAA+D,UAAAC,QAAQ,EAAI;AACzEN,MAAAA,QAAQ,CAACnC,qBAAqB,CAACyC,QAAQ,CAACC,IAAV,CAAtB,CAAR;AACAP,MAAAA,QAAQ,CAAC0C,sBAAsB,CAACP,EAAD,EAAK7B,QAAQ,CAACC,IAAd,CAAvB,CAAR;AACD,KAHD,EAGGE,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAAC2C,mBAAmB,CAACR,EAAD,EAAKzB,KAAL,CAApB,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAAS+B,sBAAT,CAAgCN,EAAhC,EAAoC;AACzC,SAAO;AACLnB,IAAAA,IAAI,EAAElC,wBADD;AAELqD,IAAAA;AAFK,GAAP;AAID;AAAA;AAED,OAAO,SAASO,sBAAT,CAAgCP,EAAhC,EAAoCI,QAApC,EAA8C;AACnD,SAAO;AACLvB,IAAAA,IAAI,EAAEjC,wBADD;AAELoD,IAAAA,EAFK;AAGLI,IAAAA;AAHK,GAAP;AAKD;AAAA;AAED,OAAO,SAASI,mBAAT,CAA6BR,EAA7B,EAAiCzB,KAAjC,EAAwC;AAC7C,SAAO;AACLM,IAAAA,IAAI,EAAEhC,qBADD;AAEL0B,IAAAA;AAFK,GAAP;AAID;AAAA;AAED,OAAO,SAASkC,GAAT,CAAa9C,MAAb,EAAqB;AAC1B,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAAC6C,UAAU,CAAC/C,MAAD,CAAX,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,WAA+DC,IAA/D,CAAoE,UAAAC,QAAQ,EAAI;AAC9EN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAAC8C,UAAU,CAAChD,MAAD,CAAX,CAAR;AACD,KAHD,EAGGW,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAAC+C,OAAO,CAACjD,MAAD,EAASY,KAAT,CAAR,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASmC,UAAT,CAAoB/C,MAApB,EAA4B;AACjC,SAAO;AACLkB,IAAAA,IAAI,EAAE/B,WADD;AAELa,IAAAA,MAFK;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAAS6B,UAAT,CAAoBhD,MAApB,EAA4B;AACjC,SAAO;AACLkB,IAAAA,IAAI,EAAE9B,WADD;AAELY,IAAAA,MAFK;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAAS8B,OAAT,CAAiBjD,MAAjB,EAAyBY,KAAzB,EAAgC;AACrC,SAAO;AACLM,IAAAA,IAAI,EAAE7B,QADD;AAELW,IAAAA,MAFK;AAGLY,IAAAA,KAHK;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA;AAED,OAAO,SAAS+B,KAAT,CAAgBlD,MAAhB,EAAwB;AAC7B,SAAO,UAACE,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAACiD,YAAY,CAACnD,MAAD,CAAb,CAAR;AAEAlC,IAAAA,GAAG,CAACqC,QAAD,CAAH,CAAcE,IAAd,uBAAuCL,MAAM,CAACM,GAAP,CAAW,IAAX,CAAvC,aAAiEC,IAAjE,CAAsE,UAAAC,QAAQ,EAAI;AAChFN,MAAAA,QAAQ,CAAClC,mBAAmB,CAACwC,QAAQ,CAACC,IAAV,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACkD,YAAY,CAACpD,MAAD,CAAb,CAAR;AACD,KAHD,EAGGW,KAHH,CAGS,UAAAC,KAAK,EAAI;AAChBV,MAAAA,QAAQ,CAACmD,SAAS,CAACrD,MAAD,EAASY,KAAT,CAAV,CAAR;AACD,KALD;AAMD,GATD;AAUD;AAAA;AAED,OAAO,SAASuC,YAAT,CAAsBnD,MAAtB,EAA8B;AACnC,SAAO;AACLkB,IAAAA,IAAI,EAAE5B,aADD;AAELU,IAAAA,MAFK;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASiC,YAAT,CAAsBpD,MAAtB,EAA8B;AACnC,SAAO;AACLkB,IAAAA,IAAI,EAAE3B,aADD;AAELS,IAAAA,MAFK;AAGLmB,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;AAAA;AAED,OAAO,SAASkC,SAAT,CAAmBrD,MAAnB,EAA2BY,KAA3B,EAAkC;AACvC,SAAO;AACLM,IAAAA,IAAI,EAAE1B,UADD;AAELQ,IAAAA,MAFK;AAGLY,IAAAA,KAHK;AAILO,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;AAAA","sourcesContent":["import api from '../api';\nimport { importFetchedAccounts, importFetchedStatus } from './importer';\n\nexport const REBLOG_REQUEST = 'REBLOG_REQUEST';\nexport const REBLOG_SUCCESS = 'REBLOG_SUCCESS';\nexport const REBLOG_FAIL    = 'REBLOG_FAIL';\n\nexport const FAVOURITE_REQUEST = 'FAVOURITE_REQUEST';\nexport const FAVOURITE_SUCCESS = 'FAVOURITE_SUCCESS';\nexport const FAVOURITE_FAIL    = 'FAVOURITE_FAIL';\n\nexport const UNREBLOG_REQUEST = 'UNREBLOG_REQUEST';\nexport const UNREBLOG_SUCCESS = 'UNREBLOG_SUCCESS';\nexport const UNREBLOG_FAIL    = 'UNREBLOG_FAIL';\n\nexport const UNFAVOURITE_REQUEST = 'UNFAVOURITE_REQUEST';\nexport const UNFAVOURITE_SUCCESS = 'UNFAVOURITE_SUCCESS';\nexport const UNFAVOURITE_FAIL    = 'UNFAVOURITE_FAIL';\n\nexport const REBLOGS_FETCH_REQUEST = 'REBLOGS_FETCH_REQUEST';\nexport const REBLOGS_FETCH_SUCCESS = 'REBLOGS_FETCH_SUCCESS';\nexport const REBLOGS_FETCH_FAIL    = 'REBLOGS_FETCH_FAIL';\n\nexport const FAVOURITES_FETCH_REQUEST = 'FAVOURITES_FETCH_REQUEST';\nexport const FAVOURITES_FETCH_SUCCESS = 'FAVOURITES_FETCH_SUCCESS';\nexport const FAVOURITES_FETCH_FAIL    = 'FAVOURITES_FETCH_FAIL';\n\nexport const PIN_REQUEST = 'PIN_REQUEST';\nexport const PIN_SUCCESS = 'PIN_SUCCESS';\nexport const PIN_FAIL    = 'PIN_FAIL';\n\nexport const UNPIN_REQUEST = 'UNPIN_REQUEST';\nexport const UNPIN_SUCCESS = 'UNPIN_SUCCESS';\nexport const UNPIN_FAIL    = 'UNPIN_FAIL';\n\nexport const BOOKMARK_REQUEST = 'BOOKMARK_REQUEST';\nexport const BOOKMARK_SUCCESS = 'BOOKMARKED_SUCCESS';\nexport const BOOKMARK_FAIL    = 'BOOKMARKED_FAIL';\n\nexport const UNBOOKMARK_REQUEST = 'UNBOOKMARKED_REQUEST';\nexport const UNBOOKMARK_SUCCESS = 'UNBOOKMARKED_SUCCESS';\nexport const UNBOOKMARK_FAIL    = 'UNBOOKMARKED_FAIL';\n\nexport function reblog(status, visibility) {\n  return function (dispatch, getState) {\n    dispatch(reblogRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/reblog`, { visibility }).then(function (response) {\n      // The reblog API method returns a new status wrapped around the original. In this case we are only\n      // interested in how the original is modified, hence passing it skipping the wrapper\n      dispatch(importFetchedStatus(response.data.reblog));\n      dispatch(reblogSuccess(status));\n    }).catch(function (error) {\n      dispatch(reblogFail(status, error));\n    });\n  };\n};\n\nexport function unreblog(status) {\n  return (dispatch, getState) => {\n    dispatch(unreblogRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/unreblog`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unreblogSuccess(status));\n    }).catch(error => {\n      dispatch(unreblogFail(status, error));\n    });\n  };\n};\n\nexport function reblogRequest(status) {\n  return {\n    type: REBLOG_REQUEST,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function reblogSuccess(status) {\n  return {\n    type: REBLOG_SUCCESS,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function reblogFail(status, error) {\n  return {\n    type: REBLOG_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true,\n  };\n};\n\nexport function unreblogRequest(status) {\n  return {\n    type: UNREBLOG_REQUEST,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function unreblogSuccess(status) {\n  return {\n    type: UNREBLOG_SUCCESS,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function unreblogFail(status, error) {\n  return {\n    type: UNREBLOG_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true,\n  };\n};\n\nexport function favourite(status) {\n  return function (dispatch, getState) {\n    dispatch(favouriteRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/favourite`).then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(favouriteSuccess(status));\n    }).catch(function (error) {\n      dispatch(favouriteFail(status, error));\n    });\n  };\n};\n\nexport function unfavourite(status) {\n  return (dispatch, getState) => {\n    dispatch(unfavouriteRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/unfavourite`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unfavouriteSuccess(status));\n    }).catch(error => {\n      dispatch(unfavouriteFail(status, error));\n    });\n  };\n};\n\nexport function favouriteRequest(status) {\n  return {\n    type: FAVOURITE_REQUEST,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function favouriteSuccess(status) {\n  return {\n    type: FAVOURITE_SUCCESS,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function favouriteFail(status, error) {\n  return {\n    type: FAVOURITE_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true,\n  };\n};\n\nexport function unfavouriteRequest(status) {\n  return {\n    type: UNFAVOURITE_REQUEST,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function unfavouriteSuccess(status) {\n  return {\n    type: UNFAVOURITE_SUCCESS,\n    status: status,\n    skipLoading: true,\n  };\n};\n\nexport function unfavouriteFail(status, error) {\n  return {\n    type: UNFAVOURITE_FAIL,\n    status: status,\n    error: error,\n    skipLoading: true,\n  };\n};\n\nexport function bookmark(status) {\n  return function (dispatch, getState) {\n    dispatch(bookmarkRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/bookmark`).then(function (response) {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(bookmarkSuccess(status, response.data));\n    }).catch(function (error) {\n      dispatch(bookmarkFail(status, error));\n    });\n  };\n};\n\nexport function unbookmark(status) {\n  return (dispatch, getState) => {\n    dispatch(unbookmarkRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/unbookmark`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unbookmarkSuccess(status, response.data));\n    }).catch(error => {\n      dispatch(unbookmarkFail(status, error));\n    });\n  };\n};\n\nexport function bookmarkRequest(status) {\n  return {\n    type: BOOKMARK_REQUEST,\n    status: status,\n  };\n};\n\nexport function bookmarkSuccess(status, response) {\n  return {\n    type: BOOKMARK_SUCCESS,\n    status: status,\n    response: response,\n  };\n};\n\nexport function bookmarkFail(status, error) {\n  return {\n    type: BOOKMARK_FAIL,\n    status: status,\n    error: error,\n  };\n};\n\nexport function unbookmarkRequest(status) {\n  return {\n    type: UNBOOKMARK_REQUEST,\n    status: status,\n  };\n};\n\nexport function unbookmarkSuccess(status, response) {\n  return {\n    type: UNBOOKMARK_SUCCESS,\n    status: status,\n    response: response,\n  };\n};\n\nexport function unbookmarkFail(status, error) {\n  return {\n    type: UNBOOKMARK_FAIL,\n    status: status,\n    error: error,\n  };\n};\n\nexport function fetchReblogs(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchReblogsRequest(id));\n\n    api(getState).get(`/api/v1/statuses/${id}/reblogged_by`).then(response => {\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchReblogsSuccess(id, response.data));\n    }).catch(error => {\n      dispatch(fetchReblogsFail(id, error));\n    });\n  };\n};\n\nexport function fetchReblogsRequest(id) {\n  return {\n    type: REBLOGS_FETCH_REQUEST,\n    id,\n  };\n};\n\nexport function fetchReblogsSuccess(id, accounts) {\n  return {\n    type: REBLOGS_FETCH_SUCCESS,\n    id,\n    accounts,\n  };\n};\n\nexport function fetchReblogsFail(id, error) {\n  return {\n    type: REBLOGS_FETCH_FAIL,\n    error,\n  };\n};\n\nexport function fetchFavourites(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchFavouritesRequest(id));\n\n    api(getState).get(`/api/v1/statuses/${id}/favourited_by`).then(response => {\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchFavouritesSuccess(id, response.data));\n    }).catch(error => {\n      dispatch(fetchFavouritesFail(id, error));\n    });\n  };\n};\n\nexport function fetchFavouritesRequest(id) {\n  return {\n    type: FAVOURITES_FETCH_REQUEST,\n    id,\n  };\n};\n\nexport function fetchFavouritesSuccess(id, accounts) {\n  return {\n    type: FAVOURITES_FETCH_SUCCESS,\n    id,\n    accounts,\n  };\n};\n\nexport function fetchFavouritesFail(id, error) {\n  return {\n    type: FAVOURITES_FETCH_FAIL,\n    error,\n  };\n};\n\nexport function pin(status) {\n  return (dispatch, getState) => {\n    dispatch(pinRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/pin`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(pinSuccess(status));\n    }).catch(error => {\n      dispatch(pinFail(status, error));\n    });\n  };\n};\n\nexport function pinRequest(status) {\n  return {\n    type: PIN_REQUEST,\n    status,\n    skipLoading: true,\n  };\n};\n\nexport function pinSuccess(status) {\n  return {\n    type: PIN_SUCCESS,\n    status,\n    skipLoading: true,\n  };\n};\n\nexport function pinFail(status, error) {\n  return {\n    type: PIN_FAIL,\n    status,\n    error,\n    skipLoading: true,\n  };\n};\n\nexport function unpin (status) {\n  return (dispatch, getState) => {\n    dispatch(unpinRequest(status));\n\n    api(getState).post(`/api/v1/statuses/${status.get('id')}/unpin`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(unpinSuccess(status));\n    }).catch(error => {\n      dispatch(unpinFail(status, error));\n    });\n  };\n};\n\nexport function unpinRequest(status) {\n  return {\n    type: UNPIN_REQUEST,\n    status,\n    skipLoading: true,\n  };\n};\n\nexport function unpinSuccess(status) {\n  return {\n    type: UNPIN_SUCCESS,\n    status,\n    skipLoading: true,\n  };\n};\n\nexport function unpinFail(status, error) {\n  return {\n    type: UNPIN_FAIL,\n    status,\n    error,\n    skipLoading: true,\n  };\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}