{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/mutes/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport AccountContainer from '../../containers/account_container';\nimport { fetchMutes, expandMutes } from '../../actions/mutes';\nimport ScrollableList from '../../components/scrollable_list';\nvar messages = defineMessages({\n  heading: {\n    \"id\": \"column.mutes\",\n    \"defaultMessage\": \"Muted users\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    accountIds: state.getIn(['user_lists', 'mutes', 'items']),\n    hasMore: !!state.getIn(['user_lists', 'mutes', 'next']),\n    isLoading: state.getIn(['user_lists', 'mutes', 'isLoading'], true)\n  };\n};\n\nvar Mutes = (_dec = connect(mapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Mutes, _ImmutablePureCompone);\n\n  function Mutes() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.handleLoadMore = debounce(function () {\n      _this.props.dispatch(expandMutes());\n    }, 300, {\n      leading: true\n    });\n    return _this;\n  }\n\n  var _proto = Mutes.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.props.dispatch(fetchMutes());\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        hasMore = _this$props.hasMore,\n        accountIds = _this$props.accountIds,\n        multiColumn = _this$props.multiColumn,\n        isLoading = _this$props.isLoading;\n\n    if (!accountIds) {\n      return /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    var emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"empty_column.mutes\",\n      defaultMessage: \"You haven't muted any users yet.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 26\n      }\n    });\n    return /*#__PURE__*/React.createElement(Column, {\n      bindToDocument: !multiColumn,\n      icon: \"volume-off\",\n      heading: intl.formatMessage(messages.heading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnBackButtonSlim, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ScrollableList, {\n      scrollKey: \"mutes\",\n      onLoadMore: this.handleLoadMore,\n      hasMore: hasMore,\n      isLoading: isLoading,\n      emptyMessage: emptyMessage,\n      bindToDocument: !multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, accountIds.map(function (id) {\n      return /*#__PURE__*/React.createElement(AccountContainer, {\n        key: id,\n        id: id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      });\n    })));\n  };\n\n  return Mutes;\n}(ImmutablePureComponent), _class2.propTypes = {\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  accountIds: ImmutablePropTypes.list,\n  intl: PropTypes.object.isRequired,\n  multiColumn: PropTypes.bool\n}, _temp)) || _class) || _class);\nexport { Mutes as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/mutes/index.js"],"names":["React","connect","defineMessages","injectIntl","FormattedMessage","ImmutablePureComponent","PropTypes","ImmutablePropTypes","debounce","LoadingIndicator","Column","ColumnBackButtonSlim","AccountContainer","fetchMutes","expandMutes","ScrollableList","messages","heading","mapStateToProps","state","accountIds","getIn","hasMore","isLoading","Mutes","handleLoadMore","props","dispatch","leading","componentWillMount","render","intl","multiColumn","emptyMessage","formatMessage","map","id","propTypes","params","object","isRequired","func","bool","list"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport AccountContainer from '../../containers/account_container';\nimport { fetchMutes, expandMutes } from '../../actions/mutes';\nimport ScrollableList from '../../components/scrollable_list';\n\nconst messages = defineMessages({\n  heading: { id: 'column.mutes', defaultMessage: 'Muted users' },\n});\n\nconst mapStateToProps = state => ({\n  accountIds: state.getIn(['user_lists', 'mutes', 'items']),\n  hasMore: !!state.getIn(['user_lists', 'mutes', 'next']),\n  isLoading: state.getIn(['user_lists', 'mutes', 'isLoading'], true),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Mutes extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    accountIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchMutes());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandMutes());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, hasMore, accountIds, multiColumn, isLoading } = this.props;\n\n    if (!accountIds) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.mutes' defaultMessage=\"You haven't muted any users yet.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='volume-off' heading={intl.formatMessage(messages.heading)}>\n        <ColumnBackButtonSlim />\n        <ScrollableList\n          scrollKey='mutes'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {accountIds.map(id =>\n            <AccountContainer key={id} id={id} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column.mutes","defaultMessage":"Muted users"},{"id":"empty_column.mutes","defaultMessage":"You haven't muted any users yet."}]}},"sourceType":"module"}