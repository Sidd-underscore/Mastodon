{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/mute_modal.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Toggle from 'react-toggle';\nimport Button from '../../../components/button';\nimport { closeModal } from '../../../actions/modal';\nimport { muteAccount } from '../../../actions/accounts';\nimport { toggleHideNotifications, changeMuteDuration } from '../../../actions/mutes';\nvar messages = defineMessages({\n  minutes: {\n    \"id\": \"intervals.full.minutes\",\n    \"defaultMessage\": \"{number, plural, one {# minute} other {# minutes}}\"\n  },\n  hours: {\n    \"id\": \"intervals.full.hours\",\n    \"defaultMessage\": \"{number, plural, one {# hour} other {# hours}}\"\n  },\n  days: {\n    \"id\": \"intervals.full.days\",\n    \"defaultMessage\": \"{number, plural, one {# day} other {# days}}\"\n  },\n  indefinite: {\n    \"id\": \"mute_modal.indefinite\",\n    \"defaultMessage\": \"Indefinite\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    account: state.getIn(['mutes', 'new', 'account']),\n    notifications: state.getIn(['mutes', 'new', 'notifications']),\n    muteDuration: state.getIn(['mutes', 'new', 'duration'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onConfirm(account, notifications, muteDuration) {\n      dispatch(muteAccount(account.get('id'), notifications, muteDuration));\n    },\n\n    onClose() {\n      dispatch(closeModal());\n    },\n\n    onToggleNotifications() {\n      dispatch(toggleHideNotifications());\n    },\n\n    onChangeMuteDuration(e) {\n      dispatch(changeMuteDuration(e.target.value));\n    }\n\n  };\n};\n\nvar MuteModal = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(MuteModal, _React$PureComponent);\n\n  function MuteModal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleClick = function () {\n      _this.props.onClose();\n\n      _this.props.onConfirm(_this.props.account, _this.props.notifications, _this.props.muteDuration);\n    };\n\n    _this.handleCancel = function () {\n      _this.props.onClose();\n    };\n\n    _this.setRef = function (c) {\n      _this.button = c;\n    };\n\n    _this.toggleNotifications = function () {\n      _this.props.onToggleNotifications();\n    };\n\n    _this.changeMuteDuration = function (e) {\n      _this.props.onChangeMuteDuration(e);\n    };\n\n    return _this;\n  }\n\n  var _proto = MuteModal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.button.focus();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        account = _this$props.account,\n        notifications = _this$props.notifications,\n        muteDuration = _this$props.muteDuration,\n        intl = _this$props.intl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal mute-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mute-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"confirmations.mute.message\",\n      defaultMessage: \"Are you sure you want to mute {name}?\",\n      values: {\n        name: /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 31\n          }\n        }, \"@\", account.get('acct'))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mute-modal__explanation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"confirmations.mute.explanation\",\n      defaultMessage: \"This will hide posts from them and posts mentioning them, but it will still allow them to see your posts and follow you.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      id: \"mute-modal__hide-notifications-checkbox\",\n      checked: notifications,\n      onChange: this.toggleNotifications,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"setting-toggle__label\",\n      htmlFor: \"mute-modal__hide-notifications-checkbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"mute_modal.hide_notifications\",\n      defaultMessage: \"Hide notifications from this user?\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"mute_modal.duration\",\n      defaultMessage: \"Duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }), \": \"), /*#__PURE__*/React.createElement(\"select\", {\n      value: muteDuration,\n      onChange: this.changeMuteDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.indefinite)), /*#__PURE__*/React.createElement(\"option\", {\n      value: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.minutes, {\n      number: 5\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.minutes, {\n      number: 30\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.hours, {\n      number: 1\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 21600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.hours, {\n      number: 6\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 86400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 1\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 259200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 3\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 604800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 7\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mute-modal__action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleCancel,\n      className: \"mute-modal__cancel-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"confirmation_modal.cancel\",\n      defaultMessage: \"Cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClick,\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"confirmations.mute.confirm\",\n      defaultMessage: \"Mute\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return MuteModal;\n}(React.PureComponent), _class2.propTypes = {\n  account: PropTypes.object.isRequired,\n  notifications: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onConfirm: PropTypes.func.isRequired,\n  onToggleNotifications: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired,\n  muteDuration: PropTypes.number.isRequired,\n  onChangeMuteDuration: PropTypes.func.isRequired\n}, _temp)) || _class) || _class);\nexport { MuteModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/mute_modal.js"],"names":["React","connect","PropTypes","defineMessages","injectIntl","FormattedMessage","Toggle","Button","closeModal","muteAccount","toggleHideNotifications","changeMuteDuration","messages","minutes","hours","days","indefinite","mapStateToProps","state","account","getIn","notifications","muteDuration","mapDispatchToProps","dispatch","onConfirm","get","onClose","onToggleNotifications","onChangeMuteDuration","e","target","value","MuteModal","handleClick","props","handleCancel","setRef","c","button","toggleNotifications","componentDidMount","focus","render","intl","name","formatMessage","number","PureComponent","propTypes","object","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Toggle from 'react-toggle';\nimport Button from '../../../components/button';\nimport { closeModal } from '../../../actions/modal';\nimport { muteAccount } from '../../../actions/accounts';\nimport { toggleHideNotifications, changeMuteDuration } from '../../../actions/mutes';\n\nconst messages = defineMessages({\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n  indefinite: { id: 'mute_modal.indefinite', defaultMessage: 'Indefinite' },\n});\n\nconst mapStateToProps = state => {\n  return {\n    account: state.getIn(['mutes', 'new', 'account']),\n    notifications: state.getIn(['mutes', 'new', 'notifications']),\n    muteDuration: state.getIn(['mutes', 'new', 'duration']),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onConfirm(account, notifications, muteDuration) {\n      dispatch(muteAccount(account.get('id'), notifications, muteDuration));\n    },\n\n    onClose() {\n      dispatch(closeModal());\n    },\n\n    onToggleNotifications() {\n      dispatch(toggleHideNotifications());\n    },\n\n    onChangeMuteDuration(e) {\n      dispatch(changeMuteDuration(e.target.value));\n    },\n  };\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass MuteModal extends React.PureComponent {\n\n  static propTypes = {\n    account: PropTypes.object.isRequired,\n    notifications: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    onToggleNotifications: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    muteDuration: PropTypes.number.isRequired,\n    onChangeMuteDuration: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleClick = () => {\n    this.props.onClose();\n    this.props.onConfirm(this.props.account, this.props.notifications, this.props.muteDuration);\n  }\n\n  handleCancel = () => {\n    this.props.onClose();\n  }\n\n  setRef = (c) => {\n    this.button = c;\n  }\n\n  toggleNotifications = () => {\n    this.props.onToggleNotifications();\n  }\n\n  changeMuteDuration = (e) => {\n    this.props.onChangeMuteDuration(e);\n  }\n\n  render () {\n    const { account, notifications, muteDuration, intl } = this.props;\n\n    return (\n      <div className='modal-root__modal mute-modal'>\n        <div className='mute-modal__container'>\n          <p>\n            <FormattedMessage\n              id='confirmations.mute.message'\n              defaultMessage='Are you sure you want to mute {name}?'\n              values={{ name: <strong>@{account.get('acct')}</strong> }}\n            />\n          </p>\n          <p className='mute-modal__explanation'>\n            <FormattedMessage\n              id='confirmations.mute.explanation'\n              defaultMessage='This will hide posts from them and posts mentioning them, but it will still allow them to see your posts and follow you.'\n            />\n          </p>\n          <div className='setting-toggle'>\n            <Toggle id='mute-modal__hide-notifications-checkbox' checked={notifications} onChange={this.toggleNotifications} />\n            <label className='setting-toggle__label' htmlFor='mute-modal__hide-notifications-checkbox'>\n              <FormattedMessage id='mute_modal.hide_notifications' defaultMessage='Hide notifications from this user?' />\n            </label>\n          </div>\n          <div>\n            <span><FormattedMessage id='mute_modal.duration' defaultMessage='Duration' />: </span>\n\n            {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n            <select value={muteDuration} onChange={this.changeMuteDuration}>\n              <option value={0}>{intl.formatMessage(messages.indefinite)}</option>\n              <option value={300}>{intl.formatMessage(messages.minutes, { number: 5 })}</option>\n              <option value={1800}>{intl.formatMessage(messages.minutes, { number: 30 })}</option>\n              <option value={3600}>{intl.formatMessage(messages.hours, { number: 1 })}</option>\n              <option value={21600}>{intl.formatMessage(messages.hours, { number: 6 })}</option>\n              <option value={86400}>{intl.formatMessage(messages.days, { number: 1 })}</option>\n              <option value={259200}>{intl.formatMessage(messages.days, { number: 3 })}</option>\n              <option value={604800}>{intl.formatMessage(messages.days, { number: 7 })}</option>\n            </select>\n          </div>\n        </div>\n\n        <div className='mute-modal__action-bar'>\n          <Button onClick={this.handleCancel} className='mute-modal__cancel-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </Button>\n          <Button onClick={this.handleClick} ref={this.setRef}>\n            <FormattedMessage id='confirmations.mute.confirm' defaultMessage='Mute' />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"intervals.full.minutes","defaultMessage":"{number, plural, one {# minute} other {# minutes}}"},{"id":"intervals.full.hours","defaultMessage":"{number, plural, one {# hour} other {# hours}}"},{"id":"intervals.full.days","defaultMessage":"{number, plural, one {# day} other {# days}}"},{"id":"mute_modal.indefinite","defaultMessage":"Indefinite"},{"id":"confirmations.mute.message","defaultMessage":"Are you sure you want to mute {name}?"},{"id":"confirmations.mute.explanation","defaultMessage":"This will hide posts from them and posts mentioning them, but it will still allow them to see your posts and follow you."},{"id":"mute_modal.hide_notifications","defaultMessage":"Hide notifications from this user?"},{"id":"mute_modal.duration","defaultMessage":"Duration"},{"id":"confirmation_modal.cancel","defaultMessage":"Cancel"},{"id":"confirmations.mute.confirm","defaultMessage":"Mute"}]}},"sourceType":"module"}