{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/focal_point_modal.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { changeUploadCompose, uploadThumbnail } from '../../../actions/compose';\nimport { getPointerPosition } from '../../video';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Button from 'mastodon/components/button';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport Textarea from 'react-textarea-autosize';\nimport UploadProgress from 'mastodon/features/compose/components/upload_progress';\nimport CharacterCounter from 'mastodon/features/compose/components/character_counter';\nimport { length } from 'stringz';\nimport { Tesseract as fetchTesseract } from 'mastodon/features/ui/util/async-components';\nimport GIFV from 'mastodon/components/gifv';\nimport { me } from 'mastodon/initial_state'; // eslint-disable-next-line import/no-extraneous-dependencies\n\nimport tesseractCorePath from 'tesseract.js-core/tesseract-core.wasm.js'; // eslint-disable-next-line import/extensions\n\nimport tesseractWorkerPath from 'tesseract.js/dist/worker.min.js';\nimport { assetHost } from 'mastodon/utils/config';\nvar messages = defineMessages({\n  close: {\n    \"id\": \"lightbox.close\",\n    \"defaultMessage\": \"Close\"\n  },\n  apply: {\n    \"id\": \"upload_modal.apply\",\n    \"defaultMessage\": \"Apply\"\n  },\n  placeholder: {\n    \"id\": \"upload_modal.description_placeholder\",\n    \"defaultMessage\": \"A quick brown fox jumps over the lazy dog\"\n  },\n  chooseImage: {\n    \"id\": \"upload_modal.choose_image\",\n    \"defaultMessage\": \"Choose image\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var id = _ref.id;\n  return {\n    media: state.getIn(['compose', 'media_attachments']).find(function (item) {\n      return item.get('id') === id;\n    }),\n    account: state.getIn(['accounts', me]),\n    isUploadingThumbnail: state.getIn(['compose', 'isUploadingThumbnail'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {\n  var id = _ref2.id;\n  return {\n    onSave: function onSave(description, x, y) {\n      dispatch(changeUploadCompose(id, {\n        description,\n        focus: x.toFixed(2) + \",\" + y.toFixed(2)\n      }));\n    },\n    onSelectThumbnail: function onSelectThumbnail(files) {\n      dispatch(uploadThumbnail(id, files[0]));\n    }\n  };\n};\n\nvar removeExtraLineBreaks = function removeExtraLineBreaks(str) {\n  return str.replace(/\\n\\n/g, '******').replace(/\\n/g, ' ').replace(/\\*\\*\\*\\*\\*\\*/g, '\\n\\n');\n};\n\nvar ImageLoader = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ImageLoader, _React$PureComponent);\n\n  function ImageLoader() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      loading: true\n    };\n    return _this;\n  }\n\n  var _proto = ImageLoader.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    var image = new Image();\n    image.addEventListener('load', function () {\n      return _this2.setState({\n        loading: false\n      });\n    });\n    image.src = this.props.src;\n  };\n\n  _proto.render = function render() {\n    var loading = this.state.loading;\n\n    if (loading) {\n      return /*#__PURE__*/React.createElement(\"canvas\", {\n        width: this.props.width,\n        height: this.props.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"img\", _extends({}, this.props, {\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 14\n        }\n      }));\n    }\n  };\n\n  return ImageLoader;\n}(React.PureComponent);\n\nImageLoader.propTypes = {\n  src: PropTypes.string.isRequired,\n  width: PropTypes.number,\n  height: PropTypes.number\n};\nvar FocalPointModal = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(FocalPointModal, _ImmutablePureCompone);\n\n  function FocalPointModal() {\n    var _this3;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this3.state = {\n      x: 0,\n      y: 0,\n      focusX: 0,\n      focusY: 0,\n      dragging: false,\n      description: '',\n      dirty: false,\n      progress: 0,\n      loading: true,\n      ocrStatus: ''\n    };\n\n    _this3.handleMouseDown = function (e) {\n      document.addEventListener('mousemove', _this3.handleMouseMove);\n      document.addEventListener('mouseup', _this3.handleMouseUp);\n\n      _this3.updatePosition(e);\n\n      _this3.setState({\n        dragging: true\n      });\n    };\n\n    _this3.handleTouchStart = function (e) {\n      document.addEventListener('touchmove', _this3.handleMouseMove);\n      document.addEventListener('touchend', _this3.handleTouchEnd);\n\n      _this3.updatePosition(e);\n\n      _this3.setState({\n        dragging: true\n      });\n    };\n\n    _this3.handleMouseMove = function (e) {\n      _this3.updatePosition(e);\n    };\n\n    _this3.handleMouseUp = function () {\n      document.removeEventListener('mousemove', _this3.handleMouseMove);\n      document.removeEventListener('mouseup', _this3.handleMouseUp);\n\n      _this3.setState({\n        dragging: false\n      });\n    };\n\n    _this3.handleTouchEnd = function () {\n      document.removeEventListener('touchmove', _this3.handleMouseMove);\n      document.removeEventListener('touchend', _this3.handleTouchEnd);\n\n      _this3.setState({\n        dragging: false\n      });\n    };\n\n    _this3.updatePosition = function (e) {\n      var _getPointerPosition = getPointerPosition(_this3.node, e),\n          x = _getPointerPosition.x,\n          y = _getPointerPosition.y;\n\n      var focusX = (x - .5) * 2;\n      var focusY = (y - .5) * -2;\n\n      _this3.setState({\n        x,\n        y,\n        focusX,\n        focusY,\n        dirty: true\n      });\n    };\n\n    _this3.updatePositionFromMedia = function (media) {\n      var focusX = media.getIn(['meta', 'focus', 'x']);\n      var focusY = media.getIn(['meta', 'focus', 'y']);\n      var description = media.get('description') || '';\n\n      if (focusX && focusY) {\n        var x = focusX / 2 + .5;\n        var y = focusY / -2 + .5;\n\n        _this3.setState({\n          x,\n          y,\n          focusX,\n          focusY,\n          description,\n          dirty: false\n        });\n      } else {\n        _this3.setState({\n          x: 0.5,\n          y: 0.5,\n          focusX: 0,\n          focusY: 0,\n          description,\n          dirty: false\n        });\n      }\n    };\n\n    _this3.handleChange = function (e) {\n      _this3.setState({\n        description: e.target.value,\n        dirty: true\n      });\n    };\n\n    _this3.handleKeyDown = function (e) {\n      if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        _this3.setState({\n          description: e.target.value,\n          dirty: true\n        });\n\n        _this3.handleSubmit();\n      }\n    };\n\n    _this3.handleSubmit = function () {\n      _this3.props.onSave(_this3.state.description, _this3.state.focusX, _this3.state.focusY);\n\n      _this3.props.onClose();\n    };\n\n    _this3.setRef = function (c) {\n      _this3.node = c;\n    };\n\n    _this3.handleTextDetection = function () {\n      var media = _this3.props.media;\n\n      _this3.setState({\n        detecting: true\n      });\n\n      fetchTesseract().then(function (_ref3) {\n        var createWorker = _ref3.createWorker;\n        var worker = createWorker({\n          workerPath: tesseractWorkerPath,\n          corePath: tesseractCorePath,\n          langPath: assetHost + \"/ocr/lang-data/\",\n          logger: function logger(_ref4) {\n            var status = _ref4.status,\n                progress = _ref4.progress;\n\n            if (status === 'recognizing text') {\n              _this3.setState({\n                ocrStatus: 'detecting',\n                progress\n              });\n            } else {\n              _this3.setState({\n                ocrStatus: 'preparing',\n                progress\n              });\n            }\n          }\n        });\n        var media_url = media.get('url');\n\n        if (window.URL && URL.createObjectURL) {\n          try {\n            media_url = URL.createObjectURL(media.get('file'));\n          } catch (error) {\n            console.error(error);\n          }\n        }\n\n        _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n          var _yield$worker$recogni, text;\n\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return worker.load();\n\n                case 2:\n                  _context.next = 4;\n                  return worker.loadLanguage('eng');\n\n                case 4:\n                  _context.next = 6;\n                  return worker.initialize('eng');\n\n                case 6:\n                  _context.next = 8;\n                  return worker.recognize(media_url);\n\n                case 8:\n                  _yield$worker$recogni = _context.sent;\n                  text = _yield$worker$recogni.data.text;\n\n                  _this3.setState({\n                    description: removeExtraLineBreaks(text),\n                    dirty: true,\n                    detecting: false\n                  });\n\n                  _context.next = 13;\n                  return worker.terminate();\n\n                case 13:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }))();\n      }).catch(function (e) {\n        console.error(e);\n\n        _this3.setState({\n          detecting: false\n        });\n      });\n    };\n\n    _this3.handleThumbnailChange = function (e) {\n      if (e.target.files.length > 0) {\n        _this3.setState({\n          dirty: true\n        });\n\n        _this3.props.onSelectThumbnail(e.target.files);\n      }\n    };\n\n    _this3.setFileInputRef = function (c) {\n      _this3.fileInput = c;\n    };\n\n    _this3.handleFileInputClick = function () {\n      _this3.fileInput.click();\n    };\n\n    return _this3;\n  }\n\n  var _proto2 = FocalPointModal.prototype;\n\n  _proto2.componentWillMount = function componentWillMount() {\n    this.updatePositionFromMedia(this.props.media);\n  };\n\n  _proto2.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.media.get('id') !== nextProps.media.get('id')) {\n      this.updatePositionFromMedia(nextProps.media);\n    }\n  };\n\n  _proto2.componentWillUnmount = function componentWillUnmount() {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  };\n\n  _proto2.render = function render() {\n    var _this$props = this.props,\n        media = _this$props.media,\n        intl = _this$props.intl,\n        account = _this$props.account,\n        onClose = _this$props.onClose,\n        isUploadingThumbnail = _this$props.isUploadingThumbnail;\n    var _this$state = this.state,\n        x = _this$state.x,\n        y = _this$state.y,\n        dragging = _this$state.dragging,\n        description = _this$state.description,\n        dirty = _this$state.dirty,\n        detecting = _this$state.detecting,\n        progress = _this$state.progress,\n        ocrStatus = _this$state.ocrStatus;\n    var width = media.getIn(['meta', 'original', 'width']) || null;\n    var height = media.getIn(['meta', 'original', 'height']) || null;\n    var focals = ['image', 'gifv'].includes(media.get('type'));\n    var thumbnailable = ['audio', 'video'].includes(media.get('type'));\n    var previewRatio = 16 / 9;\n    var previewWidth = 200;\n    var previewHeight = previewWidth / previewRatio;\n    var descriptionLabel = null;\n\n    if (media.get('type') === 'audio') {\n      descriptionLabel = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_form.audio_description\",\n        defaultMessage: \"Describe for people with hearing loss\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 26\n        }\n      });\n    } else if (media.get('type') === 'video') {\n      descriptionLabel = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_form.video_description\",\n        defaultMessage: \"Describe for people with hearing loss or visual impairment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 26\n        }\n      });\n    } else {\n      descriptionLabel = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_form.description\",\n        defaultMessage: \"Describe for the visually impaired\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 26\n        }\n      });\n    }\n\n    var ocrMessage = '';\n\n    if (ocrStatus === 'detecting') {\n      ocrMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_modal.analyzing_picture\",\n        defaultMessage: \"Analyzing picture\\u2026\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 20\n        }\n      });\n    } else {\n      ocrMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_modal.preparing_ocr\",\n        defaultMessage: \"Preparing OCR\\u2026\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal report-modal\",\n      style: {\n        maxWidth: 960\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__target\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"report-modal__close\",\n      title: intl.formatMessage(messages.close),\n      icon: \"times\",\n      onClick: onClose,\n      size: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"upload_modal.edit_media\",\n      defaultMessage: \"Edit media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"report-modal__comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }\n    }, focals && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"upload_modal.hint\",\n      defaultMessage: \"Click or drag the circle on the preview to choose the focal point which will always be in view on all thumbnails.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 27\n      }\n    })), thumbnailable && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"setting-text-label\",\n      htmlFor: \"upload-modal__thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"upload_form.thumbnail\",\n      defaultMessage: \"Change thumbnail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 89\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      disabled: isUploadingThumbnail,\n      text: intl.formatMessage(messages.chooseImage),\n      onClick: this.handleFileInputClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: 'none'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 19\n      }\n    }, intl.formatMessage(messages.chooseImage)), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"upload-modal__thumbnail\",\n      ref: this.setFileInputRef,\n      type: \"file\",\n      accept: \"image/png,image/jpeg\",\n      onChange: this.handleThumbnailChange,\n      style: {\n        display: 'none'\n      },\n      disabled: isUploadingThumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"setting-divider\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"setting-text-label\",\n      htmlFor: \"upload-modal__description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 13\n      }\n    }, descriptionLabel), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-text__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Textarea, {\n      id: \"upload-modal__description\",\n      className: \"setting-text light\",\n      value: detecting ? '…' : description,\n      onChange: this.handleChange,\n      onKeyDown: this.handleKeyDown,\n      disabled: detecting,\n      autoFocus: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-text__modifiers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(UploadProgress, {\n      progress: progress * 100,\n      active: detecting,\n      icon: \"file-text-o\",\n      message: ocrMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-text__toolbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: detecting || media.get('type') !== 'image',\n      className: \"link-button\",\n      onClick: this.handleTextDetection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"upload_modal.detect_text\",\n      defaultMessage: \"Detect text from picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 136\n      }\n    })), /*#__PURE__*/React.createElement(CharacterCounter, {\n      max: 1500,\n      text: detecting ? '' : description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      disabled: !dirty || detecting || isUploadingThumbnail || length(description) > 1500,\n      text: intl.formatMessage(messages.apply),\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"focal-point-modal__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 11\n      }\n    }, focals && /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('focal-point', {\n        dragging\n      }),\n      ref: this.setRef,\n      onMouseDown: this.handleMouseDown,\n      onTouchStart: this.handleTouchStart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }, media.get('type') === 'image' && /*#__PURE__*/React.createElement(ImageLoader, {\n      src: media.get('url'),\n      width: width,\n      height: height,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 51\n      }\n    }), media.get('type') === 'gifv' && /*#__PURE__*/React.createElement(GIFV, {\n      src: media.get('url'),\n      width: width,\n      height: height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 50\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"focal-point__preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"upload_modal.preview_label\",\n      defaultMessage: \"Preview ({ratio})\",\n      values: {\n        ratio: '16:9'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 27\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: previewWidth,\n        height: previewHeight,\n        backgroundImage: \"url(\" + media.get('preview_url') + \")\",\n        backgroundSize: 'cover',\n        backgroundPosition: x * 100 + \"% \" + y * 100 + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"focal-point__reticle\",\n      style: {\n        top: y * 100 + \"%\",\n        left: x * 100 + \"%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"focal-point__overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    })), media.get('type') === 'video' && /*#__PURE__*/React.createElement(Video, {\n      preview: media.get('preview_url'),\n      frameRate: media.getIn(['meta', 'original', 'frame_rate']),\n      blurhash: media.get('blurhash'),\n      src: media.get('url'),\n      detailed: true,\n      inline: true,\n      editable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 15\n      }\n    }), media.get('type') === 'audio' && /*#__PURE__*/React.createElement(Audio, {\n      src: media.get('url'),\n      duration: media.getIn(['meta', 'original', 'duration'], 0),\n      height: 150,\n      poster: media.get('preview_url') || account.get('avatar_static'),\n      backgroundColor: media.getIn(['meta', 'colors', 'background']),\n      foregroundColor: media.getIn(['meta', 'colors', 'foreground']),\n      accentColor: media.getIn(['meta', 'colors', 'accent']),\n      editable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 15\n      }\n    }))));\n  };\n\n  return FocalPointModal;\n}(ImmutablePureComponent), _class2.propTypes = {\n  media: ImmutablePropTypes.map.isRequired,\n  account: ImmutablePropTypes.map.isRequired,\n  isUploadingThumbnail: PropTypes.bool,\n  onSave: PropTypes.func.isRequired,\n  onSelectThumbnail: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class) || _class);\nexport { FocalPointModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/focal_point_modal.js"],"names":["React","ImmutablePropTypes","PropTypes","ImmutablePureComponent","connect","classNames","changeUploadCompose","uploadThumbnail","getPointerPosition","FormattedMessage","defineMessages","injectIntl","IconButton","Button","Video","Audio","Textarea","UploadProgress","CharacterCounter","length","Tesseract","fetchTesseract","GIFV","me","tesseractCorePath","tesseractWorkerPath","assetHost","messages","close","apply","placeholder","chooseImage","mapStateToProps","state","id","media","getIn","find","item","get","account","isUploadingThumbnail","mapDispatchToProps","dispatch","onSave","description","x","y","focus","toFixed","onSelectThumbnail","files","removeExtraLineBreaks","str","replace","ImageLoader","loading","componentDidMount","image","Image","addEventListener","setState","src","props","render","width","height","PureComponent","propTypes","string","isRequired","number","FocalPointModal","focusX","focusY","dragging","dirty","progress","ocrStatus","handleMouseDown","e","document","handleMouseMove","handleMouseUp","updatePosition","handleTouchStart","handleTouchEnd","removeEventListener","node","updatePositionFromMedia","handleChange","target","value","handleKeyDown","keyCode","ctrlKey","metaKey","preventDefault","stopPropagation","handleSubmit","onClose","setRef","c","handleTextDetection","detecting","then","createWorker","worker","workerPath","corePath","langPath","logger","status","media_url","window","URL","createObjectURL","error","console","load","loadLanguage","initialize","recognize","text","data","terminate","catch","handleThumbnailChange","setFileInputRef","fileInput","handleFileInputClick","click","componentWillMount","componentWillReceiveProps","nextProps","componentWillUnmount","intl","focals","includes","thumbnailable","previewRatio","previewWidth","previewHeight","descriptionLabel","ocrMessage","maxWidth","formatMessage","display","ratio","backgroundImage","backgroundSize","backgroundPosition","top","left","map","bool","func","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { changeUploadCompose, uploadThumbnail } from '../../../actions/compose';\nimport { getPointerPosition } from '../../video';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Button from 'mastodon/components/button';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport Textarea from 'react-textarea-autosize';\nimport UploadProgress from 'mastodon/features/compose/components/upload_progress';\nimport CharacterCounter from 'mastodon/features/compose/components/character_counter';\nimport { length } from 'stringz';\nimport { Tesseract as fetchTesseract } from 'mastodon/features/ui/util/async-components';\nimport GIFV from 'mastodon/components/gifv';\nimport { me } from 'mastodon/initial_state';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport tesseractCorePath from 'tesseract.js-core/tesseract-core.wasm.js';\n// eslint-disable-next-line import/extensions\nimport tesseractWorkerPath from 'tesseract.js/dist/worker.min.js';\nimport { assetHost } from 'mastodon/utils/config';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n  apply: { id: 'upload_modal.apply', defaultMessage: 'Apply' },\n  placeholder: { id: 'upload_modal.description_placeholder', defaultMessage: 'A quick brown fox jumps over the lazy dog' },\n  chooseImage: { id: 'upload_modal.choose_image', defaultMessage: 'Choose image' },\n});\n\nconst mapStateToProps = (state, { id }) => ({\n  media: state.getIn(['compose', 'media_attachments']).find(item => item.get('id') === id),\n  account: state.getIn(['accounts', me]),\n  isUploadingThumbnail: state.getIn(['compose', 'isUploadingThumbnail']),\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n\n  onSave: (description, x, y) => {\n    dispatch(changeUploadCompose(id, { description, focus: `${x.toFixed(2)},${y.toFixed(2)}` }));\n  },\n\n  onSelectThumbnail: files => {\n    dispatch(uploadThumbnail(id, files[0]));\n  },\n\n});\n\nconst removeExtraLineBreaks = str => str.replace(/\\n\\n/g, '******')\n  .replace(/\\n/g, ' ')\n  .replace(/\\*\\*\\*\\*\\*\\*/g, '\\n\\n');\n\nclass ImageLoader extends React.PureComponent {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  state = {\n    loading: true,\n  };\n\n  componentDidMount() {\n    const image = new Image();\n    image.addEventListener('load', () => this.setState({ loading: false }));\n    image.src = this.props.src;\n  }\n\n  render () {\n    const { loading } = this.state;\n\n    if (loading) {\n      return <canvas width={this.props.width} height={this.props.height} />;\n    } else {\n      return <img {...this.props} alt='' />;\n    }\n  }\n\n}\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass FocalPointModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    account: ImmutablePropTypes.map.isRequired,\n    isUploadingThumbnail: PropTypes.bool,\n    onSave: PropTypes.func.isRequired,\n    onSelectThumbnail: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    x: 0,\n    y: 0,\n    focusX: 0,\n    focusY: 0,\n    dragging: false,\n    description: '',\n    dirty: false,\n    progress: 0,\n    loading: true,\n    ocrStatus: '',\n  };\n\n  componentWillMount () {\n    this.updatePositionFromMedia(this.props.media);\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (this.props.media.get('id') !== nextProps.media.get('id')) {\n      this.updatePositionFromMedia(nextProps.media);\n    }\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  handleMouseDown = e => {\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n\n    this.updatePosition(e);\n    this.setState({ dragging: true });\n  }\n\n  handleTouchStart = e => {\n    document.addEventListener('touchmove', this.handleMouseMove);\n    document.addEventListener('touchend', this.handleTouchEnd);\n\n    this.updatePosition(e);\n    this.setState({ dragging: true });\n  }\n\n  handleMouseMove = e => {\n    this.updatePosition(e);\n  }\n\n  handleMouseUp = () => {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n\n    this.setState({ dragging: false });\n  }\n\n  handleTouchEnd = () => {\n    document.removeEventListener('touchmove', this.handleMouseMove);\n    document.removeEventListener('touchend', this.handleTouchEnd);\n\n    this.setState({ dragging: false });\n  }\n\n  updatePosition = e => {\n    const { x, y } = getPointerPosition(this.node, e);\n    const focusX   = (x - .5) *  2;\n    const focusY   = (y - .5) * -2;\n\n    this.setState({ x, y, focusX, focusY, dirty: true });\n  }\n\n  updatePositionFromMedia = media => {\n    const focusX      = media.getIn(['meta', 'focus', 'x']);\n    const focusY      = media.getIn(['meta', 'focus', 'y']);\n    const description = media.get('description') || '';\n\n    if (focusX && focusY) {\n      const x = (focusX /  2) + .5;\n      const y = (focusY / -2) + .5;\n\n      this.setState({\n        x,\n        y,\n        focusX,\n        focusY,\n        description,\n        dirty: false,\n      });\n    } else {\n      this.setState({\n        x: 0.5,\n        y: 0.5,\n        focusX: 0,\n        focusY: 0,\n        description,\n        dirty: false,\n      });\n    }\n  }\n\n  handleChange = e => {\n    this.setState({ description: e.target.value, dirty: true });\n  }\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.setState({ description: e.target.value, dirty: true });\n      this.handleSubmit();\n    }\n  }\n\n  handleSubmit = () => {\n    this.props.onSave(this.state.description, this.state.focusX, this.state.focusY);\n    this.props.onClose();\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  handleTextDetection = () => {\n    const { media } = this.props;\n\n    this.setState({ detecting: true });\n\n    fetchTesseract().then(({ createWorker }) => {\n      const worker = createWorker({\n        workerPath: tesseractWorkerPath,\n        corePath: tesseractCorePath,\n        langPath: `${assetHost}/ocr/lang-data/`,\n        logger: ({ status, progress }) => {\n          if (status === 'recognizing text') {\n            this.setState({ ocrStatus: 'detecting', progress });\n          } else {\n            this.setState({ ocrStatus: 'preparing', progress });\n          }\n        },\n      });\n\n      let media_url = media.get('url');\n\n      if (window.URL && URL.createObjectURL) {\n        try {\n          media_url = URL.createObjectURL(media.get('file'));\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      (async () => {\n        await worker.load();\n        await worker.loadLanguage('eng');\n        await worker.initialize('eng');\n        const { data: { text } } = await worker.recognize(media_url);\n        this.setState({ description: removeExtraLineBreaks(text), dirty: true, detecting: false });\n        await worker.terminate();\n      })();\n    }).catch((e) => {\n      console.error(e);\n      this.setState({ detecting: false });\n    });\n  }\n\n  handleThumbnailChange = e => {\n    if (e.target.files.length > 0) {\n      this.setState({ dirty: true });\n      this.props.onSelectThumbnail(e.target.files);\n    }\n  }\n\n  setFileInputRef = c => {\n    this.fileInput = c;\n  }\n\n  handleFileInputClick = () => {\n    this.fileInput.click();\n  }\n\n  render () {\n    const { media, intl, account, onClose, isUploadingThumbnail } = this.props;\n    const { x, y, dragging, description, dirty, detecting, progress, ocrStatus } = this.state;\n\n    const width  = media.getIn(['meta', 'original', 'width']) || null;\n    const height = media.getIn(['meta', 'original', 'height']) || null;\n    const focals = ['image', 'gifv'].includes(media.get('type'));\n    const thumbnailable = ['audio', 'video'].includes(media.get('type'));\n\n    const previewRatio  = 16/9;\n    const previewWidth  = 200;\n    const previewHeight = previewWidth / previewRatio;\n\n    let descriptionLabel = null;\n\n    if (media.get('type') === 'audio') {\n      descriptionLabel = <FormattedMessage id='upload_form.audio_description' defaultMessage='Describe for people with hearing loss' />;\n    } else if (media.get('type') === 'video') {\n      descriptionLabel = <FormattedMessage id='upload_form.video_description' defaultMessage='Describe for people with hearing loss or visual impairment' />;\n    } else {\n      descriptionLabel = <FormattedMessage id='upload_form.description' defaultMessage='Describe for the visually impaired' />;\n    }\n\n    let ocrMessage = '';\n    if (ocrStatus === 'detecting') {\n      ocrMessage = <FormattedMessage id='upload_modal.analyzing_picture' defaultMessage='Analyzing picture…' />;\n    } else {\n      ocrMessage = <FormattedMessage id='upload_modal.preparing_ocr' defaultMessage='Preparing OCR…' />;\n    }\n\n    return (\n      <div className='modal-root__modal report-modal' style={{ maxWidth: 960 }}>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={20} />\n          <FormattedMessage id='upload_modal.edit_media' defaultMessage='Edit media' />\n        </div>\n\n        <div className='report-modal__container'>\n          <div className='report-modal__comment'>\n            {focals && <p><FormattedMessage id='upload_modal.hint' defaultMessage='Click or drag the circle on the preview to choose the focal point which will always be in view on all thumbnails.' /></p>}\n\n            {thumbnailable && (\n              <React.Fragment>\n                <label className='setting-text-label' htmlFor='upload-modal__thumbnail'><FormattedMessage id='upload_form.thumbnail' defaultMessage='Change thumbnail' /></label>\n\n                <Button disabled={isUploadingThumbnail} text={intl.formatMessage(messages.chooseImage)} onClick={this.handleFileInputClick} />\n\n                <label>\n                  <span style={{ display: 'none' }}>{intl.formatMessage(messages.chooseImage)}</span>\n\n                  <input\n                    id='upload-modal__thumbnail'\n                    ref={this.setFileInputRef}\n                    type='file'\n                    accept='image/png,image/jpeg'\n                    onChange={this.handleThumbnailChange}\n                    style={{ display: 'none' }}\n                    disabled={isUploadingThumbnail}\n                  />\n                </label>\n\n                <hr className='setting-divider' />\n              </React.Fragment>\n            )}\n\n            <label className='setting-text-label' htmlFor='upload-modal__description'>\n              {descriptionLabel}\n            </label>\n\n            <div className='setting-text__wrapper'>\n              <Textarea\n                id='upload-modal__description'\n                className='setting-text light'\n                value={detecting ? '…' : description}\n                onChange={this.handleChange}\n                onKeyDown={this.handleKeyDown}\n                disabled={detecting}\n                autoFocus\n              />\n\n              <div className='setting-text__modifiers'>\n                <UploadProgress progress={progress * 100} active={detecting} icon='file-text-o' message={ocrMessage} />\n              </div>\n            </div>\n\n            <div className='setting-text__toolbar'>\n              <button disabled={detecting || media.get('type') !== 'image'} className='link-button' onClick={this.handleTextDetection}><FormattedMessage id='upload_modal.detect_text' defaultMessage='Detect text from picture' /></button>\n              <CharacterCounter max={1500} text={detecting ? '' : description} />\n            </div>\n\n            <Button disabled={!dirty || detecting || isUploadingThumbnail || length(description) > 1500} text={intl.formatMessage(messages.apply)} onClick={this.handleSubmit} />\n          </div>\n\n          <div className='focal-point-modal__content'>\n            {focals && (\n              <div className={classNames('focal-point', { dragging })} ref={this.setRef} onMouseDown={this.handleMouseDown} onTouchStart={this.handleTouchStart}>\n                {media.get('type') === 'image' && <ImageLoader src={media.get('url')} width={width} height={height} alt='' />}\n                {media.get('type') === 'gifv' && <GIFV src={media.get('url')} width={width} height={height} />}\n\n                <div className='focal-point__preview'>\n                  <strong><FormattedMessage id='upload_modal.preview_label' defaultMessage='Preview ({ratio})' values={{ ratio: '16:9' }} /></strong>\n                  <div style={{ width: previewWidth, height: previewHeight, backgroundImage: `url(${media.get('preview_url')})`, backgroundSize: 'cover', backgroundPosition: `${x * 100}% ${y * 100}%` }} />\n                </div>\n\n                <div className='focal-point__reticle' style={{ top: `${y * 100}%`, left: `${x * 100}%` }} />\n                <div className='focal-point__overlay' />\n              </div>\n            )}\n\n            {media.get('type') === 'video' && (\n              <Video\n                preview={media.get('preview_url')}\n                frameRate={media.getIn(['meta', 'original', 'frame_rate'])}\n                blurhash={media.get('blurhash')}\n                src={media.get('url')}\n                detailed\n                inline\n                editable\n              />\n            )}\n\n            {media.get('type') === 'audio' && (\n              <Audio\n                src={media.get('url')}\n                duration={media.getIn(['meta', 'original', 'duration'], 0)}\n                height={150}\n                poster={media.get('preview_url') || account.get('avatar_static')}\n                backgroundColor={media.getIn(['meta', 'colors', 'background'])}\n                foregroundColor={media.getIn(['meta', 'colors', 'foreground'])}\n                accentColor={media.getIn(['meta', 'colors', 'accent'])}\n                editable\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lightbox.close","defaultMessage":"Close"},{"id":"upload_modal.apply","defaultMessage":"Apply"},{"id":"upload_modal.description_placeholder","defaultMessage":"A quick brown fox jumps over the lazy dog"},{"id":"upload_modal.choose_image","defaultMessage":"Choose image"},{"id":"upload_form.audio_description","defaultMessage":"Describe for people with hearing loss"},{"id":"upload_form.video_description","defaultMessage":"Describe for people with hearing loss or visual impairment"},{"id":"upload_form.description","defaultMessage":"Describe for the visually impaired"},{"id":"upload_modal.analyzing_picture","defaultMessage":"Analyzing picture…"},{"id":"upload_modal.preparing_ocr","defaultMessage":"Preparing OCR…"},{"id":"upload_modal.edit_media","defaultMessage":"Edit media"},{"id":"upload_modal.hint","defaultMessage":"Click or drag the circle on the preview to choose the focal point which will always be in view on all thumbnails."},{"id":"upload_form.thumbnail","defaultMessage":"Change thumbnail"},{"id":"upload_modal.detect_text","defaultMessage":"Detect text from picture"},{"id":"upload_modal.preview_label","defaultMessage":"Preview ({ratio})"}]}},"sourceType":"module"}