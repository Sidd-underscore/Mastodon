{"ast":null,"code":"import { supportsPassiveEvents } from 'detect-passive-events';\nimport { forceSingleColumn } from 'mastodon/initial_state';\nvar LAYOUT_BREAKPOINT = 630;\nexport var isMobile = function isMobile(width) {\n  return width <= LAYOUT_BREAKPOINT;\n};\nexport var layoutFromWindow = function layoutFromWindow() {\n  if (isMobile(window.innerWidth)) {\n    return 'mobile';\n  } else if (forceSingleColumn) {\n    return 'single-column';\n  } else {\n    return 'multi-column';\n  }\n};\nvar iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\nvar userTouching = false;\nvar listenerOptions = supportsPassiveEvents ? {\n  passive: true\n} : false;\n\nvar touchListener = function touchListener() {\n  userTouching = true;\n  window.removeEventListener('touchstart', touchListener, listenerOptions);\n};\n\nwindow.addEventListener('touchstart', touchListener, listenerOptions);\nexport var isUserTouching = function isUserTouching() {\n  return userTouching;\n};\nexport var isIOS = function isIOS() {\n  return iOS;\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/is_mobile.js"],"names":["supportsPassiveEvents","forceSingleColumn","LAYOUT_BREAKPOINT","isMobile","width","layoutFromWindow","window","innerWidth","iOS","test","navigator","userAgent","MSStream","userTouching","listenerOptions","passive","touchListener","removeEventListener","addEventListener","isUserTouching","isIOS"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,uBAAtC;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AAEA,IAAMC,iBAAiB,GAAG,GAA1B;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAIA,KAAK,IAAIF,iBAAb;AAAA,CAAtB;AAEP,OAAO,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AACpC,MAAIF,QAAQ,CAACG,MAAM,CAACC,UAAR,CAAZ,EAAiC;AAC/B,WAAO,QAAP;AACD,GAFD,MAEO,IAAIN,iBAAJ,EAAuB;AAC5B,WAAO,eAAP;AACD,GAFM,MAEA;AACL,WAAO,cAAP;AACD;AACF,CARM;AAUP,IAAMO,GAAG,GAAG,mBAAmBC,IAAnB,CAAwBC,SAAS,CAACC,SAAlC,KAAgD,CAACL,MAAM,CAACM,QAApE;AAEA,IAAIC,YAAY,GAAG,KAAnB;AACA,IAAIC,eAAe,GAAGd,qBAAqB,GAAG;AAAEe,EAAAA,OAAO,EAAE;AAAX,CAAH,GAAuB,KAAlE;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1BH,EAAAA,YAAY,GAAG,IAAf;AACAP,EAAAA,MAAM,CAACW,mBAAP,CAA2B,YAA3B,EAAyCD,aAAzC,EAAwDF,eAAxD;AACD,CAHD;;AAKAR,MAAM,CAACY,gBAAP,CAAwB,YAAxB,EAAsCF,aAAtC,EAAqDF,eAArD;AAEA,OAAO,IAAMK,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMN,YAAN;AAAA,CAAvB;AAEP,OAAO,IAAMO,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAMZ,GAAN;AAAA,CAAd","sourcesContent":["import { supportsPassiveEvents } from 'detect-passive-events';\nimport { forceSingleColumn } from 'mastodon/initial_state';\n\nconst LAYOUT_BREAKPOINT = 630;\n\nexport const isMobile = width => width <= LAYOUT_BREAKPOINT;\n\nexport const layoutFromWindow = () => {\n  if (isMobile(window.innerWidth)) {\n    return 'mobile';\n  } else if (forceSingleColumn) {\n    return 'single-column';\n  } else {\n    return 'multi-column';\n  }\n};\n\nconst iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\nlet userTouching = false;\nlet listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nconst touchListener = () => {\n  userTouching = true;\n  window.removeEventListener('touchstart', touchListener, listenerOptions);\n};\n\nwindow.addEventListener('touchstart', touchListener, listenerOptions);\n\nexport const isUserTouching = () => userTouching;\n\nexport const isIOS = () => iOS;\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}