{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/list_panel.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Icon from 'mastodon/components/icon';\nvar getOrderedLists = createSelector([function (state) {\n  return state.get('lists');\n}], function (lists) {\n  if (!lists) {\n    return lists;\n  }\n\n  return lists.toList().filter(function (item) {\n    return !!item;\n  }).sort(function (a, b) {\n    return a.get('title').localeCompare(b.get('title'));\n  }).take(4);\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    lists: getOrderedLists(state)\n  };\n};\n\nvar ListPanel = (_dec = connect(mapStateToProps), withRouter(_class = _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ListPanel, _ImmutablePureCompone);\n\n  function ListPanel() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = ListPanel.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var dispatch = this.props.dispatch;\n    dispatch(fetchLists());\n  };\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var lists = this.props.lists;\n\n    if (!lists || lists.isEmpty()) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), lists.map(function (list) {\n      return /*#__PURE__*/React.createElement(NavLink, {\n        key: list.get('id'),\n        className: \"column-link column-link--transparent\",\n        strict: true,\n        to: \"/timelines/list/\" + list.get('id'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        className: \"column-link__icon\",\n        id: \"list-ul\",\n        fixedWidth: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 138\n        }\n      }), list.get('title'));\n    }));\n  };\n\n  return ListPanel;\n}(ImmutablePureComponent), _class2.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  lists: ImmutablePropTypes.list\n}, _temp)) || _class) || _class);\nexport { ListPanel as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/list_panel.js"],"names":["React","PropTypes","ImmutablePropTypes","ImmutablePureComponent","fetchLists","connect","createSelector","NavLink","withRouter","Icon","getOrderedLists","state","get","lists","toList","filter","item","sort","a","b","localeCompare","take","mapStateToProps","ListPanel","componentDidMount","dispatch","props","render","isEmpty","map","list","propTypes","func","isRequired"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,kBAApC;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AAEA,IAAMC,eAAe,GAAGJ,cAAc,CAAC,CAAC,UAAAK,KAAK;AAAA,SAAIA,KAAK,CAACC,GAAN,CAAU,OAAV,CAAJ;AAAA,CAAN,CAAD,EAAgC,UAAAC,KAAK,EAAI;AAC7E,MAAI,CAACA,KAAL,EAAY;AACV,WAAOA,KAAP;AACD;;AAED,SAAOA,KAAK,CAACC,MAAN,GAAeC,MAAf,CAAsB,UAAAC,IAAI;AAAA,WAAI,CAAC,CAACA,IAAN;AAAA,GAA1B,EAAsCC,IAAtC,CAA2C,UAACC,CAAD,EAAIC,CAAJ;AAAA,WAAUD,CAAC,CAACN,GAAF,CAAM,OAAN,EAAeQ,aAAf,CAA6BD,CAAC,CAACP,GAAF,CAAM,OAAN,CAA7B,CAAV;AAAA,GAA3C,EAAmGS,IAAnG,CAAwG,CAAxG,CAAP;AACD,CANqC,CAAtC;;AAQA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAX,KAAK;AAAA,SAAK;AAChCE,IAAAA,KAAK,EAAEH,eAAe,CAACC,KAAD;AADU,GAAL;AAAA,CAA7B;;IAMMY,S,WADLlB,OAAO,CAACiB,eAAD,C,EADQd,U;;;;;;;;;SASdgB,iB,GAAA,6BAAqB;AACnB,QAAQC,QAAR,GAAqB,KAAKC,KAA1B,CAAQD,QAAR;AACAA,IAAAA,QAAQ,CAACrB,UAAU,EAAX,CAAR;AACD,G;;SAEDuB,M,GAAA,kBAAU;AAAA;;AACR,QAAQd,KAAR,GAAkB,KAAKa,KAAvB,CAAQb,KAAR;;AAEA,QAAI,CAACA,KAAD,IAAUA,KAAK,CAACe,OAAN,EAAd,EAA+B;AAC7B,aAAO,IAAP;AACD;;AAED,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGGf,KAAK,CAACgB,GAAN,CAAU,UAAAC,IAAI;AAAA,0BACb,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAAClB,GAAL,CAAS,IAAT,CAAd;AAA8B,QAAA,SAAS,EAAC,sCAAxC;AAA+E,QAAA,MAAM,MAArF;AAAsF,QAAA,EAAE,uBAAqBkB,IAAI,CAAClB,GAAL,CAAS,IAAT,CAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA+H,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,mBAAhB;AAAoC,QAAA,EAAE,EAAC,SAAvC;AAAiD,QAAA,UAAU,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA/H,EAA8LkB,IAAI,CAAClB,GAAL,CAAS,OAAT,CAA9L,CADa;AAAA,KAAd,CAHH,CADF;AASD,G;;;EA5BqBT,sB,WAEf4B,S,GAAY;AACjBN,EAAAA,QAAQ,EAAExB,SAAS,CAAC+B,IAAV,CAAeC,UADR;AAEjBpB,EAAAA,KAAK,EAAEX,kBAAkB,CAAC4B;AAFT,C;SAFfP,S","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport { connect } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport Icon from 'mastodon/components/icon';\n\nconst getOrderedLists = createSelector([state => state.get('lists')], lists => {\n  if (!lists) {\n    return lists;\n  }\n\n  return lists.toList().filter(item => !!item).sort((a, b) => a.get('title').localeCompare(b.get('title'))).take(4);\n});\n\nconst mapStateToProps = state => ({\n  lists: getOrderedLists(state),\n});\n\nexport default @withRouter\n@connect(mapStateToProps)\nclass ListPanel extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    lists: ImmutablePropTypes.list,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(fetchLists());\n  }\n\n  render () {\n    const { lists } = this.props;\n\n    if (!lists || lists.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div>\n        <hr />\n\n        {lists.map(list => (\n          <NavLink key={list.get('id')} className='column-link column-link--transparent' strict to={`/timelines/list/${list.get('id')}`}><Icon className='column-link__icon' id='list-ul' fixedWidth />{list.get('title')}</NavLink>\n        ))}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}