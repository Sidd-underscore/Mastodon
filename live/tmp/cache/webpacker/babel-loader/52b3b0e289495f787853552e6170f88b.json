{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/direct_timeline/components/conversation.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport StatusContent from 'mastodon/components/status_content';\nimport AttachmentList from 'mastodon/components/attachment_list';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport DropdownMenuContainer from 'mastodon/containers/dropdown_menu_container';\nimport AvatarComposite from 'mastodon/components/avatar_composite';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport RelativeTimestamp from 'mastodon/components/relative_timestamp';\nimport { HotKeys } from 'react-hotkeys';\nimport { autoPlayGif } from 'mastodon/initial_state';\nimport classNames from 'classnames';\nvar messages = defineMessages({\n  more: {\n    \"id\": \"status.more\",\n    \"defaultMessage\": \"More\"\n  },\n  open: {\n    \"id\": \"conversation.open\",\n    \"defaultMessage\": \"View conversation\"\n  },\n  reply: {\n    \"id\": \"status.reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  markAsRead: {\n    \"id\": \"conversation.mark_as_read\",\n    \"defaultMessage\": \"Mark as read\"\n  },\n  delete: {\n    \"id\": \"conversation.delete\",\n    \"defaultMessage\": \"Delete conversation\"\n  },\n  muteConversation: {\n    \"id\": \"status.mute_conversation\",\n    \"defaultMessage\": \"Mute conversation\"\n  },\n  unmuteConversation: {\n    \"id\": \"status.unmute_conversation\",\n    \"defaultMessage\": \"Unmute conversation\"\n  }\n});\n\nvar Conversation = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Conversation, _ImmutablePureCompone);\n\n  function Conversation() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleMouseEnter = function (_ref) {\n      var currentTarget = _ref.currentTarget;\n\n      if (autoPlayGif) {\n        return;\n      }\n\n      var emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n      for (var i = 0; i < emojis.length; i++) {\n        var emoji = emojis[i];\n        emoji.src = emoji.getAttribute('data-original');\n      }\n    };\n\n    _this.handleMouseLeave = function (_ref2) {\n      var currentTarget = _ref2.currentTarget;\n\n      if (autoPlayGif) {\n        return;\n      }\n\n      var emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n      for (var i = 0; i < emojis.length; i++) {\n        var emoji = emojis[i];\n        emoji.src = emoji.getAttribute('data-static');\n      }\n    };\n\n    _this.handleClick = function () {\n      if (!_this.context.router) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          lastStatus = _this$props.lastStatus,\n          unread = _this$props.unread,\n          markRead = _this$props.markRead;\n\n      if (unread) {\n        markRead();\n      }\n\n      _this.context.router.history.push(\"/statuses/\" + lastStatus.get('id'));\n    };\n\n    _this.handleMarkAsRead = function () {\n      _this.props.markRead();\n    };\n\n    _this.handleReply = function () {\n      _this.props.reply(_this.props.lastStatus, _this.context.router.history);\n    };\n\n    _this.handleDelete = function () {\n      _this.props.delete();\n    };\n\n    _this.handleHotkeyMoveUp = function () {\n      _this.props.onMoveUp(_this.props.conversationId);\n    };\n\n    _this.handleHotkeyMoveDown = function () {\n      _this.props.onMoveDown(_this.props.conversationId);\n    };\n\n    _this.handleConversationMute = function () {\n      _this.props.onMute(_this.props.lastStatus);\n    };\n\n    _this.handleShowMore = function () {\n      _this.props.onToggleHidden(_this.props.lastStatus);\n    };\n\n    return _this;\n  }\n\n  var _proto = Conversation.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props2 = this.props,\n        accounts = _this$props2.accounts,\n        lastStatus = _this$props2.lastStatus,\n        unread = _this$props2.unread,\n        scrollKey = _this$props2.scrollKey,\n        intl = _this$props2.intl;\n\n    if (lastStatus === null) {\n      return null;\n    }\n\n    var menu = [{\n      text: intl.formatMessage(messages.open),\n      action: this.handleClick\n    }, null];\n    menu.push({\n      text: intl.formatMessage(lastStatus.get('muted') ? messages.unmuteConversation : messages.muteConversation),\n      action: this.handleConversationMute\n    });\n\n    if (unread) {\n      menu.push({\n        text: intl.formatMessage(messages.markAsRead),\n        action: this.handleMarkAsRead\n      });\n      menu.push(null);\n    }\n\n    menu.push({\n      text: intl.formatMessage(messages.delete),\n      action: this.handleDelete\n    });\n    var names = accounts.map(function (a) {\n      return /*#__PURE__*/React.createElement(Permalink, {\n        to: \"/accounts/\" + a.get('id'),\n        href: a.get('url'),\n        key: a.get('id'),\n        title: a.get('acct'),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"bdi\", {\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 140\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        className: \"display-name__html\",\n        dangerouslySetInnerHTML: {\n          __html: a.get('display_name_html')\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 145\n        }\n      })));\n    }).reduce(function (prev, cur) {\n      return [prev, ', ', cur];\n    });\n    var handlers = {\n      reply: this.handleReply,\n      open: this.handleClick,\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      toggleHidden: this.handleShowMore\n    };\n    return /*#__PURE__*/React.createElement(HotKeys, {\n      handlers: handlers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('conversation focusable muted', {\n        'conversation--unread': unread\n      }),\n      tabIndex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation__avatar\",\n      onClick: this.handleClick,\n      role: \"presentation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(AvatarComposite, {\n      accounts: accounts,\n      size: 48,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation__content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation__content__info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation__content__relative-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, unread && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"conversation__unread\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 28\n      }\n    }), \" \", /*#__PURE__*/React.createElement(RelativeTimestamp, {\n      timestamp: lastStatus.get('created_at'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 71\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"conversation__content__names\",\n      onMouseEnter: this.handleMouseEnter,\n      onMouseLeave: this.handleMouseLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"conversation.with\",\n      defaultMessage: \"With {names}\",\n      values: {\n        names: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 105\n          }\n        }, names)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(StatusContent, {\n      status: lastStatus,\n      onClick: this.handleClick,\n      expanded: !lastStatus.get('hidden'),\n      onExpandedToggle: this.handleShowMore,\n      collapsable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }), lastStatus.get('media_attachments').size > 0 && /*#__PURE__*/React.createElement(AttachmentList, {\n      compact: true,\n      media: lastStatus.get('media_attachments'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"status__action-bar-button\",\n      title: intl.formatMessage(messages.reply),\n      icon: \"reply\",\n      onClick: this.handleReply,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__action-bar-dropdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(DropdownMenuContainer, {\n      scrollKey: scrollKey,\n      status: lastStatus,\n      items: menu,\n      icon: \"ellipsis-h\",\n      size: 18,\n      direction: \"right\",\n      title: intl.formatMessage(messages.more),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }))))));\n  };\n\n  return Conversation;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  conversationId: PropTypes.string.isRequired,\n  accounts: ImmutablePropTypes.list.isRequired,\n  lastStatus: ImmutablePropTypes.map,\n  unread: PropTypes.bool.isRequired,\n  scrollKey: PropTypes.string,\n  onMoveUp: PropTypes.func,\n  onMoveDown: PropTypes.func,\n  markRead: PropTypes.func.isRequired,\n  delete: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { Conversation as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/direct_timeline/components/conversation.js"],"names":["React","PropTypes","ImmutablePropTypes","ImmutablePureComponent","StatusContent","AttachmentList","defineMessages","injectIntl","FormattedMessage","DropdownMenuContainer","AvatarComposite","Permalink","IconButton","RelativeTimestamp","HotKeys","autoPlayGif","classNames","messages","more","open","reply","markAsRead","delete","muteConversation","unmuteConversation","Conversation","handleMouseEnter","currentTarget","emojis","querySelectorAll","i","length","emoji","src","getAttribute","handleMouseLeave","handleClick","context","router","props","lastStatus","unread","markRead","history","push","get","handleMarkAsRead","handleReply","handleDelete","handleHotkeyMoveUp","onMoveUp","conversationId","handleHotkeyMoveDown","onMoveDown","handleConversationMute","onMute","handleShowMore","onToggleHidden","render","accounts","scrollKey","intl","menu","text","formatMessage","action","names","map","a","__html","reduce","prev","cur","handlers","moveUp","moveDown","toggleHidden","size","contextTypes","object","propTypes","string","isRequired","list","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport StatusContent from 'mastodon/components/status_content';\nimport AttachmentList from 'mastodon/components/attachment_list';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport DropdownMenuContainer from 'mastodon/containers/dropdown_menu_container';\nimport AvatarComposite from 'mastodon/components/avatar_composite';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport RelativeTimestamp from 'mastodon/components/relative_timestamp';\nimport { HotKeys } from 'react-hotkeys';\nimport { autoPlayGif } from 'mastodon/initial_state';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  more: { id: 'status.more', defaultMessage: 'More' },\n  open: { id: 'conversation.open', defaultMessage: 'View conversation' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  markAsRead: { id: 'conversation.mark_as_read', defaultMessage: 'Mark as read' },\n  delete: { id: 'conversation.delete', defaultMessage: 'Delete conversation' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n});\n\nexport default @injectIntl\nclass Conversation extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    conversationId: PropTypes.string.isRequired,\n    accounts: ImmutablePropTypes.list.isRequired,\n    lastStatus: ImmutablePropTypes.map,\n    unread:PropTypes.bool.isRequired,\n    scrollKey: PropTypes.string,\n    onMoveUp: PropTypes.func,\n    onMoveDown: PropTypes.func,\n    markRead: PropTypes.func.isRequired,\n    delete: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleMouseEnter = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-original');\n    }\n  }\n\n  handleMouseLeave = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-static');\n    }\n  }\n\n  handleClick = () => {\n    if (!this.context.router) {\n      return;\n    }\n\n    const { lastStatus, unread, markRead } = this.props;\n\n    if (unread) {\n      markRead();\n    }\n\n    this.context.router.history.push(`/statuses/${lastStatus.get('id')}`);\n  }\n\n  handleMarkAsRead = () => {\n    this.props.markRead();\n  }\n\n  handleReply = () => {\n    this.props.reply(this.props.lastStatus, this.context.router.history);\n  }\n\n  handleDelete = () => {\n    this.props.delete();\n  }\n\n  handleHotkeyMoveUp = () => {\n    this.props.onMoveUp(this.props.conversationId);\n  }\n\n  handleHotkeyMoveDown = () => {\n    this.props.onMoveDown(this.props.conversationId);\n  }\n\n  handleConversationMute = () => {\n    this.props.onMute(this.props.lastStatus);\n  }\n\n  handleShowMore = () => {\n    this.props.onToggleHidden(this.props.lastStatus);\n  }\n\n  render () {\n    const { accounts, lastStatus, unread, scrollKey, intl } = this.props;\n\n    if (lastStatus === null) {\n      return null;\n    }\n\n    const menu = [\n      { text: intl.formatMessage(messages.open), action: this.handleClick },\n      null,\n    ];\n\n    menu.push({ text: intl.formatMessage(lastStatus.get('muted') ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMute });\n\n    if (unread) {\n      menu.push({ text: intl.formatMessage(messages.markAsRead), action: this.handleMarkAsRead });\n      menu.push(null);\n    }\n\n    menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDelete });\n\n    const names = accounts.map(a => <Permalink to={`/accounts/${a.get('id')}`} href={a.get('url')} key={a.get('id')} title={a.get('acct')}><bdi><strong className='display-name__html' dangerouslySetInnerHTML={{ __html: a.get('display_name_html') }} /></bdi></Permalink>).reduce((prev, cur) => [prev, ', ', cur]);\n\n    const handlers = {\n      reply: this.handleReply,\n      open: this.handleClick,\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      toggleHidden: this.handleShowMore,\n    };\n\n    return (\n      <HotKeys handlers={handlers}>\n        <div className={classNames('conversation focusable muted', { 'conversation--unread': unread })} tabIndex='0'>\n          <div className='conversation__avatar' onClick={this.handleClick} role='presentation'>\n            <AvatarComposite accounts={accounts} size={48} />\n          </div>\n\n          <div className='conversation__content'>\n            <div className='conversation__content__info'>\n              <div className='conversation__content__relative-time'>\n                {unread && <span className='conversation__unread' />} <RelativeTimestamp timestamp={lastStatus.get('created_at')} />\n              </div>\n\n              <div className='conversation__content__names' onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n                <FormattedMessage id='conversation.with' defaultMessage='With {names}' values={{ names: <span>{names}</span> }} />\n              </div>\n            </div>\n\n            <StatusContent\n              status={lastStatus}\n              onClick={this.handleClick}\n              expanded={!lastStatus.get('hidden')}\n              onExpandedToggle={this.handleShowMore}\n              collapsable\n            />\n\n            {lastStatus.get('media_attachments').size > 0 && (\n              <AttachmentList\n                compact\n                media={lastStatus.get('media_attachments')}\n              />\n            )}\n\n            <div className='status__action-bar'>\n              <IconButton className='status__action-bar-button' title={intl.formatMessage(messages.reply)} icon='reply' onClick={this.handleReply} />\n\n              <div className='status__action-bar-dropdown'>\n                <DropdownMenuContainer\n                  scrollKey={scrollKey}\n                  status={lastStatus}\n                  items={menu}\n                  icon='ellipsis-h'\n                  size={18}\n                  direction='right'\n                  title={intl.formatMessage(messages.more)}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </HotKeys>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"status.more","defaultMessage":"More"},{"id":"conversation.open","defaultMessage":"View conversation"},{"id":"status.reply","defaultMessage":"Reply"},{"id":"conversation.mark_as_read","defaultMessage":"Mark as read"},{"id":"conversation.delete","defaultMessage":"Delete conversation"},{"id":"status.mute_conversation","defaultMessage":"Mute conversation"},{"id":"status.unmute_conversation","defaultMessage":"Unmute conversation"},{"id":"conversation.with","defaultMessage":"With {names}"}]}},"sourceType":"module"}