{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/search_results.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Hashtag from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\nimport { searchEnabled } from '../../../initial_state';\nimport LoadMore from 'mastodon/components/load_more';\nvar messages = defineMessages({\n  dismissSuggestion: {\n    \"id\": \"suggestions.dismiss\",\n    \"defaultMessage\": \"Dismiss suggestion\"\n  }\n});\n\nvar SearchResults = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(SearchResults, _ImmutablePureCompone);\n\n  function SearchResults() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleLoadMoreAccounts = function () {\n      return _this.props.expandSearch('accounts');\n    };\n\n    _this.handleLoadMoreStatuses = function () {\n      return _this.props.expandSearch('statuses');\n    };\n\n    _this.handleLoadMoreHashtags = function () {\n      return _this.props.expandSearch('hashtags');\n    };\n\n    return _this;\n  }\n\n  var _proto = SearchResults.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        results = _this$props.results,\n        suggestions = _this$props.suggestions,\n        dismissSuggestion = _this$props.dismissSuggestion,\n        searchTerm = _this$props.searchTerm;\n\n    if (searchTerm === '' && !suggestions.isEmpty()) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trends\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"trends__header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"user-plus\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"suggestions.header\",\n        defaultMessage: \"You might be interested in\\u2026\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }\n      })), suggestions && suggestions.map(function (suggestion) {\n        return /*#__PURE__*/React.createElement(AccountContainer, {\n          key: suggestion.get('account'),\n          id: suggestion.get('account'),\n          actionIcon: suggestion.get('source') === 'past_interaction' ? 'times' : null,\n          actionTitle: suggestion.get('source') === 'past_interaction' ? intl.formatMessage(messages.dismissSuggestion) : null,\n          onActionClick: dismissSuggestion,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }\n        });\n      })));\n    }\n\n    var accounts, statuses, hashtags;\n    var count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count += results.get('accounts').size;\n      accounts = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"users\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"search_results.accounts\",\n        defaultMessage: \"People\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 45\n        }\n      })), results.get('accounts').map(function (accountId) {\n        return /*#__PURE__*/React.createElement(AccountContainer, {\n          key: accountId,\n          id: accountId,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 53\n          }\n        });\n      }), results.get('accounts').size >= 5 && /*#__PURE__*/React.createElement(LoadMore, {\n        visible: true,\n        onClick: this.handleLoadMoreAccounts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 49\n        }\n      }));\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count += results.get('statuses').size;\n      statuses = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"quote-right\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"search_results.statuses\",\n        defaultMessage: \"Toots\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 51\n        }\n      })), results.get('statuses').map(function (statusId) {\n        return /*#__PURE__*/React.createElement(StatusContainer, {\n          key: statusId,\n          id: statusId,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 52\n          }\n        });\n      }), results.get('statuses').size >= 5 && /*#__PURE__*/React.createElement(LoadMore, {\n        visible: true,\n        onClick: this.handleLoadMoreStatuses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 49\n        }\n      }));\n    } else if (results.get('statuses') && results.get('statuses').size === 0 && !searchEnabled && !(searchTerm.startsWith('@') || searchTerm.startsWith('#') || searchTerm.includes(' '))) {\n      statuses = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"quote-right\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"search_results.statuses\",\n        defaultMessage: \"Toots\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 51\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results__info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"search_results.statuses_fts_disabled\",\n        defaultMessage: \"Searching toots by their content is not enabled on this Mastodon server.\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-results__section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"hashtag\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"search_results.hashtags\",\n        defaultMessage: \"Hashtags\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 47\n        }\n      })), results.get('hashtags').map(function (hashtag) {\n        return /*#__PURE__*/React.createElement(Hashtag, {\n          key: hashtag.get('name'),\n          hashtag: hashtag,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 51\n          }\n        });\n      }), results.get('hashtags').size >= 5 && /*#__PURE__*/React.createElement(LoadMore, {\n        visible: true,\n        onClick: this.handleLoadMoreHashtags,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-results\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-results__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"search\",\n      fixedWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"search_results.total\",\n      defaultMessage: \"{count, number} {count, plural, one {result} other {results}}\",\n      values: {\n        count\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })), accounts, statuses, hashtags);\n  };\n\n  return SearchResults;\n}(ImmutablePureComponent), _class2.propTypes = {\n  results: ImmutablePropTypes.map.isRequired,\n  suggestions: ImmutablePropTypes.list.isRequired,\n  fetchSuggestions: PropTypes.func.isRequired,\n  expandSearch: PropTypes.func.isRequired,\n  dismissSuggestion: PropTypes.func.isRequired,\n  searchTerm: PropTypes.string,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { SearchResults as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/search_results.js"],"names":["React","PropTypes","ImmutablePropTypes","FormattedMessage","defineMessages","injectIntl","AccountContainer","StatusContainer","ImmutablePureComponent","Hashtag","Icon","searchEnabled","LoadMore","messages","dismissSuggestion","SearchResults","handleLoadMoreAccounts","props","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","componentDidMount","searchTerm","fetchSuggestions","componentDidUpdate","render","intl","results","suggestions","isEmpty","map","suggestion","get","formatMessage","accounts","statuses","hashtags","count","size","accountId","statusId","startsWith","includes","hashtag","propTypes","isRequired","list","func","string","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Hashtag from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\nimport { searchEnabled } from '../../../initial_state';\nimport LoadMore from 'mastodon/components/load_more';\n\nconst messages = defineMessages({\n  dismissSuggestion: { id: 'suggestions.dismiss', defaultMessage: 'Dismiss suggestion' },\n});\n\nexport default @injectIntl\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    suggestions: ImmutablePropTypes.list.isRequired,\n    fetchSuggestions: PropTypes.func.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    dismissSuggestion: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { intl, results, suggestions, dismissSuggestion, searchTerm } = this.props;\n\n    if (searchTerm === '' && !suggestions.isEmpty()) {\n      return (\n        <div className='search-results'>\n          <div className='trends'>\n            <div className='trends__header'>\n              <Icon id='user-plus' fixedWidth />\n              <FormattedMessage id='suggestions.header' defaultMessage='You might be interested in…' />\n            </div>\n\n            {suggestions && suggestions.map(suggestion => (\n              <AccountContainer\n                key={suggestion.get('account')}\n                id={suggestion.get('account')}\n                actionIcon={suggestion.get('source') === 'past_interaction' ? 'times' : null}\n                actionTitle={suggestion.get('source') === 'past_interaction' ? intl.formatMessage(messages.dismissSuggestion) : null}\n                onActionClick={dismissSuggestion}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    let accounts, statuses, hashtags;\n    let count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count   += results.get('accounts').size;\n      accounts = (\n        <div className='search-results__section'>\n          <h5><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='People' /></h5>\n\n          {results.get('accounts').map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n\n          {results.get('accounts').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </div>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count   += results.get('statuses').size;\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Toots' /></h5>\n\n          {results.get('statuses').map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n\n          {results.get('statuses').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </div>\n      );\n    } else if(results.get('statuses') && results.get('statuses').size === 0 && !searchEnabled && !(searchTerm.startsWith('@') || searchTerm.startsWith('#') || searchTerm.includes(' '))) {\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Toots' /></h5>\n\n          <div className='search-results__info'>\n            <FormattedMessage id='search_results.statuses_fts_disabled' defaultMessage='Searching toots by their content is not enabled on this Mastodon server.' />\n          </div>\n        </div>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = (\n        <div className='search-results__section'>\n          <h5><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></h5>\n\n          {results.get('hashtags').map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n\n          {results.get('hashtags').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </div>\n      );\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='search_results.total' defaultMessage='{count, number} {count, plural, one {result} other {results}}' values={{ count }} />\n        </div>\n\n        {accounts}\n        {statuses}\n        {hashtags}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"suggestions.dismiss","defaultMessage":"Dismiss suggestion"},{"id":"suggestions.header","defaultMessage":"You might be interested in…"},{"id":"search_results.accounts","defaultMessage":"People"},{"id":"search_results.statuses","defaultMessage":"Toots"},{"id":"search_results.statuses_fts_disabled","defaultMessage":"Searching toots by their content is not enabled on this Mastodon server."},{"id":"search_results.hashtags","defaultMessage":"Hashtags"},{"id":"search_results.total","defaultMessage":"{count, number} {count, plural, one {result} other {results}}"}]}},"sourceType":"module"}