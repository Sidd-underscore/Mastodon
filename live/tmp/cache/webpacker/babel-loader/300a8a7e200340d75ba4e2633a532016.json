{"ast":null,"code":"import Immutable from 'immutable';\nimport { DROPDOWN_MENU_OPEN, DROPDOWN_MENU_CLOSE } from '../actions/dropdown_menu';\nvar initialState = Immutable.Map({\n  openId: null,\n  placement: null,\n  keyboard: false,\n  scroll_key: null\n});\nexport default function dropdownMenu(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case DROPDOWN_MENU_OPEN:\n      return state.merge({\n        openId: action.id,\n        placement: action.placement,\n        keyboard: action.keyboard,\n        scroll_key: action.scroll_key\n      });\n\n    case DROPDOWN_MENU_CLOSE:\n      return state.get('openId') === action.id ? state.set('openId', null).set('scroll_key', null) : state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/dropdown_menu.js"],"names":["Immutable","DROPDOWN_MENU_OPEN","DROPDOWN_MENU_CLOSE","initialState","Map","openId","placement","keyboard","scroll_key","dropdownMenu","state","action","type","merge","id","get","set"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,SACEC,kBADF,EAEEC,mBAFF,QAGO,0BAHP;AAKA,IAAMC,YAAY,GAAGH,SAAS,CAACI,GAAV,CAAc;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE,IAA3B;AAAiCC,EAAAA,QAAQ,EAAE,KAA3C;AAAkDC,EAAAA,UAAU,EAAE;AAA9D,CAAd,CAArB;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA4CC,MAA5C,EAAoD;AAAA,MAA9BD,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBP,YAAsB;AAAA;;AACjE,UAAQQ,MAAM,CAACC,IAAf;AACA,SAAKX,kBAAL;AACE,aAAOS,KAAK,CAACG,KAAN,CAAY;AAAER,QAAAA,MAAM,EAAEM,MAAM,CAACG,EAAjB;AAAqBR,QAAAA,SAAS,EAAEK,MAAM,CAACL,SAAvC;AAAkDC,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAAnE;AAA6EC,QAAAA,UAAU,EAAEG,MAAM,CAACH;AAAhG,OAAZ,CAAP;;AACF,SAAKN,mBAAL;AACE,aAAOQ,KAAK,CAACK,GAAN,CAAU,QAAV,MAAwBJ,MAAM,CAACG,EAA/B,GAAoCJ,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoB,IAApB,EAA0BA,GAA1B,CAA8B,YAA9B,EAA4C,IAA5C,CAApC,GAAwFN,KAA/F;;AACF;AACE,aAAOA,KAAP;AANF;AAQD","sourcesContent":["import Immutable from 'immutable';\nimport {\n  DROPDOWN_MENU_OPEN,\n  DROPDOWN_MENU_CLOSE,\n} from '../actions/dropdown_menu';\n\nconst initialState = Immutable.Map({ openId: null, placement: null, keyboard: false, scroll_key: null });\n\nexport default function dropdownMenu(state = initialState, action) {\n  switch (action.type) {\n  case DROPDOWN_MENU_OPEN:\n    return state.merge({ openId: action.id, placement: action.placement, keyboard: action.keyboard, scroll_key: action.scroll_key });\n  case DROPDOWN_MENU_CLOSE:\n    return state.get('openId') === action.id ? state.set('openId', null).set('scroll_key', null) : state;\n  default:\n    return state;\n  }\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}