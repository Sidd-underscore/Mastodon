{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/audio_modal.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Audio from 'mastodon/features/audio';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var statusId = _ref.statusId;\n  return {\n    accountStaticAvatar: state.getIn(['accounts', state.getIn(['statuses', statusId, 'account']), 'avatar_static'])\n  };\n};\n\nvar AudioModal = (_dec = connect(mapStateToProps), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(AudioModal, _ImmutablePureCompone);\n\n  function AudioModal() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = AudioModal.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        media = _this$props.media,\n        accountStaticAvatar = _this$props.accountStaticAvatar,\n        statusId = _this$props.statusId,\n        onClose = _this$props.onClose;\n    var options = this.props.options || {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal audio-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"audio-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Audio, {\n      src: media.get('url'),\n      alt: media.get('description'),\n      duration: media.getIn(['meta', 'original', 'duration'], 0),\n      height: 150,\n      poster: media.get('preview_url') || accountStaticAvatar,\n      backgroundColor: media.getIn(['meta', 'colors', 'background']),\n      foregroundColor: media.getIn(['meta', 'colors', 'foreground']),\n      accentColor: media.getIn(['meta', 'colors', 'accent']),\n      autoPlay: options.autoPlay,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"media-modal__overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, statusId && /*#__PURE__*/React.createElement(Footer, {\n      statusId: statusId,\n      withOpenButton: true,\n      onClose: onClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 24\n      }\n    })));\n  };\n\n  return AudioModal;\n}(ImmutablePureComponent), _class2.propTypes = {\n  media: ImmutablePropTypes.map.isRequired,\n  statusId: PropTypes.string.isRequired,\n  accountStaticAvatar: PropTypes.string.isRequired,\n  options: PropTypes.shape({\n    autoPlay: PropTypes.bool\n  }),\n  onClose: PropTypes.func.isRequired,\n  onChangeBackgroundColor: PropTypes.func.isRequired\n}, _temp)) || _class);\nexport { AudioModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/audio_modal.js"],"names":["React","ImmutablePropTypes","PropTypes","Audio","connect","ImmutablePureComponent","Footer","mapStateToProps","state","statusId","accountStaticAvatar","getIn","AudioModal","render","props","media","onClose","options","get","autoPlay","propTypes","map","isRequired","string","shape","bool","func","onChangeBackgroundColor"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Audio from 'mastodon/features/audio';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  accountStaticAvatar: state.getIn(['accounts', state.getIn(['statuses', statusId, 'account']), 'avatar_static']),\n});\n\nexport default @connect(mapStateToProps)\nclass AudioModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    statusId: PropTypes.string.isRequired,\n    accountStaticAvatar: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      autoPlay: PropTypes.bool,\n    }),\n    onClose: PropTypes.func.isRequired,\n    onChangeBackgroundColor: PropTypes.func.isRequired,\n  };\n\n  render () {\n    const { media, accountStaticAvatar, statusId, onClose } = this.props;\n    const options = this.props.options || {};\n\n    return (\n      <div className='modal-root__modal audio-modal'>\n        <div className='audio-modal__container'>\n          <Audio\n            src={media.get('url')}\n            alt={media.get('description')}\n            duration={media.getIn(['meta', 'original', 'duration'], 0)}\n            height={150}\n            poster={media.get('preview_url') || accountStaticAvatar}\n            backgroundColor={media.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={media.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={media.getIn(['meta', 'colors', 'accent'])}\n            autoPlay={options.autoPlay}\n          />\n        </div>\n\n        <div className='media-modal__overlay'>\n          {statusId && <Footer statusId={statusId} withOpenButton onClose={onClose} />}\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}