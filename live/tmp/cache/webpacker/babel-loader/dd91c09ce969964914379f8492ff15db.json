{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/upload.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nvar Upload = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Upload, _ImmutablePureCompone);\n\n  function Upload() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleUndoClick = function (e) {\n      e.stopPropagation();\n\n      _this.props.onUndo(_this.props.media.get('id'));\n    };\n\n    _this.handleFocalPointClick = function (e) {\n      e.stopPropagation();\n\n      _this.props.onOpenFocalPoint(_this.props.media.get('id'));\n    };\n\n    return _this;\n  }\n\n  var _proto = Upload.prototype;\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var media = this.props.media;\n    var focusX = media.getIn(['meta', 'focus', 'x']);\n    var focusY = media.getIn(['meta', 'focus', 'y']);\n    var x = (focusX / 2 + .5) * 100;\n    var y = (focusY / -2 + .5) * 100;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose-form__upload\",\n      tabIndex: \"0\",\n      role: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Motion, {\n      defaultStyle: {\n        scale: 0.8\n      },\n      style: {\n        scale: spring(1, {\n          stiffness: 180,\n          damping: 12\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, function (_ref) {\n      var scale = _ref.scale;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"compose-form__upload-thumbnail\",\n        style: {\n          transform: \"scale(\" + scale + \")\",\n          backgroundImage: \"url(\" + media.get('preview_url') + \")\",\n          backgroundPosition: x + \"% \" + y + \"%\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: classNames('compose-form__upload__actions', {\n          active: true\n        }),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"icon-button\",\n        onClick: _this2.handleUndoClick,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"times\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 80\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_form.undo\",\n        defaultMessage: \"Delete\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 100\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"icon-button\",\n        onClick: _this2.handleFocalPointClick,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"pencil\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 86\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"upload_form.edit\",\n        defaultMessage: \"Edit\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 107\n        }\n      }))));\n    }));\n  };\n\n  return Upload;\n}(ImmutablePureComponent);\n\nUpload.contextTypes = {\n  router: PropTypes.object\n};\nUpload.propTypes = {\n  media: ImmutablePropTypes.map.isRequired,\n  onUndo: PropTypes.func.isRequired,\n  onOpenFocalPoint: PropTypes.func.isRequired\n};\nexport { Upload as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/upload.js"],"names":["React","ImmutablePropTypes","PropTypes","Motion","spring","ImmutablePureComponent","FormattedMessage","classNames","Icon","Upload","handleUndoClick","e","stopPropagation","props","onUndo","media","get","handleFocalPointClick","onOpenFocalPoint","render","focusX","getIn","focusY","x","y","scale","stiffness","damping","transform","backgroundImage","backgroundPosition","active","contextTypes","router","object","propTypes","map","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nexport default class Upload extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    onUndo: PropTypes.func.isRequired,\n    onOpenFocalPoint: PropTypes.func.isRequired,\n  };\n\n  handleUndoClick = e => {\n    e.stopPropagation();\n    this.props.onUndo(this.props.media.get('id'));\n  }\n\n  handleFocalPointClick = e => {\n    e.stopPropagation();\n    this.props.onOpenFocalPoint(this.props.media.get('id'));\n  }\n\n  render () {\n    const { media } = this.props;\n    const focusX = media.getIn(['meta', 'focus', 'x']);\n    const focusY = media.getIn(['meta', 'focus', 'y']);\n    const x = ((focusX /  2) + .5) * 100;\n    const y = ((focusY / -2) + .5) * 100;\n\n    return (\n      <div className='compose-form__upload' tabIndex='0' role='button'>\n        <Motion defaultStyle={{ scale: 0.8 }} style={{ scale: spring(1, { stiffness: 180, damping: 12 }) }}>\n          {({ scale }) => (\n            <div className='compose-form__upload-thumbnail' style={{ transform: `scale(${scale})`, backgroundImage: `url(${media.get('preview_url')})`, backgroundPosition: `${x}% ${y}%` }}>\n              <div className={classNames('compose-form__upload__actions', { active: true })}>\n                <button className='icon-button' onClick={this.handleUndoClick}><Icon id='times' /> <FormattedMessage id='upload_form.undo' defaultMessage='Delete' /></button>\n                <button className='icon-button' onClick={this.handleFocalPointClick}><Icon id='pencil' /> <FormattedMessage id='upload_form.edit' defaultMessage='Edit' /></button>\n              </div>\n            </div>\n          )}\n        </Motion>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"upload_form.undo","defaultMessage":"Delete"},{"id":"upload_form.edit","defaultMessage":"Edit"}]}},"sourceType":"module"}