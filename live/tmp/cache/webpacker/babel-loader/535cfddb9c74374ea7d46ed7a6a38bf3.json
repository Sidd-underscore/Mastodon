{"ast":null,"code":"export var SET_BROWSER_SUPPORT = 'PUSH_NOTIFICATIONS_SET_BROWSER_SUPPORT';\nexport var SET_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_SET_SUBSCRIPTION';\nexport var CLEAR_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_CLEAR_SUBSCRIPTION';\nexport var SET_ALERTS = 'PUSH_NOTIFICATIONS_SET_ALERTS';\nexport function setBrowserSupport(value) {\n  return {\n    type: SET_BROWSER_SUPPORT,\n    value\n  };\n}\nexport function setSubscription(subscription) {\n  return {\n    type: SET_SUBSCRIPTION,\n    subscription\n  };\n}\nexport function clearSubscription() {\n  return {\n    type: CLEAR_SUBSCRIPTION\n  };\n}\nexport function setAlerts(path, value) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_ALERTS,\n      path,\n      value\n    });\n  };\n}","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/push_notifications/setter.js"],"names":["SET_BROWSER_SUPPORT","SET_SUBSCRIPTION","CLEAR_SUBSCRIPTION","SET_ALERTS","setBrowserSupport","value","type","setSubscription","subscription","clearSubscription","setAlerts","path","dispatch"],"mappings":"AAAA,OAAO,IAAMA,mBAAmB,GAAG,wCAA5B;AACP,OAAO,IAAMC,gBAAgB,GAAG,qCAAzB;AACP,OAAO,IAAMC,kBAAkB,GAAG,uCAA3B;AACP,OAAO,IAAMC,UAAU,GAAG,+BAAnB;AAEP,OAAO,SAASC,iBAAT,CAA4BC,KAA5B,EAAmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEN,mBADD;AAELK,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASE,eAAT,CAA0BC,YAA1B,EAAwC;AAC7C,SAAO;AACLF,IAAAA,IAAI,EAAEL,gBADD;AAELO,IAAAA;AAFK,GAAP;AAID;AAED,OAAO,SAASC,iBAAT,GAA8B;AACnC,SAAO;AACLH,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD;AAED,OAAO,SAASQ,SAAT,CAAoBC,IAApB,EAA0BN,KAA1B,EAAiC;AACtC,SAAO,UAAAO,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPN,MAAAA,IAAI,EAAEH,UADC;AAEPQ,MAAAA,IAFO;AAGPN,MAAAA;AAHO,KAAD,CAAR;AAKD,GAND;AAOD","sourcesContent":["export const SET_BROWSER_SUPPORT = 'PUSH_NOTIFICATIONS_SET_BROWSER_SUPPORT';\nexport const SET_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_SET_SUBSCRIPTION';\nexport const CLEAR_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_CLEAR_SUBSCRIPTION';\nexport const SET_ALERTS = 'PUSH_NOTIFICATIONS_SET_ALERTS';\n\nexport function setBrowserSupport (value) {\n  return {\n    type: SET_BROWSER_SUPPORT,\n    value,\n  };\n}\n\nexport function setSubscription (subscription) {\n  return {\n    type: SET_SUBSCRIPTION,\n    subscription,\n  };\n}\n\nexport function clearSubscription () {\n  return {\n    type: CLEAR_SUBSCRIPTION,\n  };\n}\n\nexport function setAlerts (path, value) {\n  return dispatch => {\n    dispatch({\n      type: SET_ALERTS,\n      path,\n      value,\n    });\n  };\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}