{"ast":null,"code":"import { Map as ImmutableMap } from 'immutable';\nimport { NOTIFICATIONS_UPDATE } from 'mastodon/actions/notifications';\nimport { APP_FOCUS, APP_UNFOCUS } from 'mastodon/actions/app';\nvar initialState = ImmutableMap({\n  focused: true,\n  unread: 0\n});\nexport default function missed_updates(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case APP_FOCUS:\n      return state.set('focused', true).set('unread', 0);\n\n    case APP_UNFOCUS:\n      return state.set('focused', false);\n\n    case NOTIFICATIONS_UPDATE:\n      return state.get('focused') ? state : state.update('unread', function (x) {\n        return x + 1;\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/missed_updates.js"],"names":["Map","ImmutableMap","NOTIFICATIONS_UPDATE","APP_FOCUS","APP_UNFOCUS","initialState","focused","unread","missed_updates","state","action","type","set","get","update","x"],"mappings":"AAAA,SAASA,GAAG,IAAIC,YAAhB,QAAoC,WAApC;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,sBAAvC;AAEA,IAAMC,YAAY,GAAGJ,YAAY,CAAC;AAChCK,EAAAA,OAAO,EAAE,IADuB;AAEhCC,EAAAA,MAAM,EAAE;AAFwB,CAAD,CAAjC;AAKA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA8CC,MAA9C,EAAsD;AAAA,MAA9BD,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBJ,YAAsB;AAAA;;AACnE,UAAOK,MAAM,CAACC,IAAd;AACA,SAAKR,SAAL;AACE,aAAOM,KAAK,CAACG,GAAN,CAAU,SAAV,EAAqB,IAArB,EAA2BA,GAA3B,CAA+B,QAA/B,EAAyC,CAAzC,CAAP;;AACF,SAAKR,WAAL;AACE,aAAOK,KAAK,CAACG,GAAN,CAAU,SAAV,EAAqB,KAArB,CAAP;;AACF,SAAKV,oBAAL;AACE,aAAOO,KAAK,CAACI,GAAN,CAAU,SAAV,IAAuBJ,KAAvB,GAA+BA,KAAK,CAACK,MAAN,CAAa,QAAb,EAAuB,UAAAC,CAAC;AAAA,eAAIA,CAAC,GAAG,CAAR;AAAA,OAAxB,CAAtC;;AACF;AACE,aAAON,KAAP;AARF;AAUD;AAAA","sourcesContent":["import { Map as ImmutableMap } from 'immutable';\nimport { NOTIFICATIONS_UPDATE } from 'mastodon/actions/notifications';\nimport { APP_FOCUS, APP_UNFOCUS } from 'mastodon/actions/app';\n\nconst initialState = ImmutableMap({\n  focused: true,\n  unread: 0,\n});\n\nexport default function missed_updates(state = initialState, action) {\n  switch(action.type) {\n  case APP_FOCUS:\n    return state.set('focused', true).set('unread', 0);\n  case APP_UNFOCUS:\n    return state.set('focused', false);\n  case NOTIFICATIONS_UPDATE:\n    return state.get('focused') ? state : state.update('unread', x => x + 1);\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}