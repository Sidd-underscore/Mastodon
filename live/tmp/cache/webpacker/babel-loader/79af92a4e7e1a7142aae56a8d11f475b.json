{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/column_header.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\nvar messages = defineMessages({\n  show: {\n    \"id\": \"column_header.show_settings\",\n    \"defaultMessage\": \"Show settings\"\n  },\n  hide: {\n    \"id\": \"column_header.hide_settings\",\n    \"defaultMessage\": \"Hide settings\"\n  },\n  moveLeft: {\n    \"id\": \"column_header.moveLeft_settings\",\n    \"defaultMessage\": \"Move column to the left\"\n  },\n  moveRight: {\n    \"id\": \"column_header.moveRight_settings\",\n    \"defaultMessage\": \"Move column to the right\"\n  }\n});\n\nvar ColumnHeader = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(ColumnHeader, _React$PureComponent);\n\n  function ColumnHeader() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      collapsed: true,\n      animating: false\n    };\n\n    _this.historyBack = function () {\n      if (window.history && window.history.length === 1) {\n        _this.context.router.history.push('/');\n      } else {\n        _this.context.router.history.goBack();\n      }\n    };\n\n    _this.handleToggleClick = function (e) {\n      e.stopPropagation();\n\n      _this.setState({\n        collapsed: !_this.state.collapsed,\n        animating: true\n      });\n    };\n\n    _this.handleTitleClick = function () {\n      _this.props.onClick();\n    };\n\n    _this.handleMoveLeft = function () {\n      _this.props.onMove(-1);\n    };\n\n    _this.handleMoveRight = function () {\n      _this.props.onMove(1);\n    };\n\n    _this.handleBackClick = function () {\n      _this.historyBack();\n    };\n\n    _this.handleTransitionEnd = function () {\n      _this.setState({\n        animating: false\n      });\n    };\n\n    _this.handlePin = function () {\n      if (!_this.props.pinned) {\n        _this.context.router.history.replace('/');\n      }\n\n      _this.props.onPin();\n    };\n\n    return _this;\n  }\n\n  var _proto = ColumnHeader.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        title = _this$props.title,\n        icon = _this$props.icon,\n        active = _this$props.active,\n        children = _this$props.children,\n        pinned = _this$props.pinned,\n        multiColumn = _this$props.multiColumn,\n        extraButton = _this$props.extraButton,\n        showBackButton = _this$props.showBackButton,\n        formatMessage = _this$props.intl.formatMessage,\n        placeholder = _this$props.placeholder,\n        appendContent = _this$props.appendContent,\n        collapseIssues = _this$props.collapseIssues;\n    var _this$state = this.state,\n        collapsed = _this$state.collapsed,\n        animating = _this$state.animating;\n    var wrapperClassName = classNames('column-header__wrapper', {\n      'active': active\n    });\n    var buttonClassName = classNames('column-header', {\n      'active': active\n    });\n    var collapsibleClassName = classNames('column-header__collapsible', {\n      'collapsed': collapsed,\n      'animating': animating\n    });\n    var collapsibleButtonClassName = classNames('column-header__button', {\n      'active': !collapsed\n    });\n    var extraContent, pinButton, moveButtons, backButton, collapseButton;\n\n    if (children) {\n      extraContent = /*#__PURE__*/React.createElement(\"div\", {\n        key: \"extra-content\",\n        className: \"column-header__collapsible__extra\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, children);\n    }\n\n    if (multiColumn && pinned) {\n      pinButton = /*#__PURE__*/React.createElement(\"button\", {\n        key: \"pin-button\",\n        className: \"text-btn column-header__setting-btn\",\n        onClick: this.handlePin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 117\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"column_header.unpin\",\n        defaultMessage: \"Unpin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 137\n        }\n      }));\n      moveButtons = /*#__PURE__*/React.createElement(\"div\", {\n        key: \"move-buttons\",\n        className: \"column-header__setting-arrows\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        title: formatMessage(messages.moveLeft),\n        \"aria-label\": formatMessage(messages.moveLeft),\n        className: \"text-btn column-header__setting-btn\",\n        onClick: this.handleMoveLeft,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"chevron-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 184\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        title: formatMessage(messages.moveRight),\n        \"aria-label\": formatMessage(messages.moveRight),\n        className: \"text-btn column-header__setting-btn\",\n        onClick: this.handleMoveRight,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"chevron-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 187\n        }\n      })));\n    } else if (multiColumn && this.props.onPin) {\n      pinButton = /*#__PURE__*/React.createElement(\"button\", {\n        key: \"pin-button\",\n        className: \"text-btn column-header__setting-btn\",\n        onClick: this.handlePin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 117\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"column_header.pin\",\n        defaultMessage: \"Pin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 136\n        }\n      }));\n    }\n\n    if (!pinned && (multiColumn || showBackButton)) {\n      backButton = /*#__PURE__*/React.createElement(\"button\", {\n        onClick: this.handleBackClick,\n        className: \"column-header__back-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"chevron-left\",\n        className: \"column-back-button__icon\",\n        fixedWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"column_back_button.label\",\n        defaultMessage: \"Back\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    var collapsedContent = [extraContent];\n\n    if (multiColumn) {\n      collapsedContent.push(moveButtons);\n      collapsedContent.push(pinButton);\n    }\n\n    if (children || multiColumn && this.props.onPin) {\n      collapseButton = /*#__PURE__*/React.createElement(\"button\", {\n        className: collapsibleButtonClassName,\n        title: formatMessage(collapsed ? messages.show : messages.hide),\n        \"aria-label\": formatMessage(collapsed ? messages.show : messages.hide),\n        \"aria-pressed\": collapsed ? 'false' : 'true',\n        onClick: this.handleToggleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-with-badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"sliders\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }\n      }), collapseIssues && /*#__PURE__*/React.createElement(\"i\", {\n        className: \"icon-with-badge__issue-badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 32\n        }\n      })));\n    }\n\n    var hasTitle = icon && title;\n    var component = /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: buttonClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }\n    }, hasTitle && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleTitleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: icon,\n      fixedWidth: true,\n      className: \"column-header__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }\n    }), title), !hasTitle && backButton, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-header__buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }\n    }, hasTitle && backButton, extraButton, collapseButton)), /*#__PURE__*/React.createElement(\"div\", {\n      className: collapsibleClassName,\n      tabIndex: collapsed ? -1 : null,\n      onTransitionEnd: this.handleTransitionEnd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column-header__collapsible-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, (!collapsed || animating) && collapsedContent)), appendContent);\n\n    if (multiColumn || placeholder) {\n      return component;\n    } else {\n      // The portal container and the component may be rendered to the DOM in\n      // the same React render pass, so the container might not be available at\n      // the time `render()` is called.\n      var container = document.getElementById('tabs-bar__portal');\n\n      if (container === null) {\n        // The container wasn't available, force a re-render so that the\n        // component can eventually be inserted in the container and not scroll\n        // with the rest of the area.\n        this.forceUpdate();\n        return component;\n      } else {\n        return /*#__PURE__*/createPortal(component, container);\n      }\n    }\n  };\n\n  return ColumnHeader;\n}(React.PureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  intl: PropTypes.object.isRequired,\n  title: PropTypes.node,\n  icon: PropTypes.string,\n  active: PropTypes.bool,\n  multiColumn: PropTypes.bool,\n  extraButton: PropTypes.node,\n  showBackButton: PropTypes.bool,\n  children: PropTypes.node,\n  pinned: PropTypes.bool,\n  placeholder: PropTypes.bool,\n  onPin: PropTypes.func,\n  onMove: PropTypes.func,\n  onClick: PropTypes.func,\n  appendContent: PropTypes.node,\n  collapseIssues: PropTypes.bool\n}, _temp)) || _class;\n\nexport { ColumnHeader as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/column_header.js"],"names":["React","PropTypes","createPortal","classNames","FormattedMessage","injectIntl","defineMessages","Icon","messages","show","hide","moveLeft","moveRight","ColumnHeader","state","collapsed","animating","historyBack","window","history","length","context","router","push","goBack","handleToggleClick","e","stopPropagation","setState","handleTitleClick","props","onClick","handleMoveLeft","onMove","handleMoveRight","handleBackClick","handleTransitionEnd","handlePin","pinned","replace","onPin","render","title","icon","active","children","multiColumn","extraButton","showBackButton","formatMessage","intl","placeholder","appendContent","collapseIssues","wrapperClassName","buttonClassName","collapsibleClassName","collapsibleButtonClassName","extraContent","pinButton","moveButtons","backButton","collapseButton","collapsedContent","hasTitle","component","container","document","getElementById","forceUpdate","PureComponent","contextTypes","object","propTypes","isRequired","node","string","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createPortal } from 'react-dom';\nimport classNames from 'classnames';\nimport { FormattedMessage, injectIntl, defineMessages } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  show: { id: 'column_header.show_settings', defaultMessage: 'Show settings' },\n  hide: { id: 'column_header.hide_settings', defaultMessage: 'Hide settings' },\n  moveLeft: { id: 'column_header.moveLeft_settings', defaultMessage: 'Move column to the left' },\n  moveRight: { id: 'column_header.moveRight_settings', defaultMessage: 'Move column to the right' },\n});\n\nexport default @injectIntl\nclass ColumnHeader extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    title: PropTypes.node,\n    icon: PropTypes.string,\n    active: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    extraButton: PropTypes.node,\n    showBackButton: PropTypes.bool,\n    children: PropTypes.node,\n    pinned: PropTypes.bool,\n    placeholder: PropTypes.bool,\n    onPin: PropTypes.func,\n    onMove: PropTypes.func,\n    onClick: PropTypes.func,\n    appendContent: PropTypes.node,\n    collapseIssues: PropTypes.bool,\n  };\n\n  state = {\n    collapsed: true,\n    animating: false,\n  };\n\n  historyBack = () => {\n    if (window.history && window.history.length === 1) {\n      this.context.router.history.push('/');\n    } else {\n      this.context.router.history.goBack();\n    }\n  }\n\n  handleToggleClick = (e) => {\n    e.stopPropagation();\n    this.setState({ collapsed: !this.state.collapsed, animating: true });\n  }\n\n  handleTitleClick = () => {\n    this.props.onClick();\n  }\n\n  handleMoveLeft = () => {\n    this.props.onMove(-1);\n  }\n\n  handleMoveRight = () => {\n    this.props.onMove(1);\n  }\n\n  handleBackClick = () => {\n    this.historyBack();\n  }\n\n  handleTransitionEnd = () => {\n    this.setState({ animating: false });\n  }\n\n  handlePin = () => {\n    if (!this.props.pinned) {\n      this.context.router.history.replace('/');\n    }\n\n    this.props.onPin();\n  }\n\n  render () {\n    const { title, icon, active, children, pinned, multiColumn, extraButton, showBackButton, intl: { formatMessage }, placeholder, appendContent, collapseIssues } = this.props;\n    const { collapsed, animating } = this.state;\n\n    const wrapperClassName = classNames('column-header__wrapper', {\n      'active': active,\n    });\n\n    const buttonClassName = classNames('column-header', {\n      'active': active,\n    });\n\n    const collapsibleClassName = classNames('column-header__collapsible', {\n      'collapsed': collapsed,\n      'animating': animating,\n    });\n\n    const collapsibleButtonClassName = classNames('column-header__button', {\n      'active': !collapsed,\n    });\n\n    let extraContent, pinButton, moveButtons, backButton, collapseButton;\n\n    if (children) {\n      extraContent = (\n        <div key='extra-content' className='column-header__collapsible__extra'>\n          {children}\n        </div>\n      );\n    }\n\n    if (multiColumn && pinned) {\n      pinButton = <button key='pin-button' className='text-btn column-header__setting-btn' onClick={this.handlePin}><Icon id='times' /> <FormattedMessage id='column_header.unpin' defaultMessage='Unpin' /></button>;\n\n      moveButtons = (\n        <div key='move-buttons' className='column-header__setting-arrows'>\n          <button title={formatMessage(messages.moveLeft)} aria-label={formatMessage(messages.moveLeft)} className='text-btn column-header__setting-btn' onClick={this.handleMoveLeft}><Icon id='chevron-left' /></button>\n          <button title={formatMessage(messages.moveRight)} aria-label={formatMessage(messages.moveRight)} className='text-btn column-header__setting-btn' onClick={this.handleMoveRight}><Icon id='chevron-right' /></button>\n        </div>\n      );\n    } else if (multiColumn && this.props.onPin) {\n      pinButton = <button key='pin-button' className='text-btn column-header__setting-btn' onClick={this.handlePin}><Icon id='plus' /> <FormattedMessage id='column_header.pin' defaultMessage='Pin' /></button>;\n    }\n\n    if (!pinned && (multiColumn || showBackButton)) {\n      backButton = (\n        <button onClick={this.handleBackClick} className='column-header__back-button'>\n          <Icon id='chevron-left' className='column-back-button__icon' fixedWidth />\n          <FormattedMessage id='column_back_button.label' defaultMessage='Back' />\n        </button>\n      );\n    }\n\n    const collapsedContent = [\n      extraContent,\n    ];\n\n    if (multiColumn) {\n      collapsedContent.push(moveButtons);\n      collapsedContent.push(pinButton);\n    }\n\n    if (children || (multiColumn && this.props.onPin)) {\n      collapseButton = (\n        <button\n          className={collapsibleButtonClassName}\n          title={formatMessage(collapsed ? messages.show : messages.hide)}\n          aria-label={formatMessage(collapsed ? messages.show : messages.hide)}\n          aria-pressed={collapsed ? 'false' : 'true'}\n          onClick={this.handleToggleClick}\n        >\n          <i className='icon-with-badge'>\n            <Icon id='sliders' />\n            {collapseIssues && <i className='icon-with-badge__issue-badge' />}\n          </i>\n        </button>\n      );\n    }\n\n    const hasTitle = icon && title;\n\n    const component = (\n      <div className={wrapperClassName}>\n        <h1 className={buttonClassName}>\n          {hasTitle && (\n            <button onClick={this.handleTitleClick}>\n              <Icon id={icon} fixedWidth className='column-header__icon' />\n              {title}\n            </button>\n          )}\n\n          {!hasTitle && backButton}\n\n          <div className='column-header__buttons'>\n            {hasTitle && backButton}\n            {extraButton}\n            {collapseButton}\n          </div>\n        </h1>\n\n        <div className={collapsibleClassName} tabIndex={collapsed ? -1 : null} onTransitionEnd={this.handleTransitionEnd}>\n          <div className='column-header__collapsible-inner'>\n            {(!collapsed || animating) && collapsedContent}\n          </div>\n        </div>\n\n        {appendContent}\n      </div>\n    );\n\n    if (multiColumn || placeholder) {\n      return component;\n    } else {\n      // The portal container and the component may be rendered to the DOM in\n      // the same React render pass, so the container might not be available at\n      // the time `render()` is called.\n      const container = document.getElementById('tabs-bar__portal');\n      if (container === null) {\n        // The container wasn't available, force a re-render so that the\n        // component can eventually be inserted in the container and not scroll\n        // with the rest of the area.\n        this.forceUpdate();\n        return component;\n      } else {\n        return createPortal(component, container);\n      }\n    }\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column_header.show_settings","defaultMessage":"Show settings"},{"id":"column_header.hide_settings","defaultMessage":"Hide settings"},{"id":"column_header.moveLeft_settings","defaultMessage":"Move column to the left"},{"id":"column_header.moveRight_settings","defaultMessage":"Move column to the right"},{"id":"column_header.unpin","defaultMessage":"Unpin"},{"id":"column_header.pin","defaultMessage":"Pin"},{"id":"column_back_button.label","defaultMessage":"Back"}]}},"sourceType":"module"}