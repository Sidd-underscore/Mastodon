{"ast":null,"code":"import { Map as ImmutableMap, fromJS } from 'immutable';\nimport { IDENTITY_PROOFS_ACCOUNT_FETCH_REQUEST, IDENTITY_PROOFS_ACCOUNT_FETCH_SUCCESS, IDENTITY_PROOFS_ACCOUNT_FETCH_FAIL } from '../actions/identity_proofs';\nvar initialState = ImmutableMap();\nexport default function identityProofsReducer(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case IDENTITY_PROOFS_ACCOUNT_FETCH_REQUEST:\n      return state.set('isLoading', true);\n\n    case IDENTITY_PROOFS_ACCOUNT_FETCH_FAIL:\n      return state.set('isLoading', false);\n\n    case IDENTITY_PROOFS_ACCOUNT_FETCH_SUCCESS:\n      return state.update(function (identity_proofs) {\n        return identity_proofs.withMutations(function (map) {\n          map.set('isLoading', false);\n          map.set('loaded', true);\n          map.set(action.accountId, fromJS(action.identity_proofs));\n        });\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/identity_proofs.js"],"names":["Map","ImmutableMap","fromJS","IDENTITY_PROOFS_ACCOUNT_FETCH_REQUEST","IDENTITY_PROOFS_ACCOUNT_FETCH_SUCCESS","IDENTITY_PROOFS_ACCOUNT_FETCH_FAIL","initialState","identityProofsReducer","state","action","type","set","update","identity_proofs","withMutations","map","accountId"],"mappings":"AAAA,SAASA,GAAG,IAAIC,YAAhB,EAA8BC,MAA9B,QAA4C,WAA5C;AACA,SACEC,qCADF,EAEEC,qCAFF,EAGEC,kCAHF,QAIO,4BAJP;AAMA,IAAMC,YAAY,GAAGL,YAAY,EAAjC;AAEA,eAAe,SAASM,qBAAT,CAA+BC,KAA/B,EAAqDC,MAArD,EAA6D;AAAA,MAA9BD,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBF,YAAsB;AAAA;;AAC1E,UAAOG,MAAM,CAACC,IAAd;AACA,SAAKP,qCAAL;AACE,aAAOK,KAAK,CAACG,GAAN,CAAU,WAAV,EAAuB,IAAvB,CAAP;;AACF,SAAKN,kCAAL;AACE,aAAOG,KAAK,CAACG,GAAN,CAAU,WAAV,EAAuB,KAAvB,CAAP;;AACF,SAAKP,qCAAL;AACE,aAAOI,KAAK,CAACI,MAAN,CAAa,UAAAC,eAAe;AAAA,eAAIA,eAAe,CAACC,aAAhB,CAA8B,UAAAC,GAAG,EAAI;AAC1EA,UAAAA,GAAG,CAACJ,GAAJ,CAAQ,WAAR,EAAqB,KAArB;AACAI,UAAAA,GAAG,CAACJ,GAAJ,CAAQ,QAAR,EAAkB,IAAlB;AACAI,UAAAA,GAAG,CAACJ,GAAJ,CAAQF,MAAM,CAACO,SAAf,EAA0Bd,MAAM,CAACO,MAAM,CAACI,eAAR,CAAhC;AACD,SAJsC,CAAJ;AAAA,OAA5B,CAAP;;AAKF;AACE,aAAOL,KAAP;AAZF;AAcD;AAAA","sourcesContent":["import { Map as ImmutableMap, fromJS } from 'immutable';\nimport {\n  IDENTITY_PROOFS_ACCOUNT_FETCH_REQUEST,\n  IDENTITY_PROOFS_ACCOUNT_FETCH_SUCCESS,\n  IDENTITY_PROOFS_ACCOUNT_FETCH_FAIL,\n} from '../actions/identity_proofs';\n\nconst initialState = ImmutableMap();\n\nexport default function identityProofsReducer(state = initialState, action) {\n  switch(action.type) {\n  case IDENTITY_PROOFS_ACCOUNT_FETCH_REQUEST:\n    return state.set('isLoading', true);\n  case IDENTITY_PROOFS_ACCOUNT_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case IDENTITY_PROOFS_ACCOUNT_FETCH_SUCCESS:\n    return state.update(identity_proofs => identity_proofs.withMutations(map => {\n      map.set('isLoading', false);\n      map.set('loaded', true);\n      map.set(action.accountId, fromJS(action.identity_proofs));\n    }));\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}