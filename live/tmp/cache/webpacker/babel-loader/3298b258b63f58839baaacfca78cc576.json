{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/bundle_modal_error.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport IconButton from '../../../components/icon_button';\nvar messages = defineMessages({\n  error: {\n    \"id\": \"bundle_modal_error.message\",\n    \"defaultMessage\": \"Something went wrong while loading this component.\"\n  },\n  retry: {\n    \"id\": \"bundle_modal_error.retry\",\n    \"defaultMessage\": \"Try again\"\n  },\n  close: {\n    \"id\": \"bundle_modal_error.close\",\n    \"defaultMessage\": \"Close\"\n  }\n});\n\nvar BundleModalError = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(BundleModalError, _React$PureComponent);\n\n  function BundleModalError() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleRetry = function () {\n      _this.props.onRetry();\n    };\n\n    return _this;\n  }\n\n  var _proto = BundleModalError.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        onClose = _this$props.onClose,\n        formatMessage = _this$props.intl.formatMessage; // Keep the markup in sync with <ModalLoading />\n    // (make sure they have the same dimensions)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal error-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-modal__body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      title: formatMessage(messages.retry),\n      icon: \"refresh\",\n      onClick: this.handleRetry,\n      size: 64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }), formatMessage(messages.error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-modal__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: onClose,\n      className: \"error-modal__nav onboarding-modal__skip\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, formatMessage(messages.close)))));\n  };\n\n  return BundleModalError;\n}(React.PureComponent);\n\nBundleModalError.propTypes = {\n  onRetry: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n};\nexport default injectIntl(BundleModalError);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/bundle_modal_error.js"],"names":["React","PropTypes","defineMessages","injectIntl","IconButton","messages","error","retry","close","BundleModalError","handleRetry","props","onRetry","render","onClose","formatMessage","intl","PureComponent","propTypes","func","isRequired","object"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AAEA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,KAAK;AAAA;AAAA;AAAA,GADyB;AAE9BC,EAAAA,KAAK;AAAA;AAAA;AAAA,GAFyB;AAG9BC,EAAAA,KAAK;AAAA;AAAA;AAAA;AAHyB,CAAD,CAA/B;;IAMMC,gB;;;;;;;;;;;;UAQJC,W,GAAc,YAAM;AAClB,YAAKC,KAAL,CAAWC,OAAX;AACD,K;;;;;;;SAEDC,M,GAAA,kBAAU;AACR,sBAA6C,KAAKF,KAAlD;AAAA,QAAQG,OAAR,eAAQA,OAAR;AAAA,QAAyBC,aAAzB,eAAiBC,IAAjB,CAAyBD,aAAzB,CADQ,CAGR;AACA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEA,aAAa,CAACV,QAAQ,CAACE,KAAV,CAAhC;AAAkD,MAAA,IAAI,EAAC,SAAvD;AAAiE,MAAA,OAAO,EAAE,KAAKG,WAA/E;AAA4F,MAAA,IAAI,EAAE,EAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEGK,aAAa,CAACV,QAAQ,CAACC,KAAV,CAFhB,CADF,eAME;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,OAAO,EAAEQ,OADX;AAEE,MAAA,SAAS,EAAC,yCAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGC,aAAa,CAACV,QAAQ,CAACG,KAAV,CAJhB,CADF,CADF,CANF,CADF;AAmBD,G;;;EApC4BR,KAAK,CAACiB,a;;AAA/BR,gB,CAEGS,S,GAAY;AACjBN,EAAAA,OAAO,EAAEX,SAAS,CAACkB,IAAV,CAAeC,UADP;AAEjBN,EAAAA,OAAO,EAAEb,SAAS,CAACkB,IAAV,CAAeC,UAFP;AAGjBJ,EAAAA,IAAI,EAAEf,SAAS,CAACoB,MAAV,CAAiBD;AAHN,C;AAsCrB,eAAejB,UAAU,CAACM,gBAAD,CAAzB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport IconButton from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  error: { id: 'bundle_modal_error.message', defaultMessage: 'Something went wrong while loading this component.' },\n  retry: { id: 'bundle_modal_error.retry', defaultMessage: 'Try again' },\n  close: { id: 'bundle_modal_error.close', defaultMessage: 'Close' },\n});\n\nclass BundleModalError extends React.PureComponent {\n\n  static propTypes = {\n    onRetry: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  }\n\n  handleRetry = () => {\n    this.props.onRetry();\n  }\n\n  render () {\n    const { onClose, intl: { formatMessage } } = this.props;\n\n    // Keep the markup in sync with <ModalLoading />\n    // (make sure they have the same dimensions)\n    return (\n      <div className='modal-root__modal error-modal'>\n        <div className='error-modal__body'>\n          <IconButton title={formatMessage(messages.retry)} icon='refresh' onClick={this.handleRetry} size={64} />\n          {formatMessage(messages.error)}\n        </div>\n\n        <div className='error-modal__footer'>\n          <div>\n            <button\n              onClick={onClose}\n              className='error-modal__nav onboarding-modal__skip'\n            >\n              {formatMessage(messages.close)}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(BundleModalError);\n"]},"metadata":{"react-intl":{"messages":[{"id":"bundle_modal_error.message","defaultMessage":"Something went wrong while loading this component."},{"id":"bundle_modal_error.retry","defaultMessage":"Try again"},{"id":"bundle_modal_error.close","defaultMessage":"Close"}]}},"sourceType":"module"}