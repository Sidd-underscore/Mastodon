{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/attachment_list.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Icon from 'mastodon/components/icon';\n\nvar filename = function filename(url) {\n  return url.split('/').pop().split('#')[0].split('?')[0];\n};\n\nvar AttachmentList = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(AttachmentList, _ImmutablePureCompone);\n\n  function AttachmentList() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = AttachmentList.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        media = _this$props.media,\n        compact = _this$props.compact;\n\n    if (compact) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attachment-list compact\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"attachment-list__list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }\n      }, media.map(function (attachment) {\n        var displayUrl = attachment.get('remote_url') || attachment.get('url');\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: attachment.get('id'),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: displayUrl,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          id: \"link\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 82\n          }\n        }), \" \", filename(displayUrl)));\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attachment-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"attachment-list__icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"attachment-list__list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, media.map(function (attachment) {\n      var displayUrl = attachment.get('remote_url') || attachment.get('url');\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: attachment.get('id'),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: displayUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, filename(displayUrl)));\n    })));\n  };\n\n  return AttachmentList;\n}(ImmutablePureComponent);\n\nAttachmentList.propTypes = {\n  media: ImmutablePropTypes.list.isRequired,\n  compact: PropTypes.bool\n};\nexport { AttachmentList as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/attachment_list.js"],"names":["React","ImmutablePropTypes","PropTypes","ImmutablePureComponent","Icon","filename","url","split","pop","AttachmentList","render","props","media","compact","map","attachment","displayUrl","get","propTypes","list","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG;AAAA,SAAIA,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,GAAf,GAAqBD,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,EAAmCA,KAAnC,CAAyC,GAAzC,EAA8C,CAA9C,CAAJ;AAAA,CAApB;;IAEqBE,c;;;;;;;;;SAOnBC,M,GAAA,kBAAU;AAAA;;AACR,sBAA2B,KAAKC,KAAhC;AAAA,QAAQC,KAAR,eAAQA,KAAR;AAAA,QAAeC,OAAf,eAAeA,OAAf;;AAEA,QAAIA,OAAJ,EAAa;AACX,0BACE;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,KAAK,CAACE,GAAN,CAAU,UAAAC,UAAU,EAAI;AACvB,YAAMC,UAAU,GAAGD,UAAU,CAACE,GAAX,CAAe,YAAf,KAAgCF,UAAU,CAACE,GAAX,CAAe,KAAf,CAAnD;AAEA,4BACE;AAAI,UAAA,GAAG,EAAEF,UAAU,CAACE,GAAX,CAAe,IAAf,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAG,UAAA,IAAI,EAAED,UAAT;AAAqB,UAAA,MAAM,EAAC,QAA5B;AAAqC,UAAA,GAAG,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA+D,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA/D,OAAmFX,QAAQ,CAACW,UAAD,CAA3F,CADF,CADF;AAKD,OARA,CADH,CADF,CADF;AAeD;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,KAAK,CAACE,GAAN,CAAU,UAAAC,UAAU,EAAI;AACvB,UAAMC,UAAU,GAAGD,UAAU,CAACE,GAAX,CAAe,YAAf,KAAgCF,UAAU,CAACE,GAAX,CAAe,KAAf,CAAnD;AAEA,0BACE;AAAI,QAAA,GAAG,EAAEF,UAAU,CAACE,GAAX,CAAe,IAAf,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAG,QAAA,IAAI,EAAED,UAAT;AAAqB,QAAA,MAAM,EAAC,QAA5B;AAAqC,QAAA,GAAG,EAAC,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgEX,QAAQ,CAACW,UAAD,CAAxE,CADF,CADF;AAKD,KARA,CADH,CALF,CADF;AAmBD,G;;;EA/CyCb,sB;;AAAvBM,c,CAEZS,S,GAAY;AACjBN,EAAAA,KAAK,EAAEX,kBAAkB,CAACkB,IAAnB,CAAwBC,UADd;AAEjBP,EAAAA,OAAO,EAAEX,SAAS,CAACmB;AAFF,C;SAFAZ,c","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Icon from 'mastodon/components/icon';\n\nconst filename = url => url.split('/').pop().split('#')[0].split('?')[0];\n\nexport default class AttachmentList extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.list.isRequired,\n    compact: PropTypes.bool,\n  };\n\n  render () {\n    const { media, compact } = this.props;\n\n    if (compact) {\n      return (\n        <div className='attachment-list compact'>\n          <ul className='attachment-list__list'>\n            {media.map(attachment => {\n              const displayUrl = attachment.get('remote_url') || attachment.get('url');\n\n              return (\n                <li key={attachment.get('id')}>\n                  <a href={displayUrl} target='_blank' rel='noopener noreferrer'><Icon id='link' /> {filename(displayUrl)}</a>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      );\n    }\n\n    return (\n      <div className='attachment-list'>\n        <div className='attachment-list__icon'>\n          <Icon id='link' />\n        </div>\n\n        <ul className='attachment-list__list'>\n          {media.map(attachment => {\n            const displayUrl = attachment.get('remote_url') || attachment.get('url');\n\n            return (\n              <li key={attachment.get('id')}>\n                <a href={displayUrl} target='_blank' rel='noopener noreferrer'>{filename(displayUrl)}</a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}