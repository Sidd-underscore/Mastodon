{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/containers/sensitive_button_container.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { changeComposeSensitivity } from 'mastodon/actions/compose';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\nvar messages = defineMessages({\n  marked: {\n    \"id\": \"compose_form.sensitive.marked\",\n    \"defaultMessage\": \"{count, plural, one {Media is marked as sensitive} other {Media is marked as sensitive}}\"\n  },\n  unmarked: {\n    \"id\": \"compose_form.sensitive.unmarked\",\n    \"defaultMessage\": \"{count, plural, one {Media is not marked as sensitive} other {Media is not marked as sensitive}}\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    active: state.getIn(['compose', 'sensitive']),\n    disabled: state.getIn(['compose', 'spoiler']),\n    mediaCount: state.getIn(['compose', 'media_attachments']).size\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onClick() {\n      dispatch(changeComposeSensitivity());\n    }\n\n  };\n};\n\nvar SensitiveButton = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(SensitiveButton, _React$PureComponent);\n\n  function SensitiveButton() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = SensitiveButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        disabled = _this$props.disabled,\n        mediaCount = _this$props.mediaCount,\n        onClick = _this$props.onClick,\n        intl = _this$props.intl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose-form__sensitive-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: classNames('icon-button', {\n        active\n      }),\n      title: intl.formatMessage(active ? messages.marked : messages.unmarked, {\n        count: mediaCount\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"mark-sensitive\",\n      type: \"checkbox\",\n      checked: active,\n      onChange: onClick,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('checkbox', {\n        active\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"compose_form.sensitive.hide\",\n      defaultMessage: \"{count, plural, one {Mark media as sensitive} other {Mark media as sensitive}}\",\n      values: {\n        count: mediaCount\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return SensitiveButton;\n}(React.PureComponent);\n\nSensitiveButton.propTypes = {\n  active: PropTypes.bool,\n  disabled: PropTypes.bool,\n  mediaCount: PropTypes.number,\n  onClick: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SensitiveButton));","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/containers/sensitive_button_container.js"],"names":["React","connect","PropTypes","classNames","changeComposeSensitivity","injectIntl","defineMessages","FormattedMessage","messages","marked","unmarked","mapStateToProps","state","active","getIn","disabled","mediaCount","size","mapDispatchToProps","dispatch","onClick","SensitiveButton","render","props","intl","formatMessage","count","PureComponent","propTypes","bool","number","func","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { changeComposeSensitivity } from 'mastodon/actions/compose';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: {\n    id: 'compose_form.sensitive.marked',\n    defaultMessage: '{count, plural, one {Media is marked as sensitive} other {Media is marked as sensitive}}',\n  },\n  unmarked: {\n    id: 'compose_form.sensitive.unmarked',\n    defaultMessage: '{count, plural, one {Media is not marked as sensitive} other {Media is not marked as sensitive}}',\n  },\n});\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'sensitive']),\n  disabled: state.getIn(['compose', 'spoiler']),\n  mediaCount: state.getIn(['compose', 'media_attachments']).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSensitivity());\n  },\n\n});\n\nclass SensitiveButton extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    mediaCount: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { active, disabled, mediaCount, onClick, intl } = this.props;\n\n    return (\n      <div className='compose-form__sensitive-button'>\n        <label className={classNames('icon-button', { active })} title={intl.formatMessage(active ? messages.marked : messages.unmarked, { count: mediaCount })}>\n          <input\n            name='mark-sensitive'\n            type='checkbox'\n            checked={active}\n            onChange={onClick}\n            disabled={disabled}\n          />\n\n          <span className={classNames('checkbox', { active })} />\n\n          <FormattedMessage\n            id='compose_form.sensitive.hide'\n            defaultMessage='{count, plural, one {Mark media as sensitive} other {Mark media as sensitive}}'\n            values={{ count: mediaCount }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SensitiveButton));\n"]},"metadata":{"react-intl":{"messages":[{"id":"compose_form.sensitive.marked","defaultMessage":"{count, plural, one {Media is marked as sensitive} other {Media is marked as sensitive}}"},{"id":"compose_form.sensitive.unmarked","defaultMessage":"{count, plural, one {Media is not marked as sensitive} other {Media is not marked as sensitive}}"},{"id":"compose_form.sensitive.hide","defaultMessage":"{count, plural, one {Mark media as sensitive} other {Mark media as sensitive}}"}]}},"sourceType":"module"}