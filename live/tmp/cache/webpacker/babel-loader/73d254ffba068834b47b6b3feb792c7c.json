{"ast":null,"code":"import api from '../api';\nimport { normalizeAnnouncement } from './importer/normalizer';\nexport var ANNOUNCEMENTS_FETCH_REQUEST = 'ANNOUNCEMENTS_FETCH_REQUEST';\nexport var ANNOUNCEMENTS_FETCH_SUCCESS = 'ANNOUNCEMENTS_FETCH_SUCCESS';\nexport var ANNOUNCEMENTS_FETCH_FAIL = 'ANNOUNCEMENTS_FETCH_FAIL';\nexport var ANNOUNCEMENTS_UPDATE = 'ANNOUNCEMENTS_UPDATE';\nexport var ANNOUNCEMENTS_DELETE = 'ANNOUNCEMENTS_DELETE';\nexport var ANNOUNCEMENTS_DISMISS_REQUEST = 'ANNOUNCEMENTS_DISMISS_REQUEST';\nexport var ANNOUNCEMENTS_DISMISS_SUCCESS = 'ANNOUNCEMENTS_DISMISS_SUCCESS';\nexport var ANNOUNCEMENTS_DISMISS_FAIL = 'ANNOUNCEMENTS_DISMISS_FAIL';\nexport var ANNOUNCEMENTS_REACTION_ADD_REQUEST = 'ANNOUNCEMENTS_REACTION_ADD_REQUEST';\nexport var ANNOUNCEMENTS_REACTION_ADD_SUCCESS = 'ANNOUNCEMENTS_REACTION_ADD_SUCCESS';\nexport var ANNOUNCEMENTS_REACTION_ADD_FAIL = 'ANNOUNCEMENTS_REACTION_ADD_FAIL';\nexport var ANNOUNCEMENTS_REACTION_REMOVE_REQUEST = 'ANNOUNCEMENTS_REACTION_REMOVE_REQUEST';\nexport var ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS = 'ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS';\nexport var ANNOUNCEMENTS_REACTION_REMOVE_FAIL = 'ANNOUNCEMENTS_REACTION_REMOVE_FAIL';\nexport var ANNOUNCEMENTS_REACTION_UPDATE = 'ANNOUNCEMENTS_REACTION_UPDATE';\nexport var ANNOUNCEMENTS_TOGGLE_SHOW = 'ANNOUNCEMENTS_TOGGLE_SHOW';\n\nvar noOp = function noOp() {};\n\nexport var fetchAnnouncements = function fetchAnnouncements(done) {\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return function (dispatch, getState) {\n    dispatch(fetchAnnouncementsRequest());\n    api(getState).get('/api/v1/announcements').then(function (response) {\n      dispatch(fetchAnnouncementsSuccess(response.data.map(function (x) {\n        return normalizeAnnouncement(x);\n      })));\n    }).catch(function (error) {\n      dispatch(fetchAnnouncementsFail(error));\n    }).finally(function () {\n      done();\n    });\n  };\n};\nexport var fetchAnnouncementsRequest = function fetchAnnouncementsRequest() {\n  return {\n    type: ANNOUNCEMENTS_FETCH_REQUEST,\n    skipLoading: true\n  };\n};\nexport var fetchAnnouncementsSuccess = function fetchAnnouncementsSuccess(announcements) {\n  return {\n    type: ANNOUNCEMENTS_FETCH_SUCCESS,\n    announcements,\n    skipLoading: true\n  };\n};\nexport var fetchAnnouncementsFail = function fetchAnnouncementsFail(error) {\n  return {\n    type: ANNOUNCEMENTS_FETCH_FAIL,\n    error,\n    skipLoading: true,\n    skipAlert: true\n  };\n};\nexport var updateAnnouncements = function updateAnnouncements(announcement) {\n  return {\n    type: ANNOUNCEMENTS_UPDATE,\n    announcement: normalizeAnnouncement(announcement)\n  };\n};\nexport var dismissAnnouncement = function dismissAnnouncement(announcementId) {\n  return function (dispatch, getState) {\n    dispatch(dismissAnnouncementRequest(announcementId));\n    api(getState).post(\"/api/v1/announcements/\" + announcementId + \"/dismiss\").then(function () {\n      dispatch(dismissAnnouncementSuccess(announcementId));\n    }).catch(function (error) {\n      dispatch(dismissAnnouncementFail(announcementId, error));\n    });\n  };\n};\nexport var dismissAnnouncementRequest = function dismissAnnouncementRequest(announcementId) {\n  return {\n    type: ANNOUNCEMENTS_DISMISS_REQUEST,\n    id: announcementId\n  };\n};\nexport var dismissAnnouncementSuccess = function dismissAnnouncementSuccess(announcementId) {\n  return {\n    type: ANNOUNCEMENTS_DISMISS_SUCCESS,\n    id: announcementId\n  };\n};\nexport var dismissAnnouncementFail = function dismissAnnouncementFail(announcementId, error) {\n  return {\n    type: ANNOUNCEMENTS_DISMISS_FAIL,\n    id: announcementId,\n    error\n  };\n};\nexport var addReaction = function addReaction(announcementId, name) {\n  return function (dispatch, getState) {\n    var announcement = getState().getIn(['announcements', 'items']).find(function (x) {\n      return x.get('id') === announcementId;\n    });\n    var alreadyAdded = false;\n\n    if (announcement) {\n      var reaction = announcement.get('reactions').find(function (x) {\n        return x.get('name') === name;\n      });\n\n      if (reaction && reaction.get('me')) {\n        alreadyAdded = true;\n      }\n    }\n\n    if (!alreadyAdded) {\n      dispatch(addReactionRequest(announcementId, name, alreadyAdded));\n    }\n\n    api(getState).put(\"/api/v1/announcements/\" + announcementId + \"/reactions/\" + name).then(function () {\n      dispatch(addReactionSuccess(announcementId, name, alreadyAdded));\n    }).catch(function (err) {\n      if (!alreadyAdded) {\n        dispatch(addReactionFail(announcementId, name, err));\n      }\n    });\n  };\n};\nexport var addReactionRequest = function addReactionRequest(announcementId, name) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_ADD_REQUEST,\n    id: announcementId,\n    name,\n    skipLoading: true\n  };\n};\nexport var addReactionSuccess = function addReactionSuccess(announcementId, name) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_ADD_SUCCESS,\n    id: announcementId,\n    name,\n    skipLoading: true\n  };\n};\nexport var addReactionFail = function addReactionFail(announcementId, name, error) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_ADD_FAIL,\n    id: announcementId,\n    name,\n    error,\n    skipLoading: true\n  };\n};\nexport var removeReaction = function removeReaction(announcementId, name) {\n  return function (dispatch, getState) {\n    dispatch(removeReactionRequest(announcementId, name));\n    api(getState).delete(\"/api/v1/announcements/\" + announcementId + \"/reactions/\" + name).then(function () {\n      dispatch(removeReactionSuccess(announcementId, name));\n    }).catch(function (err) {\n      dispatch(removeReactionFail(announcementId, name, err));\n    });\n  };\n};\nexport var removeReactionRequest = function removeReactionRequest(announcementId, name) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_REMOVE_REQUEST,\n    id: announcementId,\n    name,\n    skipLoading: true\n  };\n};\nexport var removeReactionSuccess = function removeReactionSuccess(announcementId, name) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS,\n    id: announcementId,\n    name,\n    skipLoading: true\n  };\n};\nexport var removeReactionFail = function removeReactionFail(announcementId, name, error) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_REMOVE_FAIL,\n    id: announcementId,\n    name,\n    error,\n    skipLoading: true\n  };\n};\nexport var updateReaction = function updateReaction(reaction) {\n  return {\n    type: ANNOUNCEMENTS_REACTION_UPDATE,\n    reaction\n  };\n};\nexport var toggleShowAnnouncements = function toggleShowAnnouncements() {\n  return {\n    type: ANNOUNCEMENTS_TOGGLE_SHOW\n  };\n};\nexport var deleteAnnouncement = function deleteAnnouncement(id) {\n  return {\n    type: ANNOUNCEMENTS_DELETE,\n    id\n  };\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/announcements.js"],"names":["api","normalizeAnnouncement","ANNOUNCEMENTS_FETCH_REQUEST","ANNOUNCEMENTS_FETCH_SUCCESS","ANNOUNCEMENTS_FETCH_FAIL","ANNOUNCEMENTS_UPDATE","ANNOUNCEMENTS_DELETE","ANNOUNCEMENTS_DISMISS_REQUEST","ANNOUNCEMENTS_DISMISS_SUCCESS","ANNOUNCEMENTS_DISMISS_FAIL","ANNOUNCEMENTS_REACTION_ADD_REQUEST","ANNOUNCEMENTS_REACTION_ADD_SUCCESS","ANNOUNCEMENTS_REACTION_ADD_FAIL","ANNOUNCEMENTS_REACTION_REMOVE_REQUEST","ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS","ANNOUNCEMENTS_REACTION_REMOVE_FAIL","ANNOUNCEMENTS_REACTION_UPDATE","ANNOUNCEMENTS_TOGGLE_SHOW","noOp","fetchAnnouncements","done","dispatch","getState","fetchAnnouncementsRequest","get","then","response","fetchAnnouncementsSuccess","data","map","x","catch","error","fetchAnnouncementsFail","finally","type","skipLoading","announcements","skipAlert","updateAnnouncements","announcement","dismissAnnouncement","announcementId","dismissAnnouncementRequest","post","dismissAnnouncementSuccess","dismissAnnouncementFail","id","addReaction","name","getIn","find","alreadyAdded","reaction","addReactionRequest","put","addReactionSuccess","err","addReactionFail","removeReaction","removeReactionRequest","delete","removeReactionSuccess","removeReactionFail","updateReaction","toggleShowAnnouncements","deleteAnnouncement"],"mappings":"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","sourcesContent":["import api from '../api';\nimport { normalizeAnnouncement } from './importer/normalizer';\n\nexport const ANNOUNCEMENTS_FETCH_REQUEST = 'ANNOUNCEMENTS_FETCH_REQUEST';\nexport const ANNOUNCEMENTS_FETCH_SUCCESS = 'ANNOUNCEMENTS_FETCH_SUCCESS';\nexport const ANNOUNCEMENTS_FETCH_FAIL    = 'ANNOUNCEMENTS_FETCH_FAIL';\nexport const ANNOUNCEMENTS_UPDATE        = 'ANNOUNCEMENTS_UPDATE';\nexport const ANNOUNCEMENTS_DELETE        = 'ANNOUNCEMENTS_DELETE';\n\nexport const ANNOUNCEMENTS_DISMISS_REQUEST = 'ANNOUNCEMENTS_DISMISS_REQUEST';\nexport const ANNOUNCEMENTS_DISMISS_SUCCESS = 'ANNOUNCEMENTS_DISMISS_SUCCESS';\nexport const ANNOUNCEMENTS_DISMISS_FAIL    = 'ANNOUNCEMENTS_DISMISS_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_ADD_REQUEST = 'ANNOUNCEMENTS_REACTION_ADD_REQUEST';\nexport const ANNOUNCEMENTS_REACTION_ADD_SUCCESS = 'ANNOUNCEMENTS_REACTION_ADD_SUCCESS';\nexport const ANNOUNCEMENTS_REACTION_ADD_FAIL    = 'ANNOUNCEMENTS_REACTION_ADD_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_REMOVE_REQUEST = 'ANNOUNCEMENTS_REACTION_REMOVE_REQUEST';\nexport const ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS = 'ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS';\nexport const ANNOUNCEMENTS_REACTION_REMOVE_FAIL    = 'ANNOUNCEMENTS_REACTION_REMOVE_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_UPDATE = 'ANNOUNCEMENTS_REACTION_UPDATE';\n\nexport const ANNOUNCEMENTS_TOGGLE_SHOW = 'ANNOUNCEMENTS_TOGGLE_SHOW';\n\nconst noOp = () => {};\n\nexport const fetchAnnouncements = (done = noOp) => (dispatch, getState) => {\n  dispatch(fetchAnnouncementsRequest());\n\n  api(getState).get('/api/v1/announcements').then(response => {\n    dispatch(fetchAnnouncementsSuccess(response.data.map(x => normalizeAnnouncement(x))));\n  }).catch(error => {\n    dispatch(fetchAnnouncementsFail(error));\n  }).finally(() => {\n    done();\n  });\n};\n\nexport const fetchAnnouncementsRequest = () => ({\n  type: ANNOUNCEMENTS_FETCH_REQUEST,\n  skipLoading: true,\n});\n\nexport const fetchAnnouncementsSuccess = announcements => ({\n  type: ANNOUNCEMENTS_FETCH_SUCCESS,\n  announcements,\n  skipLoading: true,\n});\n\nexport const fetchAnnouncementsFail= error => ({\n  type: ANNOUNCEMENTS_FETCH_FAIL,\n  error,\n  skipLoading: true,\n  skipAlert: true,\n});\n\nexport const updateAnnouncements = announcement => ({\n  type: ANNOUNCEMENTS_UPDATE,\n  announcement: normalizeAnnouncement(announcement),\n});\n\nexport const dismissAnnouncement = announcementId => (dispatch, getState) => {\n  dispatch(dismissAnnouncementRequest(announcementId));\n\n  api(getState).post(`/api/v1/announcements/${announcementId}/dismiss`).then(() => {\n    dispatch(dismissAnnouncementSuccess(announcementId));\n  }).catch(error => {\n    dispatch(dismissAnnouncementFail(announcementId, error));\n  });\n};\n\nexport const dismissAnnouncementRequest = announcementId => ({\n  type: ANNOUNCEMENTS_DISMISS_REQUEST,\n  id: announcementId,\n});\n\nexport const dismissAnnouncementSuccess = announcementId => ({\n  type: ANNOUNCEMENTS_DISMISS_SUCCESS,\n  id: announcementId,\n});\n\nexport const dismissAnnouncementFail = (announcementId, error) => ({\n  type: ANNOUNCEMENTS_DISMISS_FAIL,\n  id: announcementId,\n  error,\n});\n\nexport const addReaction = (announcementId, name) => (dispatch, getState) => {\n  const announcement = getState().getIn(['announcements', 'items']).find(x => x.get('id') === announcementId);\n\n  let alreadyAdded = false;\n\n  if (announcement) {\n    const reaction = announcement.get('reactions').find(x => x.get('name') === name);\n    if (reaction && reaction.get('me')) {\n      alreadyAdded = true;\n    }\n  }\n\n  if (!alreadyAdded) {\n    dispatch(addReactionRequest(announcementId, name, alreadyAdded));\n  }\n\n  api(getState).put(`/api/v1/announcements/${announcementId}/reactions/${name}`).then(() => {\n    dispatch(addReactionSuccess(announcementId, name, alreadyAdded));\n  }).catch(err => {\n    if (!alreadyAdded) {\n      dispatch(addReactionFail(announcementId, name, err));\n    }\n  });\n};\n\nexport const addReactionRequest = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_REQUEST,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const addReactionSuccess = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_SUCCESS,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const addReactionFail = (announcementId, name, error) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_FAIL,\n  id: announcementId,\n  name,\n  error,\n  skipLoading: true,\n});\n\nexport const removeReaction = (announcementId, name) => (dispatch, getState) => {\n  dispatch(removeReactionRequest(announcementId, name));\n\n  api(getState).delete(`/api/v1/announcements/${announcementId}/reactions/${name}`).then(() => {\n    dispatch(removeReactionSuccess(announcementId, name));\n  }).catch(err => {\n    dispatch(removeReactionFail(announcementId, name, err));\n  });\n};\n\nexport const removeReactionRequest = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_REQUEST,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const removeReactionSuccess = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const removeReactionFail = (announcementId, name, error) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_FAIL,\n  id: announcementId,\n  name,\n  error,\n  skipLoading: true,\n});\n\nexport const updateReaction = reaction => ({\n  type: ANNOUNCEMENTS_REACTION_UPDATE,\n  reaction,\n});\n\nexport const toggleShowAnnouncements = () => ({\n  type: ANNOUNCEMENTS_TOGGLE_SHOW,\n});\n\nexport const deleteAnnouncement = id => ({\n  type: ANNOUNCEMENTS_DELETE,\n  id,\n});\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}