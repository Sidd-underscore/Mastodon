{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/status/components/detailed_status.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport StatusContent from '../../../components/status_content';\nimport MediaGallery from '../../../components/media_gallery';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages, FormattedDate } from 'react-intl';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from '../../video';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport AnimatedNumber from 'mastodon/components/animated_number';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\nvar messages = defineMessages({\n  public_short: {\n    \"id\": \"privacy.public.short\",\n    \"defaultMessage\": \"Public\"\n  },\n  unlisted_short: {\n    \"id\": \"privacy.unlisted.short\",\n    \"defaultMessage\": \"Unlisted\"\n  },\n  private_short: {\n    \"id\": \"privacy.private.short\",\n    \"defaultMessage\": \"Followers-only\"\n  },\n  direct_short: {\n    \"id\": \"privacy.direct.short\",\n    \"defaultMessage\": \"Direct\"\n  }\n});\n\nvar DetailedStatus = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(DetailedStatus, _ImmutablePureCompone);\n\n  function DetailedStatus() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.state = {\n      height: null\n    };\n\n    _this.handleAccountClick = function (e) {\n      if (e.button === 0 && !(e.ctrlKey || e.metaKey) && _this.context.router) {\n        e.preventDefault();\n\n        _this.context.router.history.push(\"/accounts/\" + _this.props.status.getIn(['account', 'id']));\n      }\n\n      e.stopPropagation();\n    };\n\n    _this.handleOpenVideo = function (options) {\n      _this.props.onOpenVideo(_this.props.status.getIn(['media_attachments', 0]), options);\n    };\n\n    _this.handleExpandedToggle = function () {\n      _this.props.onToggleHidden(_this.props.status);\n    };\n\n    _this.setRef = function (c) {\n      _this.node = c;\n\n      _this._measureHeight();\n    };\n\n    _this.handleModalLink = function (e) {\n      e.preventDefault();\n      var href;\n\n      if (e.target.nodeName !== 'A') {\n        href = e.target.parentNode.href;\n      } else {\n        href = e.target.href;\n      }\n\n      window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n    };\n\n    return _this;\n  }\n\n  var _proto = DetailedStatus.prototype;\n\n  _proto._measureHeight = function _measureHeight(heightJustChanged) {\n    var _this2 = this;\n\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(function () {\n        return _this2.node && _this2.setState({\n          height: Math.ceil(_this2.node.scrollHeight) + 1\n        });\n      });\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  };\n\n  _proto.render = function render() {\n    var status = this.props.status && this.props.status.get('reblog') ? this.props.status.get('reblog') : this.props.status;\n    var outerStyle = {\n      boxSizing: 'border-box'\n    };\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        compact = _this$props.compact,\n        pictureInPicture = _this$props.pictureInPicture;\n\n    if (!status) {\n      return null;\n    }\n\n    var media = '';\n    var applicationLink = '';\n    var reblogLink = '';\n    var reblogIcon = 'retweet';\n    var favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = this.state.height + \"px\";\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media = /*#__PURE__*/React.createElement(PictureInPicturePlaceholder, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      });\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        var attachment = status.getIn(['media_attachments', 0]);\n        media = /*#__PURE__*/React.createElement(Audio, {\n          src: attachment.get('url'),\n          alt: attachment.get('description'),\n          duration: attachment.getIn(['meta', 'original', 'duration'], 0),\n          poster: attachment.get('preview_url') || status.getIn(['account', 'avatar_static']),\n          backgroundColor: attachment.getIn(['meta', 'colors', 'background']),\n          foregroundColor: attachment.getIn(['meta', 'colors', 'foreground']),\n          accentColor: attachment.getIn(['meta', 'colors', 'accent']),\n          height: 150,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        });\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        var _attachment = status.getIn(['media_attachments', 0]);\n\n        media = /*#__PURE__*/React.createElement(Video, {\n          preview: _attachment.get('preview_url'),\n          frameRate: _attachment.getIn(['meta', 'original', 'frame_rate']),\n          blurhash: _attachment.get('blurhash'),\n          src: _attachment.get('url'),\n          alt: _attachment.get('description'),\n          width: 300,\n          height: 150,\n          inline: true,\n          onOpenVideo: this.handleOpenVideo,\n          sensitive: status.get('sensitive'),\n          visible: this.props.showMedia,\n          onToggleVisibility: this.props.onToggleMediaVisibility,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }\n        });\n      } else {\n        media = /*#__PURE__*/React.createElement(MediaGallery, {\n          standalone: true,\n          sensitive: status.get('sensitive'),\n          media: status.get('media_attachments'),\n          height: 300,\n          onOpenMedia: this.props.onOpenMedia,\n          visible: this.props.showMedia,\n          onToggleVisibility: this.props.onToggleMediaVisibility,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }\n        });\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = /*#__PURE__*/React.createElement(Card, {\n        sensitive: status.get('sensitive'),\n        onOpenMedia: this.props.onOpenMedia,\n        card: status.get('card', null),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      });\n    }\n\n    if (status.get('application')) {\n      applicationLink = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 25\n        }\n      }, \" \\xB7 \", /*#__PURE__*/React.createElement(\"a\", {\n        className: \"detailed-status__application\",\n        href: status.getIn(['application', 'website']),\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 44\n        }\n      }, status.getIn(['application', 'name'])));\n    }\n\n    var visibilityIconInfo = {\n      'public': {\n        icon: 'globe',\n        text: intl.formatMessage(messages.public_short)\n      },\n      'unlisted': {\n        icon: 'unlock',\n        text: intl.formatMessage(messages.unlisted_short)\n      },\n      'private': {\n        icon: 'lock',\n        text: intl.formatMessage(messages.private_short)\n      },\n      'direct': {\n        icon: 'envelope',\n        text: intl.formatMessage(messages.direct_short)\n      }\n    };\n    var visibilityIcon = visibilityIconInfo[status.get('visibility')];\n    var visibilityLink = /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 28\n      }\n    }, \" \\xB7 \", /*#__PURE__*/React.createElement(Icon, {\n      id: visibilityIcon.icon,\n      title: visibilityIcon.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 47\n      }\n    }));\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.context.router) {\n      reblogLink = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, \" \\xB7 \"), /*#__PURE__*/React.createElement(Link, {\n        to: \"/statuses/\" + status.get('id') + \"/reblogs\",\n        className: \"detailed-status__link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: reblogIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"detailed-status__reblogs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AnimatedNumber, {\n        value: status.get('reblogs_count'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }))));\n    } else {\n      reblogLink = /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }\n      }, \" \\xB7 \"), /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/interact/\" + status.get('id') + \"?type=reblog\",\n        className: \"detailed-status__link\",\n        onClick: this.handleModalLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: reblogIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"detailed-status__reblogs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AnimatedNumber, {\n        value: status.get('reblogs_count'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }\n      }))));\n    }\n\n    if (this.context.router) {\n      favouriteLink = /*#__PURE__*/React.createElement(Link, {\n        to: \"/statuses/\" + status.get('id') + \"/favourites\",\n        className: \"detailed-status__link\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"detailed-status__favorites\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AnimatedNumber, {\n        value: status.get('favourites_count'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }\n      })));\n    } else {\n      favouriteLink = /*#__PURE__*/React.createElement(\"a\", {\n        href: \"/interact/\" + status.get('id') + \"?type=favourite\",\n        className: \"detailed-status__link\",\n        onClick: this.handleModalLink,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"star\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"detailed-status__favorites\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(AnimatedNumber, {\n        value: status.get('favourites_count'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: outerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setRef,\n      className: classNames('detailed-status', \"detailed-status-\" + status.get('visibility'), {\n        compact\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: status.getIn(['account', 'url']),\n      onClick: this.handleAccountClick,\n      className: \"detailed-status__display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detailed-status__display-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: status.get('account'),\n      size: 48,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: status.get('account'),\n      localDomain: this.props.domain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(StatusContent, {\n      status: status,\n      expanded: !status.get('hidden'),\n      onExpandedToggle: this.handleExpandedToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }\n    }), media, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"detailed-status__meta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"detailed-status__datetime\",\n      href: status.get('url'),\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedDate, {\n      value: new Date(status.get('created_at')),\n      hour12: false,\n      year: \"numeric\",\n      month: \"short\",\n      day: \"2-digit\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 15\n      }\n    })), visibilityLink, applicationLink, reblogLink, \" \\xB7 \", favouriteLink)));\n  };\n\n  return DetailedStatus;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  status: ImmutablePropTypes.map,\n  onOpenMedia: PropTypes.func.isRequired,\n  onOpenVideo: PropTypes.func.isRequired,\n  onToggleHidden: PropTypes.func.isRequired,\n  measureHeight: PropTypes.bool,\n  onHeightChange: PropTypes.func,\n  domain: PropTypes.string.isRequired,\n  compact: PropTypes.bool,\n  showMedia: PropTypes.bool,\n  pictureInPicture: ImmutablePropTypes.contains({\n    inUse: PropTypes.bool,\n    available: PropTypes.bool\n  }),\n  onToggleMediaVisibility: PropTypes.func\n}, _temp)) || _class;\n\nexport { DetailedStatus as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/status/components/detailed_status.js"],"names":["React","PropTypes","ImmutablePropTypes","Avatar","DisplayName","StatusContent","MediaGallery","Link","injectIntl","defineMessages","FormattedDate","Card","ImmutablePureComponent","Video","Audio","scheduleIdleTask","classNames","Icon","AnimatedNumber","PictureInPicturePlaceholder","messages","public_short","unlisted_short","private_short","direct_short","DetailedStatus","state","height","handleAccountClick","e","button","ctrlKey","metaKey","context","router","preventDefault","history","push","props","status","getIn","stopPropagation","handleOpenVideo","options","onOpenVideo","handleExpandedToggle","onToggleHidden","setRef","c","node","_measureHeight","handleModalLink","href","target","nodeName","parentNode","window","open","heightJustChanged","measureHeight","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","render","get","outerStyle","boxSizing","intl","compact","pictureInPicture","media","applicationLink","reblogLink","reblogIcon","favouriteLink","size","attachment","showMedia","onToggleMediaVisibility","onOpenMedia","length","visibilityIconInfo","icon","text","formatMessage","visibilityIcon","visibilityLink","includes","domain","Date","contextTypes","object","propTypes","map","func","isRequired","bool","string","contains","inUse","available"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport StatusContent from '../../../components/status_content';\nimport MediaGallery from '../../../components/media_gallery';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages, FormattedDate } from 'react-intl';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from '../../video';\nimport Audio from '../../audio';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport AnimatedNumber from 'mastodon/components/animated_number';\nimport PictureInPicturePlaceholder from 'mastodon/components/picture_in_picture_placeholder';\n\nconst messages = defineMessages({\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n});\n\nexport default  @injectIntl\nclass DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func.isRequired,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n    }\n\n    e.stopPropagation();\n  }\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  }\n\n  handleExpandedToggle = () => {\n    this.props.onToggleHidden(this.props.status);\n  }\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  }\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  }\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { intl, compact, pictureInPicture } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let media           = '';\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media = <PictureInPicturePlaceholder />;\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Audio\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            height={150}\n          />\n        );\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            width={300}\n            height={150}\n            inline\n            onOpenVideo={this.handleOpenVideo}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      } else {\n        media = (\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            height={300}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />\n        );\n      }\n    } else if (status.get('spoiler_text').length === 0) {\n      media = <Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card', null)} />;\n    }\n\n    if (status.get('application')) {\n      applicationLink = <React.Fragment> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></React.Fragment>;\n    }\n\n    const visibilityIconInfo = {\n      'public': { icon: 'globe', text: intl.formatMessage(messages.public_short) },\n      'unlisted': { icon: 'unlock', text: intl.formatMessage(messages.unlisted_short) },\n      'private': { icon: 'lock', text: intl.formatMessage(messages.private_short) },\n      'direct': { icon: 'envelope', text: intl.formatMessage(messages.direct_short) },\n    };\n\n    const visibilityIcon = visibilityIconInfo[status.get('visibility')];\n    const visibilityLink = <React.Fragment> · <Icon id={visibilityIcon.icon} title={visibilityIcon.text} /></React.Fragment>;\n\n    if (['private', 'direct'].includes(status.get('visibility'))) {\n      reblogLink = '';\n    } else if (this.context.router) {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <Link to={`/statuses/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </React.Fragment>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/statuses/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent status={status} expanded={!status.get('hidden')} onExpandedToggle={this.handleExpandedToggle} />\n\n          {media}\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n              <FormattedDate value={new Date(status.get('created_at'))} hour12={false} year='numeric' month='short' day='2-digit' hour='2-digit' minute='2-digit' />\n            </a>{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"privacy.public.short","defaultMessage":"Public"},{"id":"privacy.unlisted.short","defaultMessage":"Unlisted"},{"id":"privacy.private.short","defaultMessage":"Followers-only"},{"id":"privacy.direct.short","defaultMessage":"Direct"}]}},"sourceType":"module"}