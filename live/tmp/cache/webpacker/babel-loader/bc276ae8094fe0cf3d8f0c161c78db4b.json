{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/button.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nvar Button = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Button, _React$PureComponent);\n\n  function Button() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleClick = function (e) {\n      if (!_this.props.disabled) {\n        _this.props.onClick(e);\n      }\n    };\n\n    _this.setRef = function (c) {\n      _this.node = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.focus = function focus() {\n    this.node.focus();\n  };\n\n  _proto.render = function render() {\n    var className = classNames('button', this.props.className, {\n      'button-secondary': this.props.secondary,\n      'button--block': this.props.block\n    });\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: className,\n      disabled: this.props.disabled,\n      onClick: this.handleClick,\n      ref: this.setRef,\n      title: this.props.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, this.props.text || this.props.children);\n  };\n\n  return Button;\n}(React.PureComponent);\n\nButton.propTypes = {\n  text: PropTypes.node,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  block: PropTypes.bool,\n  secondary: PropTypes.bool,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  children: PropTypes.node\n};\nexport { Button as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/button.js"],"names":["React","PropTypes","classNames","Button","handleClick","e","props","disabled","onClick","setRef","c","node","focus","render","className","secondary","block","title","text","children","PureComponent","propTypes","func","bool","string"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;IAEqBC,M;;;;;;;;;;;;UAanBC,W,GAAc,UAACC,CAAD,EAAO;AACnB,UAAI,CAAC,MAAKC,KAAL,CAAWC,QAAhB,EAA0B;AACxB,cAAKD,KAAL,CAAWE,OAAX,CAAmBH,CAAnB;AACD;AACF,K;;UAEDI,M,GAAS,UAACC,CAAD,EAAO;AACd,YAAKC,IAAL,GAAYD,CAAZ;AACD,K;;;;;;;SAEDE,K,GAAA,iBAAQ;AACN,SAAKD,IAAL,CAAUC,KAAV;AACD,G;;SAEDC,M,GAAA,kBAAU;AACR,QAAMC,SAAS,GAAGZ,UAAU,CAAC,QAAD,EAAW,KAAKI,KAAL,CAAWQ,SAAtB,EAAiC;AAC3D,0BAAoB,KAAKR,KAAL,CAAWS,SAD4B;AAE3D,uBAAiB,KAAKT,KAAL,CAAWU;AAF+B,KAAjC,CAA5B;AAKA,wBACE;AACE,MAAA,SAAS,EAAEF,SADb;AAEE,MAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWC,QAFvB;AAGE,MAAA,OAAO,EAAE,KAAKH,WAHhB;AAIE,MAAA,GAAG,EAAE,KAAKK,MAJZ;AAKE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWW,KALpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKX,KAAL,CAAWY,IAAX,IAAmB,KAAKZ,KAAL,CAAWa,QAPjC,CADF;AAWD,G;;;EA5CiCnB,KAAK,CAACoB,a;;AAArBjB,M,CAEZkB,S,GAAY;AACjBH,EAAAA,IAAI,EAAEjB,SAAS,CAACU,IADC;AAEjBH,EAAAA,OAAO,EAAEP,SAAS,CAACqB,IAFF;AAGjBf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,IAHH;AAIjBP,EAAAA,KAAK,EAAEf,SAAS,CAACsB,IAJA;AAKjBR,EAAAA,SAAS,EAAEd,SAAS,CAACsB,IALJ;AAMjBT,EAAAA,SAAS,EAAEb,SAAS,CAACuB,MANJ;AAOjBP,EAAAA,KAAK,EAAEhB,SAAS,CAACuB,MAPA;AAQjBL,EAAAA,QAAQ,EAAElB,SAAS,CAACU;AARH,C;SAFAR,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default class Button extends React.PureComponent {\n\n  static propTypes = {\n    text: PropTypes.node,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    block: PropTypes.bool,\n    secondary: PropTypes.bool,\n    className: PropTypes.string,\n    title: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  handleClick = (e) => {\n    if (!this.props.disabled) {\n      this.props.onClick(e);\n    }\n  }\n\n  setRef = (c) => {\n    this.node = c;\n  }\n\n  focus() {\n    this.node.focus();\n  }\n\n  render () {\n    const className = classNames('button', this.props.className, {\n      'button-secondary': this.props.secondary,\n      'button--block': this.props.block,\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={this.props.disabled}\n        onClick={this.handleClick}\n        ref={this.setRef}\n        title={this.props.title}\n      >\n        {this.props.text || this.props.children}\n      </button>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}