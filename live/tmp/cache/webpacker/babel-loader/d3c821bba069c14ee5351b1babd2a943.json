{"ast":null,"code":"var _excluded = [\"component\", \"content\"];\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/util/react_router_helpers.js\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport ColumnLoading from '../components/column_loading';\nimport BundleColumnError from '../components/bundle_column_error';\nimport BundleContainer from '../containers/bundle_container'; // Small wrapper to pass multiColumn to the route components\n\nexport var WrappedSwitch = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(WrappedSwitch, _React$PureComponent);\n\n  function WrappedSwitch() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = WrappedSwitch.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        multiColumn = _this$props.multiColumn,\n        children = _this$props.children;\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, React.Children.map(children, function (child) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        multiColumn\n      });\n    }));\n  };\n\n  return WrappedSwitch;\n}(React.PureComponent);\nWrappedSwitch.propTypes = {\n  multiColumn: PropTypes.bool,\n  children: PropTypes.node\n}; // Small Wrapper to extract the params from the route and pass\n// them to the rendered component, together with the content to\n// be rendered inside (the children)\n\nexport var WrappedRoute = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(WrappedRoute, _React$Component);\n\n  function WrappedRoute() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.renderComponent = function (_ref) {\n      var match = _ref.match;\n      var _this$props2 = _this.props,\n          component = _this$props2.component,\n          content = _this$props2.content,\n          multiColumn = _this$props2.multiColumn,\n          componentParams = _this$props2.componentParams;\n      return /*#__PURE__*/React.createElement(BundleContainer, {\n        fetchComponent: component,\n        loading: _this.renderLoading,\n        error: _this.renderError,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, function (Component) {\n        return /*#__PURE__*/React.createElement(Component, _extends({\n          params: match.params,\n          multiColumn: multiColumn\n        }, componentParams, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }\n        }), content);\n      });\n    };\n\n    _this.renderLoading = function () {\n      return /*#__PURE__*/React.createElement(ColumnLoading, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      });\n    };\n\n    _this.renderError = function (props) {\n      return /*#__PURE__*/React.createElement(BundleColumnError, _extends({}, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto2 = WrappedRoute.prototype;\n\n  _proto2.render = function render() {\n    var _this$props3 = this.props,\n        Component = _this$props3.component,\n        content = _this$props3.content,\n        rest = _objectWithoutPropertiesLoose(_this$props3, _excluded);\n\n    return /*#__PURE__*/React.createElement(Route, _extends({}, rest, {\n      render: this.renderComponent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    }));\n  };\n\n  return WrappedRoute;\n}(React.Component);\nWrappedRoute.propTypes = {\n  component: PropTypes.func.isRequired,\n  content: PropTypes.node,\n  multiColumn: PropTypes.bool,\n  componentParams: PropTypes.object\n};\nWrappedRoute.defaultProps = {\n  componentParams: {}\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/util/react_router_helpers.js"],"names":["React","PropTypes","Switch","Route","ColumnLoading","BundleColumnError","BundleContainer","WrappedSwitch","render","props","multiColumn","children","Children","map","child","cloneElement","PureComponent","propTypes","bool","node","WrappedRoute","renderComponent","match","component","content","componentParams","renderLoading","renderError","Component","params","rest","func","isRequired","object","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\n\nimport ColumnLoading from '../components/column_loading';\nimport BundleColumnError from '../components/bundle_column_error';\nimport BundleContainer from '../containers/bundle_container';\n\n// Small wrapper to pass multiColumn to the route components\nexport class WrappedSwitch extends React.PureComponent {\n\n  render () {\n    const { multiColumn, children } = this.props;\n\n    return (\n      <Switch>\n        {React.Children.map(children, child => React.cloneElement(child, { multiColumn }))}\n      </Switch>\n    );\n  }\n\n}\n\nWrappedSwitch.propTypes = {\n  multiColumn: PropTypes.bool,\n  children: PropTypes.node,\n};\n\n// Small Wrapper to extract the params from the route and pass\n// them to the rendered component, together with the content to\n// be rendered inside (the children)\nexport class WrappedRoute extends React.Component {\n\n  static propTypes = {\n    component: PropTypes.func.isRequired,\n    content: PropTypes.node,\n    multiColumn: PropTypes.bool,\n    componentParams: PropTypes.object,\n  };\n\n  static defaultProps = {\n    componentParams: {},\n  };\n\n  renderComponent = ({ match }) => {\n    const { component, content, multiColumn, componentParams } = this.props;\n\n    return (\n      <BundleContainer fetchComponent={component} loading={this.renderLoading} error={this.renderError}>\n        {Component => <Component params={match.params} multiColumn={multiColumn} {...componentParams}>{content}</Component>}\n      </BundleContainer>\n    );\n  }\n\n  renderLoading = () => {\n    return <ColumnLoading />;\n  }\n\n  renderError = (props) => {\n    return <BundleColumnError {...props} />;\n  }\n\n  render () {\n    const { component: Component, content, ...rest } = this.props;\n\n    return <Route {...rest} render={this.renderComponent} />;\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}