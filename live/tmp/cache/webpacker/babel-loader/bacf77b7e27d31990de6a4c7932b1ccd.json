{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/animated_number.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedNumber } from 'react-intl';\nimport TransitionMotion from 'react-motion/lib/TransitionMotion';\nimport spring from 'react-motion/lib/spring';\nimport { reduceMotion } from 'mastodon/initial_state';\n\nvar obfuscatedCount = function obfuscatedCount(count) {\n  if (count < 0) {\n    return 0;\n  } else if (count <= 1) {\n    return count;\n  } else {\n    return '1+';\n  }\n};\n\nvar AnimatedNumber = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(AnimatedNumber, _React$PureComponent);\n\n  function AnimatedNumber() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      direction: 1\n    };\n\n    _this.willEnter = function () {\n      var direction = _this.state.direction;\n      return {\n        y: -1 * direction\n      };\n    };\n\n    _this.willLeave = function () {\n      var direction = _this.state.direction;\n      return {\n        y: spring(1 * direction, {\n          damping: 35,\n          stiffness: 400\n        })\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = AnimatedNumber.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.value > this.props.value) {\n      this.setState({\n        direction: 1\n      });\n    } else if (nextProps.value < this.props.value) {\n      this.setState({\n        direction: -1\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        value = _this$props.value,\n        obfuscate = _this$props.obfuscate;\n    var direction = this.state.direction;\n\n    if (reduceMotion) {\n      return obfuscate ? obfuscatedCount(value) : /*#__PURE__*/React.createElement(FormattedNumber, {\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 51\n        }\n      });\n    }\n\n    var styles = [{\n      key: \"\" + value,\n      data: value,\n      style: {\n        y: spring(0, {\n          damping: 35,\n          stiffness: 400\n        })\n      }\n    }];\n    return /*#__PURE__*/React.createElement(TransitionMotion, {\n      styles: styles,\n      willEnter: this.willEnter,\n      willLeave: this.willLeave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, function (items) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"animated-number\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, items.map(function (_ref) {\n        var key = _ref.key,\n            data = _ref.data,\n            style = _ref.style;\n        return /*#__PURE__*/React.createElement(\"span\", {\n          key: key,\n          style: {\n            position: direction * style.y > 0 ? 'absolute' : 'static',\n            transform: \"translateY(\" + style.y * 100 + \"%)\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, obfuscate ? obfuscatedCount(data) : /*#__PURE__*/React.createElement(FormattedNumber, {\n          value: data,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 184\n          }\n        }));\n      }));\n    });\n  };\n\n  return AnimatedNumber;\n}(React.PureComponent);\n\nAnimatedNumber.propTypes = {\n  value: PropTypes.number.isRequired,\n  obfuscate: PropTypes.bool\n};\nexport { AnimatedNumber as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/animated_number.js"],"names":["React","PropTypes","FormattedNumber","TransitionMotion","spring","reduceMotion","obfuscatedCount","count","AnimatedNumber","state","direction","willEnter","y","willLeave","damping","stiffness","componentWillReceiveProps","nextProps","value","props","setState","render","obfuscate","styles","key","data","style","items","map","position","transform","PureComponent","propTypes","number","isRequired","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,MAAIA,KAAK,GAAG,CAAZ,EAAe;AACb,WAAO,CAAP;AACD,GAFD,MAEO,IAAIA,KAAK,IAAI,CAAb,EAAgB;AACrB,WAAOA,KAAP;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF,CARD;;IAUqBC,c;;;;;;;;;;;UAOnBC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;;UAYRC,S,GAAY,YAAM;AAChB,UAAQD,SAAR,GAAsB,MAAKD,KAA3B,CAAQC,SAAR;AAEA,aAAO;AAAEE,QAAAA,CAAC,EAAE,CAAC,CAAD,GAAKF;AAAV,OAAP;AACD,K;;UAEDG,S,GAAY,YAAM;AAChB,UAAQH,SAAR,GAAsB,MAAKD,KAA3B,CAAQC,SAAR;AAEA,aAAO;AAAEE,QAAAA,CAAC,EAAER,MAAM,CAAC,IAAIM,SAAL,EAAgB;AAAEI,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,SAAS,EAAE;AAA1B,SAAhB;AAAX,OAAP;AACD,K;;;;;;;SAlBDC,yB,GAAA,mCAA2BC,SAA3B,EAAsC;AACpC,QAAIA,SAAS,CAACC,KAAV,GAAkB,KAAKC,KAAL,CAAWD,KAAjC,EAAwC;AACtC,WAAKE,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAFD,MAEO,IAAIO,SAAS,CAACC,KAAV,GAAkB,KAAKC,KAAL,CAAWD,KAAjC,EAAwC;AAC7C,WAAKE,QAAL,CAAc;AAAEV,QAAAA,SAAS,EAAE,CAAC;AAAd,OAAd;AACD;AACF,G;;SAcDW,M,GAAA,kBAAU;AAAA;;AACR,sBAA6B,KAAKF,KAAlC;AAAA,QAAQD,KAAR,eAAQA,KAAR;AAAA,QAAeI,SAAf,eAAeA,SAAf;AACA,QAAQZ,SAAR,GAAsB,KAAKD,KAA3B,CAAQC,SAAR;;AAEA,QAAIL,YAAJ,EAAkB;AAChB,aAAOiB,SAAS,GAAGhB,eAAe,CAACY,KAAD,CAAlB,gBAA4B,oBAAC,eAAD;AAAiB,QAAA,KAAK,EAAEA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5C;AACD;;AAED,QAAMK,MAAM,GAAG,CAAC;AACdC,MAAAA,GAAG,OAAKN,KADM;AAEdO,MAAAA,IAAI,EAAEP,KAFQ;AAGdQ,MAAAA,KAAK,EAAE;AAAEd,QAAAA,CAAC,EAAER,MAAM,CAAC,CAAD,EAAI;AAAEU,UAAAA,OAAO,EAAE,EAAX;AAAeC,UAAAA,SAAS,EAAE;AAA1B,SAAJ;AAAX;AAHO,KAAD,CAAf;AAMA,wBACE,oBAAC,gBAAD;AAAkB,MAAA,MAAM,EAAEQ,MAA1B;AAAkC,MAAA,SAAS,EAAE,KAAKZ,SAAlD;AAA6D,MAAA,SAAS,EAAE,KAAKE,SAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,UAAAc,KAAK;AAAA,0BACJ;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGA,KAAK,CAACC,GAAN,CAAU;AAAA,YAAGJ,GAAH,QAAGA,GAAH;AAAA,YAAQC,IAAR,QAAQA,IAAR;AAAA,YAAcC,KAAd,QAAcA,KAAd;AAAA,4BACT;AAAM,UAAA,GAAG,EAAEF,GAAX;AAAgB,UAAA,KAAK,EAAE;AAAEK,YAAAA,QAAQ,EAAGnB,SAAS,GAAGgB,KAAK,CAACd,CAAnB,GAAwB,CAAxB,GAA4B,UAA5B,GAAyC,QAArD;AAA+DkB,YAAAA,SAAS,kBAAgBJ,KAAK,CAACd,CAAN,GAAU,GAA1B;AAAxE,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqIU,SAAS,GAAGhB,eAAe,CAACmB,IAAD,CAAlB,gBAA2B,oBAAC,eAAD;AAAiB,UAAA,KAAK,EAAEA,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAzK,CADS;AAAA,OAAV,CADH,CADI;AAAA,KADR,CADF;AAWD,G;;;EAxDyCzB,KAAK,CAAC+B,a;;AAA7BvB,c,CAEZwB,S,GAAY;AACjBd,EAAAA,KAAK,EAAEjB,SAAS,CAACgC,MAAV,CAAiBC,UADP;AAEjBZ,EAAAA,SAAS,EAAErB,SAAS,CAACkC;AAFJ,C;SAFA3B,c","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedNumber } from 'react-intl';\nimport TransitionMotion from 'react-motion/lib/TransitionMotion';\nimport spring from 'react-motion/lib/spring';\nimport { reduceMotion } from 'mastodon/initial_state';\n\nconst obfuscatedCount = count => {\n  if (count < 0) {\n    return 0;\n  } else if (count <= 1) {\n    return count;\n  } else {\n    return '1+';\n  }\n};\n\nexport default class AnimatedNumber extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.number.isRequired,\n    obfuscate: PropTypes.bool,\n  };\n\n  state = {\n    direction: 1,\n  };\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.value > this.props.value) {\n      this.setState({ direction: 1 });\n    } else if (nextProps.value < this.props.value) {\n      this.setState({ direction: -1 });\n    }\n  }\n\n  willEnter = () => {\n    const { direction } = this.state;\n\n    return { y: -1 * direction };\n  }\n\n  willLeave = () => {\n    const { direction } = this.state;\n\n    return { y: spring(1 * direction, { damping: 35, stiffness: 400 }) };\n  }\n\n  render () {\n    const { value, obfuscate } = this.props;\n    const { direction } = this.state;\n\n    if (reduceMotion) {\n      return obfuscate ? obfuscatedCount(value) : <FormattedNumber value={value} />;\n    }\n\n    const styles = [{\n      key: `${value}`,\n      data: value,\n      style: { y: spring(0, { damping: 35, stiffness: 400 }) },\n    }];\n\n    return (\n      <TransitionMotion styles={styles} willEnter={this.willEnter} willLeave={this.willLeave}>\n        {items => (\n          <span className='animated-number'>\n            {items.map(({ key, data, style }) => (\n              <span key={key} style={{ position: (direction * style.y) > 0 ? 'absolute' : 'static', transform: `translateY(${style.y * 100}%)` }}>{obfuscate ? obfuscatedCount(data) : <FormattedNumber value={data} />}</span>\n            ))}\n          </span>\n        )}\n      </TransitionMotion>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}