{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/account_gallery/components/media_item.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport Blurhash from 'mastodon/components/blurhash';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'mastodon/initial_state';\nimport { isIOS } from 'mastodon/is_mobile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nvar MediaItem = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(MediaItem, _ImmutablePureCompone);\n\n  function MediaItem() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.state = {\n      visible: displayMedia !== 'hide_all' && !_this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n      loaded: false\n    };\n\n    _this.handleImageLoad = function () {\n      _this.setState({\n        loaded: true\n      });\n    };\n\n    _this.handleMouseEnter = function (e) {\n      if (_this.hoverToPlay()) {\n        e.target.play();\n      }\n    };\n\n    _this.handleMouseLeave = function (e) {\n      if (_this.hoverToPlay()) {\n        e.target.pause();\n        e.target.currentTime = 0;\n      }\n    };\n\n    _this.handleClick = function (e) {\n      if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n\n        if (_this.state.visible) {\n          _this.props.onOpenMedia(_this.props.attachment);\n        } else {\n          _this.setState({\n            visible: true\n          });\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = MediaItem.prototype;\n\n  _proto.hoverToPlay = function hoverToPlay() {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        attachment = _this$props.attachment,\n        displayWidth = _this$props.displayWidth;\n    var _this$state = this.state,\n        visible = _this$state.visible,\n        loaded = _this$state.loaded;\n    var width = Math.floor((displayWidth - 4) / 3) - 4 + \"px\";\n    var height = width;\n    var status = attachment.get('status');\n    var title = status.get('spoiler_text') || attachment.get('description');\n    var thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = /*#__PURE__*/React.createElement(\"span\", {\n        className: \"account-gallery__item__icons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"eye-slash\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = /*#__PURE__*/React.createElement(\"img\", {\n          src: attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static']),\n          alt: attachment.get('description'),\n          onLoad: this.handleImageLoad,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }\n        });\n\n        if (attachment.get('type') === 'audio') {\n          label = /*#__PURE__*/React.createElement(Icon, {\n            id: \"music\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }\n          });\n        } else {\n          label = /*#__PURE__*/React.createElement(Icon, {\n            id: \"play\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }\n          });\n        }\n      } else if (attachment.get('type') === 'image') {\n        var focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        var focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        var x = (focusX / 2 + .5) * 100;\n        var y = (focusY / -2 + .5) * 100;\n        content = /*#__PURE__*/React.createElement(\"img\", {\n          src: attachment.get('preview_url'),\n          alt: attachment.get('description'),\n          style: {\n            objectPosition: x + \"% \" + y + \"%\"\n          },\n          onLoad: this.handleImageLoad,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        });\n      } else if (attachment.get('type') === 'gifv') {\n        content = /*#__PURE__*/React.createElement(\"video\", {\n          className: \"media-gallery__item-gifv-thumbnail\",\n          \"aria-label\": attachment.get('description'),\n          role: \"application\",\n          src: attachment.get('url'),\n          onMouseEnter: this.handleMouseEnter,\n          onMouseLeave: this.handleMouseLeave,\n          autoPlay: !isIOS() && autoPlayGif,\n          loop: true,\n          muted: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 11\n          }\n        });\n        label = 'GIF';\n      }\n\n      thumbnail = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"media-gallery__gifv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }\n      }, content, label && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"media-gallery__gifv__label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }\n      }, label));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account-gallery__item\",\n      style: {\n        width,\n        height\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"media-gallery__item-thumbnail\",\n      href: status.get('url'),\n      onClick: this.handleClick,\n      title: title,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Blurhash, {\n      hash: attachment.get('blurhash'),\n      className: classNames('media-gallery__preview', {\n        'media-gallery__preview--hidden': visible && loaded\n      }),\n      dummy: !useBlurhash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }\n    }), visible ? thumbnail : icon));\n  };\n\n  return MediaItem;\n}(ImmutablePureComponent);\n\nMediaItem.propTypes = {\n  attachment: ImmutablePropTypes.map.isRequired,\n  displayWidth: PropTypes.number.isRequired,\n  onOpenMedia: PropTypes.func.isRequired\n};\nexport { MediaItem as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/account_gallery/components/media_item.js"],"names":["Blurhash","classNames","Icon","autoPlayGif","displayMedia","useBlurhash","isIOS","PropTypes","React","ImmutablePropTypes","ImmutablePureComponent","MediaItem","state","visible","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","button","ctrlKey","metaKey","preventDefault","onOpenMedia","indexOf","get","render","displayWidth","width","Math","floor","height","status","title","thumbnail","label","icon","content","includes","focusX","focusY","x","y","objectPosition","propTypes","map","isRequired","number","func"],"mappings":"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","sourcesContent":["import Blurhash from 'mastodon/components/blurhash';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'mastodon/initial_state';\nimport { isIOS } from 'mastodon/is_mobile';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  }\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  }\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  }\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  }\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={!isIOS() && autoPlayGif}\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && <span className='media-gallery__gifv__label'>{label}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}