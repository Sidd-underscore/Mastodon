{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/reply_indicator.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../../components/avatar';\nimport IconButton from '../../../components/icon_button';\nimport DisplayName from '../../../components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport AttachmentList from 'mastodon/components/attachment_list';\nvar messages = defineMessages({\n  cancel: {\n    \"id\": \"reply_indicator.cancel\",\n    \"defaultMessage\": \"Cancel\"\n  }\n});\n\nvar ReplyIndicator = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ReplyIndicator, _ImmutablePureCompone);\n\n  function ReplyIndicator() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleClick = function () {\n      _this.props.onCancel();\n    };\n\n    _this.handleAccountClick = function (e) {\n      if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n\n        _this.context.router.history.push(\"/accounts/\" + _this.props.status.getIn(['account', 'id']));\n      }\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplyIndicator.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        status = _this$props.status,\n        intl = _this$props.intl;\n\n    if (!status) {\n      return null;\n    }\n\n    var content = {\n      __html: status.get('contentHtml')\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reply-indicator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reply-indicator__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reply-indicator__cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      title: intl.formatMessage(messages.cancel),\n      icon: \"times\",\n      onClick: this.handleClick,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 52\n      }\n    })), /*#__PURE__*/React.createElement(\"a\", {\n      href: status.getIn(['account', 'url']),\n      onClick: this.handleAccountClick,\n      className: \"reply-indicator__display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reply-indicator__display-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: status.get('account'),\n      size: 24,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: status.get('account'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"reply-indicator__content translate\",\n      dangerouslySetInnerHTML: content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }), status.get('media_attachments').size > 0 && /*#__PURE__*/React.createElement(AttachmentList, {\n      compact: true,\n      media: status.get('media_attachments'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }));\n  };\n\n  return ReplyIndicator;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  status: ImmutablePropTypes.map,\n  onCancel: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { ReplyIndicator as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/reply_indicator.js"],"names":["React","ImmutablePropTypes","PropTypes","Avatar","IconButton","DisplayName","defineMessages","injectIntl","ImmutablePureComponent","AttachmentList","messages","cancel","ReplyIndicator","handleClick","props","onCancel","handleAccountClick","e","button","ctrlKey","metaKey","preventDefault","context","router","history","push","status","getIn","render","intl","content","__html","get","formatMessage","size","contextTypes","object","propTypes","map","func","isRequired"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,YAA3C;AACA,OAAOC,sBAAP,MAAmC,gCAAnC;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AAEA,IAAMC,QAAQ,GAAGJ,cAAc,CAAC;AAC9BK,EAAAA,MAAM;AAAA;AAAA;AAAA;AADwB,CAAD,CAA/B;;IAKMC,c,GADUL,U;;;;;;;;;;;;UAadM,W,GAAc,YAAM;AAClB,YAAKC,KAAL,CAAWC,QAAX;AACD,K;;UAEDC,kB,GAAqB,UAACC,CAAD,EAAO;AAC1B,UAAIA,CAAC,CAACC,MAAF,KAAa,CAAb,IAAkB,EAAED,CAAC,CAACE,OAAF,IAAaF,CAAC,CAACG,OAAjB,CAAtB,EAAiD;AAC/CH,QAAAA,CAAC,CAACI,cAAF;;AACA,cAAKC,OAAL,CAAaC,MAAb,CAAoBC,OAApB,CAA4BC,IAA5B,gBAA8C,MAAKX,KAAL,CAAWY,MAAX,CAAkBC,KAAlB,CAAwB,CAAC,SAAD,EAAY,IAAZ,CAAxB,CAA9C;AACD;AACF,K;;;;;;;SAEDC,M,GAAA,kBAAU;AACR,sBAAyB,KAAKd,KAA9B;AAAA,QAAQY,MAAR,eAAQA,MAAR;AAAA,QAAgBG,IAAhB,eAAgBA,IAAhB;;AAEA,QAAI,CAACH,MAAL,EAAa;AACX,aAAO,IAAP;AACD;;AAED,QAAMI,OAAO,GAAG;AAAEC,MAAAA,MAAM,EAAEL,MAAM,CAACM,GAAP,CAAW,aAAX;AAAV,KAAhB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyC,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEH,IAAI,CAACI,aAAL,CAAmBvB,QAAQ,CAACC,MAA5B,CAAnB;AAAwD,MAAA,IAAI,EAAC,OAA7D;AAAqE,MAAA,OAAO,EAAE,KAAKE,WAAnF;AAAgG,MAAA,QAAQ,MAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzC,CADF,eAGE;AAAG,MAAA,IAAI,EAAEa,MAAM,CAACC,KAAP,CAAa,CAAC,SAAD,EAAY,KAAZ,CAAb,CAAT;AAA2C,MAAA,OAAO,EAAE,KAAKX,kBAAzD;AAA6E,MAAA,SAAS,EAAC,+BAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiD,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEU,MAAM,CAACM,GAAP,CAAW,SAAX,CAAjB;AAAwC,MAAA,IAAI,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjD,CADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAEN,MAAM,CAACM,GAAP,CAAW,SAAX,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAoD,MAAA,uBAAuB,EAAEF,OAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAYGJ,MAAM,CAACM,GAAP,CAAW,mBAAX,EAAgCE,IAAhC,GAAuC,CAAvC,iBACC,oBAAC,cAAD;AACE,MAAA,OAAO,MADT;AAEE,MAAA,KAAK,EAAER,MAAM,CAACM,GAAP,CAAW,mBAAX,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbJ,CADF;AAqBD,G;;;EArD0BxB,sB,WAEpB2B,Y,GAAe;AACpBZ,EAAAA,MAAM,EAAErB,SAAS,CAACkC;AADE,C,UAIfC,S,GAAY;AACjBX,EAAAA,MAAM,EAAEzB,kBAAkB,CAACqC,GADV;AAEjBvB,EAAAA,QAAQ,EAAEb,SAAS,CAACqC,IAAV,CAAeC,UAFR;AAGjBX,EAAAA,IAAI,EAAE3B,SAAS,CAACkC,MAAV,CAAiBI;AAHN,C;;SANf5B,c","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../../components/avatar';\nimport IconButton from '../../../components/icon_button';\nimport DisplayName from '../../../components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport AttachmentList from 'mastodon/components/attachment_list';\n\nconst messages = defineMessages({\n  cancel: { id: 'reply_indicator.cancel', defaultMessage: 'Cancel' },\n});\n\nexport default @injectIntl\nclass ReplyIndicator extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onCancel: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onCancel();\n  }\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n    }\n  }\n\n  render () {\n    const { status, intl } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    const content = { __html: status.get('contentHtml') };\n\n    return (\n      <div className='reply-indicator'>\n        <div className='reply-indicator__header'>\n          <div className='reply-indicator__cancel'><IconButton title={intl.formatMessage(messages.cancel)} icon='times' onClick={this.handleClick} inverted /></div>\n\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='reply-indicator__display-name'>\n            <div className='reply-indicator__display-avatar'><Avatar account={status.get('account')} size={24} /></div>\n            <DisplayName account={status.get('account')} />\n          </a>\n        </div>\n\n        <div className='reply-indicator__content translate' dangerouslySetInnerHTML={content} />\n\n        {status.get('media_attachments').size > 0 && (\n          <AttachmentList\n            compact\n            media={status.get('media_attachments')}\n          />\n        )}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"reply_indicator.cancel","defaultMessage":"Cancel"}]}},"sourceType":"module"}