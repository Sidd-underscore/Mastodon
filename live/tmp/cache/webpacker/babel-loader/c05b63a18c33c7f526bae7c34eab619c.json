{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/setting_toggle.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Toggle from 'react-toggle';\n\nvar SettingToggle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(SettingToggle, _React$PureComponent);\n\n  function SettingToggle() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.onChange = function (_ref) {\n      var target = _ref.target;\n\n      _this.props.onChange(_this.props.settingPath, target.checked);\n    };\n\n    return _this;\n  }\n\n  var _proto = SettingToggle.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        prefix = _this$props.prefix,\n        settings = _this$props.settings,\n        settingPath = _this$props.settingPath,\n        label = _this$props.label,\n        defaultValue = _this$props.defaultValue,\n        disabled = _this$props.disabled;\n    var id = ['setting-toggle', prefix].concat(settingPath).filter(Boolean).join('-');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"setting-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      disabled: disabled,\n      id: id,\n      checked: settings.getIn(settingPath, defaultValue),\n      onChange: this.onChange,\n      onKeyDown: this.onKeyDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id,\n      className: \"setting-toggle__label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, label));\n  };\n\n  return SettingToggle;\n}(React.PureComponent);\n\nSettingToggle.propTypes = {\n  prefix: PropTypes.string,\n  settings: ImmutablePropTypes.map.isRequired,\n  settingPath: PropTypes.array.isRequired,\n  label: PropTypes.node.isRequired,\n  onChange: PropTypes.func.isRequired,\n  defaultValue: PropTypes.bool,\n  disabled: PropTypes.bool\n};\nexport { SettingToggle as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/setting_toggle.js"],"names":["React","PropTypes","ImmutablePropTypes","Toggle","SettingToggle","onChange","target","props","settingPath","checked","render","prefix","settings","label","defaultValue","disabled","id","filter","Boolean","join","getIn","onKeyDown","PureComponent","propTypes","string","map","isRequired","array","node","func","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,OAAOC,MAAP,MAAmB,cAAnB;;IAEqBC,a;;;;;;;;;;;;UAYnBC,Q,GAAW,gBAAgB;AAAA,UAAbC,MAAa,QAAbA,MAAa;;AACzB,YAAKC,KAAL,CAAWF,QAAX,CAAoB,MAAKE,KAAL,CAAWC,WAA/B,EAA4CF,MAAM,CAACG,OAAnD;AACD,K;;;;;;;SAEDC,M,GAAA,kBAAU;AACR,sBAAyE,KAAKH,KAA9E;AAAA,QAAQI,MAAR,eAAQA,MAAR;AAAA,QAAgBC,QAAhB,eAAgBA,QAAhB;AAAA,QAA0BJ,WAA1B,eAA0BA,WAA1B;AAAA,QAAuCK,KAAvC,eAAuCA,KAAvC;AAAA,QAA8CC,YAA9C,eAA8CA,YAA9C;AAAA,QAA4DC,QAA5D,eAA4DA,QAA5D;AACA,QAAMC,EAAE,GAAG,CAAC,gBAAD,EAAmBL,MAAnB,SAA8BH,WAA9B,EAA2CS,MAA3C,CAAkDC,OAAlD,EAA2DC,IAA3D,CAAgE,GAAhE,CAAX;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEJ,QAAlB;AAA4B,MAAA,EAAE,EAAEC,EAAhC;AAAoC,MAAA,OAAO,EAAEJ,QAAQ,CAACQ,KAAT,CAAeZ,WAAf,EAA4BM,YAA5B,CAA7C;AAAwF,MAAA,QAAQ,EAAE,KAAKT,QAAvG;AAAiH,MAAA,SAAS,EAAE,KAAKgB,SAAjI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAO,MAAA,OAAO,EAAEL,EAAhB;AAAoB,MAAA,SAAS,EAAC,uBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAuDH,KAAvD,CAFF,CADF;AAMD,G;;;EA1BwCb,KAAK,CAACsB,a;;AAA5BlB,a,CAEZmB,S,GAAY;AACjBZ,EAAAA,MAAM,EAAEV,SAAS,CAACuB,MADD;AAEjBZ,EAAAA,QAAQ,EAAEV,kBAAkB,CAACuB,GAAnB,CAAuBC,UAFhB;AAGjBlB,EAAAA,WAAW,EAAEP,SAAS,CAAC0B,KAAV,CAAgBD,UAHZ;AAIjBb,EAAAA,KAAK,EAAEZ,SAAS,CAAC2B,IAAV,CAAeF,UAJL;AAKjBrB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC4B,IAAV,CAAeH,UALR;AAMjBZ,EAAAA,YAAY,EAAEb,SAAS,CAAC6B,IANP;AAOjBf,EAAAA,QAAQ,EAAEd,SAAS,CAAC6B;AAPH,C;SAFA1B,a","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Toggle from 'react-toggle';\n\nexport default class SettingToggle extends React.PureComponent {\n\n  static propTypes = {\n    prefix: PropTypes.string,\n    settings: ImmutablePropTypes.map.isRequired,\n    settingPath: PropTypes.array.isRequired,\n    label: PropTypes.node.isRequired,\n    onChange: PropTypes.func.isRequired,\n    defaultValue: PropTypes.bool,\n    disabled: PropTypes.bool,\n  }\n\n  onChange = ({ target }) => {\n    this.props.onChange(this.props.settingPath, target.checked);\n  }\n\n  render () {\n    const { prefix, settings, settingPath, label, defaultValue, disabled } = this.props;\n    const id = ['setting-toggle', prefix, ...settingPath].filter(Boolean).join('-');\n\n    return (\n      <div className='setting-toggle'>\n        <Toggle disabled={disabled} id={id} checked={settings.getIn(settingPath, defaultValue)} onChange={this.onChange} onKeyDown={this.onKeyDown} />\n        <label htmlFor={id} className='setting-toggle__label'>{label}</label>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}