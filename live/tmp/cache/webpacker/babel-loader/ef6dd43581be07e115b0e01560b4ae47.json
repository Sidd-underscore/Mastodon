{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/column.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ColumnHeader from './column_header';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { scrollTop as _scrollTop } from '../../../scroll';\nimport { isMobile } from '../../../is_mobile';\n\nvar Column = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Column, _React$PureComponent);\n\n  function Column() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleHeaderClick = function () {\n      var scrollable = _this.node.querySelector('.scrollable');\n\n      if (!scrollable) {\n        return;\n      }\n\n      _this._interruptScrollAnimation = _scrollTop(scrollable);\n    };\n\n    _this.handleScroll = debounce(function () {\n      if (typeof _this._interruptScrollAnimation !== 'undefined') {\n        _this._interruptScrollAnimation();\n      }\n    }, 200);\n\n    _this.setRef = function (c) {\n      _this.node = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = Column.prototype;\n\n  _proto.scrollTop = function scrollTop() {\n    var scrollable = this.node.querySelector('.scrollable');\n\n    if (!scrollable) {\n      return;\n    }\n\n    this._interruptScrollAnimation = _scrollTop(scrollable);\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        heading = _this$props.heading,\n        icon = _this$props.icon,\n        children = _this$props.children,\n        active = _this$props.active,\n        hideHeadingOnMobile = _this$props.hideHeadingOnMobile;\n    var showHeading = heading && (!hideHeadingOnMobile || hideHeadingOnMobile && !isMobile(window.innerWidth));\n    var columnHeaderId = showHeading && heading.replace(/ /g, '-');\n    var header = showHeading && /*#__PURE__*/React.createElement(ColumnHeader, {\n      icon: icon,\n      active: active,\n      type: heading,\n      onClick: this.handleHeaderClick,\n      columnHeaderId: columnHeaderId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.setRef,\n      role: \"region\",\n      \"aria-labelledby\": columnHeaderId,\n      className: \"column\",\n      onScroll: this.handleScroll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, header, children);\n  };\n\n  return Column;\n}(React.PureComponent);\n\nColumn.propTypes = {\n  heading: PropTypes.string,\n  icon: PropTypes.string,\n  children: PropTypes.node,\n  active: PropTypes.bool,\n  hideHeadingOnMobile: PropTypes.bool\n};\nexport { Column as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/column.js"],"names":["React","ColumnHeader","PropTypes","debounce","scrollTop","isMobile","Column","handleHeaderClick","scrollable","node","querySelector","_interruptScrollAnimation","handleScroll","setRef","c","render","props","heading","icon","children","active","hideHeadingOnMobile","showHeading","window","innerWidth","columnHeaderId","replace","header","PureComponent","propTypes","string","bool"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,SAAS,IAATA,UAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;IAEqBC,M;;;;;;;;;;;;UAUnBC,iB,GAAoB,YAAM;AACxB,UAAMC,UAAU,GAAG,MAAKC,IAAL,CAAUC,aAAV,CAAwB,aAAxB,CAAnB;;AAEA,UAAI,CAACF,UAAL,EAAiB;AACf;AACD;;AAED,YAAKG,yBAAL,GAAiCP,UAAS,CAACI,UAAD,CAA1C;AACD,K;;UAaDI,Y,GAAeT,QAAQ,CAAC,YAAM;AAC5B,UAAI,OAAO,MAAKQ,yBAAZ,KAA0C,WAA9C,EAA2D;AACzD,cAAKA,yBAAL;AACD;AACF,KAJsB,EAIpB,GAJoB,C;;UAMvBE,M,GAAS,UAACC,CAAD,EAAO;AACd,YAAKL,IAAL,GAAYK,CAAZ;AACD,K;;;;;;;SAnBDV,S,GAAA,qBAAa;AACX,QAAMI,UAAU,GAAG,KAAKC,IAAL,CAAUC,aAAV,CAAwB,aAAxB,CAAnB;;AAEA,QAAI,CAACF,UAAL,EAAiB;AACf;AACD;;AAED,SAAKG,yBAAL,GAAiCP,UAAS,CAACI,UAAD,CAA1C;AACD,G;;SAaDO,M,GAAA,kBAAU;AACR,sBAAiE,KAAKC,KAAtE;AAAA,QAAQC,OAAR,eAAQA,OAAR;AAAA,QAAiBC,IAAjB,eAAiBA,IAAjB;AAAA,QAAuBC,QAAvB,eAAuBA,QAAvB;AAAA,QAAiCC,MAAjC,eAAiCA,MAAjC;AAAA,QAAyCC,mBAAzC,eAAyCA,mBAAzC;AAEA,QAAMC,WAAW,GAAGL,OAAO,KAAK,CAACI,mBAAD,IAAyBA,mBAAmB,IAAI,CAAChB,QAAQ,CAACkB,MAAM,CAACC,UAAR,CAA9D,CAA3B;AAEA,QAAMC,cAAc,GAAGH,WAAW,IAAIL,OAAO,CAACS,OAAR,CAAgB,IAAhB,EAAsB,GAAtB,CAAtC;AACA,QAAMC,MAAM,GAAGL,WAAW,iBACxB,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEJ,IAApB;AAA0B,MAAA,MAAM,EAAEE,MAAlC;AAA0C,MAAA,IAAI,EAAEH,OAAhD;AAAyD,MAAA,OAAO,EAAE,KAAKV,iBAAvE;AAA0F,MAAA,cAAc,EAAEkB,cAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGA,wBACE;AACE,MAAA,GAAG,EAAE,KAAKZ,MADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,yBAAiBY,cAHnB;AAIE,MAAA,SAAS,EAAC,QAJZ;AAKE,MAAA,QAAQ,EAAE,KAAKb,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGe,MAPH,EAQGR,QARH,CADF;AAYD,G;;;EA9DiCnB,KAAK,CAAC4B,a;;AAArBtB,M,CAEZuB,S,GAAY;AACjBZ,EAAAA,OAAO,EAAEf,SAAS,CAAC4B,MADF;AAEjBZ,EAAAA,IAAI,EAAEhB,SAAS,CAAC4B,MAFC;AAGjBX,EAAAA,QAAQ,EAAEjB,SAAS,CAACO,IAHH;AAIjBW,EAAAA,MAAM,EAAElB,SAAS,CAAC6B,IAJD;AAKjBV,EAAAA,mBAAmB,EAAEnB,SAAS,CAAC6B;AALd,C;SAFAzB,M","sourcesContent":["import React from 'react';\nimport ColumnHeader from './column_header';\nimport PropTypes from 'prop-types';\nimport { debounce } from 'lodash';\nimport { scrollTop } from '../../../scroll';\nimport { isMobile } from '../../../is_mobile';\n\nexport default class Column extends React.PureComponent {\n\n  static propTypes = {\n    heading: PropTypes.string,\n    icon: PropTypes.string,\n    children: PropTypes.node,\n    active: PropTypes.bool,\n    hideHeadingOnMobile: PropTypes.bool,\n  };\n\n  handleHeaderClick = () => {\n    const scrollable = this.node.querySelector('.scrollable');\n\n    if (!scrollable) {\n      return;\n    }\n\n    this._interruptScrollAnimation = scrollTop(scrollable);\n  }\n\n  scrollTop () {\n    const scrollable = this.node.querySelector('.scrollable');\n\n    if (!scrollable) {\n      return;\n    }\n\n    this._interruptScrollAnimation = scrollTop(scrollable);\n  }\n\n\n  handleScroll = debounce(() => {\n    if (typeof this._interruptScrollAnimation !== 'undefined') {\n      this._interruptScrollAnimation();\n    }\n  }, 200)\n\n  setRef = (c) => {\n    this.node = c;\n  }\n\n  render () {\n    const { heading, icon, children, active, hideHeadingOnMobile } = this.props;\n\n    const showHeading = heading && (!hideHeadingOnMobile || (hideHeadingOnMobile && !isMobile(window.innerWidth)));\n\n    const columnHeaderId = showHeading && heading.replace(/ /g, '-');\n    const header = showHeading && (\n      <ColumnHeader icon={icon} active={active} type={heading} onClick={this.handleHeaderClick} columnHeaderId={columnHeaderId} />\n    );\n    return (\n      <div\n        ref={this.setRef}\n        role='region'\n        aria-labelledby={columnHeaderId}\n        className='column'\n        onScroll={this.handleScroll}\n      >\n        {header}\n        {children}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}