{"ast":null,"code":"var _excluded = [\"options\", \"expiresIn\", \"isMultiple\", \"onChangeOption\", \"onRemoveOption\", \"intl\"];\n\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/poll_form.js\",\n    _class,\n    _class2,\n    _temp,\n    _class3,\n    _class4,\n    _temp2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Icon from 'mastodon/components/icon';\nimport AutosuggestInput from 'mastodon/components/autosuggest_input';\nimport classNames from 'classnames';\nvar messages = defineMessages({\n  option_placeholder: {\n    \"id\": \"compose_form.poll.option_placeholder\",\n    \"defaultMessage\": \"Choice {number}\"\n  },\n  add_option: {\n    \"id\": \"compose_form.poll.add_option\",\n    \"defaultMessage\": \"Add a choice\"\n  },\n  remove_option: {\n    \"id\": \"compose_form.poll.remove_option\",\n    \"defaultMessage\": \"Remove this choice\"\n  },\n  poll_duration: {\n    \"id\": \"compose_form.poll.duration\",\n    \"defaultMessage\": \"Poll duration\"\n  },\n  switchToMultiple: {\n    \"id\": \"compose_form.poll.switch_to_multiple\",\n    \"defaultMessage\": \"Change poll to allow multiple choices\"\n  },\n  switchToSingle: {\n    \"id\": \"compose_form.poll.switch_to_single\",\n    \"defaultMessage\": \"Change poll to allow for a single choice\"\n  },\n  minutes: {\n    \"id\": \"intervals.full.minutes\",\n    \"defaultMessage\": \"{number, plural, one {# minute} other {# minutes}}\"\n  },\n  hours: {\n    \"id\": \"intervals.full.hours\",\n    \"defaultMessage\": \"{number, plural, one {# hour} other {# hours}}\"\n  },\n  days: {\n    \"id\": \"intervals.full.days\",\n    \"defaultMessage\": \"{number, plural, one {# day} other {# days}}\"\n  }\n});\n\nvar Option = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Option, _React$PureComponent);\n\n  function Option() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleOptionTitleChange = function (e) {\n      _this.props.onChange(_this.props.index, e.target.value);\n    };\n\n    _this.handleOptionRemove = function () {\n      _this.props.onRemove(_this.props.index);\n    };\n\n    _this.handleToggleMultiple = function (e) {\n      _this.props.onToggleMultiple();\n\n      e.preventDefault();\n      e.stopPropagation();\n    };\n\n    _this.handleCheckboxKeypress = function (e) {\n      if (e.key === 'Enter' || e.key === ' ') {\n        _this.handleToggleMultiple(e);\n      }\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.props.onClearSuggestions();\n    };\n\n    _this.onSuggestionsFetchRequested = function (token) {\n      _this.props.onFetchSuggestions(token);\n    };\n\n    _this.onSuggestionSelected = function (tokenStart, token, value) {\n      _this.props.onSuggestionSelected(tokenStart, token, value, ['poll', 'options', _this.props.index]);\n    };\n\n    return _this;\n  }\n\n  var _proto = Option.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        isPollMultiple = _this$props.isPollMultiple,\n        title = _this$props.title,\n        index = _this$props.index,\n        autoFocus = _this$props.autoFocus,\n        intl = _this$props.intl;\n    return /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"poll__option editable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classNames('poll__input', {\n        checkbox: isPollMultiple\n      }),\n      onClick: this.handleToggleMultiple,\n      onKeyPress: this.handleCheckboxKeypress,\n      role: \"button\",\n      tabIndex: \"0\",\n      title: intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple),\n      \"aria-label\": intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AutosuggestInput, {\n      placeholder: intl.formatMessage(messages.option_placeholder, {\n        number: index + 1\n      }),\n      maxLength: 50,\n      value: title,\n      onChange: this.handleOptionTitleChange,\n      suggestions: this.props.suggestions,\n      onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n      onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n      onSuggestionSelected: this.onSuggestionSelected,\n      searchTokens: [':'],\n      autoFocus: autoFocus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"poll__cancel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      disabled: index <= 1,\n      title: intl.formatMessage(messages.remove_option),\n      icon: \"times\",\n      onClick: this.handleOptionRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return Option;\n}(React.PureComponent), _class2.propTypes = {\n  title: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  isPollMultiple: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onToggleMultiple: PropTypes.func.isRequired,\n  suggestions: ImmutablePropTypes.list,\n  onClearSuggestions: PropTypes.func.isRequired,\n  onFetchSuggestions: PropTypes.func.isRequired,\n  onSuggestionSelected: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nvar PollForm = injectIntl(_class3 = (_temp2 = _class4 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(PollForm, _ImmutablePureCompone);\n\n  function PollForm() {\n    var _this2;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this2 = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this2.handleAddOption = function () {\n      _this2.props.onAddOption('');\n    };\n\n    _this2.handleSelectDuration = function (e) {\n      _this2.props.onChangeSettings(e.target.value, _this2.props.isMultiple);\n    };\n\n    _this2.handleToggleMultiple = function () {\n      _this2.props.onChangeSettings(_this2.props.expiresIn, !_this2.props.isMultiple);\n    };\n\n    return _this2;\n  }\n\n  var _proto2 = PollForm.prototype;\n\n  _proto2.render = function render() {\n    var _this3 = this;\n\n    var _this$props2 = this.props,\n        options = _this$props2.options,\n        expiresIn = _this$props2.expiresIn,\n        isMultiple = _this$props2.isMultiple,\n        onChangeOption = _this$props2.onChangeOption,\n        onRemoveOption = _this$props2.onRemoveOption,\n        intl = _this$props2.intl,\n        other = _objectWithoutPropertiesLoose(_this$props2, _excluded);\n\n    if (!options) {\n      return null;\n    }\n\n    var autoFocusIndex = options.indexOf('');\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"compose-form__poll-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }, options.map(function (title, i) {\n      return /*#__PURE__*/React.createElement(Option, _extends({\n        title: title,\n        key: i,\n        index: i,\n        onChange: onChangeOption,\n        onRemove: onRemoveOption,\n        isPollMultiple: isMultiple,\n        onToggleMultiple: _this3.handleToggleMultiple,\n        autoFocus: i === autoFocusIndex\n      }, other, {\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 38\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"poll__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: options.size >= 4,\n      className: \"button button-secondary\",\n      onClick: this.handleAddOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 115\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, _extends({}, messages.add_option, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 134\n      }\n    }))), /*#__PURE__*/React.createElement(\"select\", {\n      value: expiresIn,\n      onChange: this.handleSelectDuration,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 300,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.minutes, {\n      number: 5\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 1800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.minutes, {\n      number: 30\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 3600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.hours, {\n      number: 1\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 21600,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.hours, {\n      number: 6\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 86400,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 1\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 259200,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 3\n    })), /*#__PURE__*/React.createElement(\"option\", {\n      value: 604800,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, intl.formatMessage(messages.days, {\n      number: 7\n    })))));\n  };\n\n  return PollForm;\n}(ImmutablePureComponent), _class4.propTypes = {\n  options: ImmutablePropTypes.list,\n  expiresIn: PropTypes.number,\n  isMultiple: PropTypes.bool,\n  onChangeOption: PropTypes.func.isRequired,\n  onAddOption: PropTypes.func.isRequired,\n  onRemoveOption: PropTypes.func.isRequired,\n  onChangeSettings: PropTypes.func.isRequired,\n  suggestions: ImmutablePropTypes.list,\n  onClearSuggestions: PropTypes.func.isRequired,\n  onFetchSuggestions: PropTypes.func.isRequired,\n  onSuggestionSelected: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp2)) || _class3;\n\nexport { PollForm as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/compose/components/poll_form.js"],"names":["React","PropTypes","ImmutablePropTypes","ImmutablePureComponent","defineMessages","injectIntl","FormattedMessage","IconButton","Icon","AutosuggestInput","classNames","messages","option_placeholder","add_option","remove_option","poll_duration","switchToMultiple","switchToSingle","minutes","hours","days","Option","handleOptionTitleChange","e","props","onChange","index","target","value","handleOptionRemove","onRemove","handleToggleMultiple","onToggleMultiple","preventDefault","stopPropagation","handleCheckboxKeypress","key","onSuggestionsClearRequested","onClearSuggestions","onSuggestionsFetchRequested","token","onFetchSuggestions","onSuggestionSelected","tokenStart","render","isPollMultiple","title","autoFocus","intl","checkbox","formatMessage","number","suggestions","PureComponent","propTypes","string","isRequired","bool","func","list","object","PollForm","handleAddOption","onAddOption","handleSelectDuration","onChangeSettings","isMultiple","expiresIn","options","onChangeOption","onRemoveOption","other","autoFocusIndex","indexOf","map","i","size"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Icon from 'mastodon/components/icon';\nimport AutosuggestInput from 'mastodon/components/autosuggest_input';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  option_placeholder: { id: 'compose_form.poll.option_placeholder', defaultMessage: 'Choice {number}' },\n  add_option: { id: 'compose_form.poll.add_option', defaultMessage: 'Add a choice' },\n  remove_option: { id: 'compose_form.poll.remove_option', defaultMessage: 'Remove this choice' },\n  poll_duration: { id: 'compose_form.poll.duration', defaultMessage: 'Poll duration' },\n  switchToMultiple: { id: 'compose_form.poll.switch_to_multiple', defaultMessage: 'Change poll to allow multiple choices' },\n  switchToSingle: { id: 'compose_form.poll.switch_to_single', defaultMessage: 'Change poll to allow for a single choice' },\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n});\n\n@injectIntl\nclass Option extends React.PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    index: PropTypes.number.isRequired,\n    isPollMultiple: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onToggleMultiple: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleOptionTitleChange = e => {\n    this.props.onChange(this.props.index, e.target.value);\n  };\n\n  handleOptionRemove = () => {\n    this.props.onRemove(this.props.index);\n  };\n\n\n  handleToggleMultiple = e => {\n    this.props.onToggleMultiple();\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleCheckboxKeypress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.handleToggleMultiple(e);\n    }\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  }\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  }\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['poll', 'options', this.props.index]);\n  }\n\n  render () {\n    const { isPollMultiple, title, index, autoFocus, intl } = this.props;\n\n    return (\n      <li>\n        <label className='poll__option editable'>\n          <span\n            className={classNames('poll__input', { checkbox: isPollMultiple })}\n            onClick={this.handleToggleMultiple}\n            onKeyPress={this.handleCheckboxKeypress}\n            role='button'\n            tabIndex='0'\n            title={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n            aria-label={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n          />\n\n          <AutosuggestInput\n            placeholder={intl.formatMessage(messages.option_placeholder, { number: index + 1 })}\n            maxLength={50}\n            value={title}\n            onChange={this.handleOptionTitleChange}\n            suggestions={this.props.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            searchTokens={[':']}\n            autoFocus={autoFocus}\n          />\n        </label>\n\n        <div className='poll__cancel'>\n          <IconButton disabled={index <= 1} title={intl.formatMessage(messages.remove_option)} icon='times' onClick={this.handleOptionRemove} />\n        </div>\n      </li>\n    );\n  }\n\n}\n\nexport default\n@injectIntl\nclass PollForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    options: ImmutablePropTypes.list,\n    expiresIn: PropTypes.number,\n    isMultiple: PropTypes.bool,\n    onChangeOption: PropTypes.func.isRequired,\n    onAddOption: PropTypes.func.isRequired,\n    onRemoveOption: PropTypes.func.isRequired,\n    onChangeSettings: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleAddOption = () => {\n    this.props.onAddOption('');\n  };\n\n  handleSelectDuration = e => {\n    this.props.onChangeSettings(e.target.value, this.props.isMultiple);\n  };\n\n  handleToggleMultiple = () => {\n    this.props.onChangeSettings(this.props.expiresIn, !this.props.isMultiple);\n  };\n\n  render () {\n    const { options, expiresIn, isMultiple, onChangeOption, onRemoveOption, intl, ...other } = this.props;\n\n    if (!options) {\n      return null;\n    }\n\n    const autoFocusIndex = options.indexOf('');\n\n    return (\n      <div className='compose-form__poll-wrapper'>\n        <ul>\n          {options.map((title, i) => <Option title={title} key={i} index={i} onChange={onChangeOption} onRemove={onRemoveOption} isPollMultiple={isMultiple} onToggleMultiple={this.handleToggleMultiple} autoFocus={i === autoFocusIndex} {...other} />)}\n        </ul>\n\n        <div className='poll__footer'>\n          <button disabled={options.size >= 4} className='button button-secondary' onClick={this.handleAddOption}><Icon id='plus' /> <FormattedMessage {...messages.add_option} /></button>\n\n          {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n          <select value={expiresIn} onChange={this.handleSelectDuration}>\n            <option value={300}>{intl.formatMessage(messages.minutes, { number: 5 })}</option>\n            <option value={1800}>{intl.formatMessage(messages.minutes, { number: 30 })}</option>\n            <option value={3600}>{intl.formatMessage(messages.hours, { number: 1 })}</option>\n            <option value={21600}>{intl.formatMessage(messages.hours, { number: 6 })}</option>\n            <option value={86400}>{intl.formatMessage(messages.days, { number: 1 })}</option>\n            <option value={259200}>{intl.formatMessage(messages.days, { number: 3 })}</option>\n            <option value={604800}>{intl.formatMessage(messages.days, { number: 7 })}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"compose_form.poll.option_placeholder","defaultMessage":"Choice {number}"},{"id":"compose_form.poll.add_option","defaultMessage":"Add a choice"},{"id":"compose_form.poll.remove_option","defaultMessage":"Remove this choice"},{"id":"compose_form.poll.duration","defaultMessage":"Poll duration"},{"id":"compose_form.poll.switch_to_multiple","defaultMessage":"Change poll to allow multiple choices"},{"id":"compose_form.poll.switch_to_single","defaultMessage":"Change poll to allow for a single choice"},{"id":"intervals.full.minutes","defaultMessage":"{number, plural, one {# minute} other {# minutes}}"},{"id":"intervals.full.hours","defaultMessage":"{number, plural, one {# hour} other {# hours}}"},{"id":"intervals.full.days","defaultMessage":"{number, plural, one {# day} other {# days}}"}]}},"sourceType":"module"}