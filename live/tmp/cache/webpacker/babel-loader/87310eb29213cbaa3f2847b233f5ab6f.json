{"ast":null,"code":"import api, { getLinks } from '../api';\nimport { fetchRelationships } from './accounts';\nimport { importFetchedAccounts } from './importer';\nimport { openModal } from './modal';\nexport var MUTES_FETCH_REQUEST = 'MUTES_FETCH_REQUEST';\nexport var MUTES_FETCH_SUCCESS = 'MUTES_FETCH_SUCCESS';\nexport var MUTES_FETCH_FAIL = 'MUTES_FETCH_FAIL';\nexport var MUTES_EXPAND_REQUEST = 'MUTES_EXPAND_REQUEST';\nexport var MUTES_EXPAND_SUCCESS = 'MUTES_EXPAND_SUCCESS';\nexport var MUTES_EXPAND_FAIL = 'MUTES_EXPAND_FAIL';\nexport var MUTES_INIT_MODAL = 'MUTES_INIT_MODAL';\nexport var MUTES_TOGGLE_HIDE_NOTIFICATIONS = 'MUTES_TOGGLE_HIDE_NOTIFICATIONS';\nexport var MUTES_CHANGE_DURATION = 'MUTES_CHANGE_DURATION';\nexport function fetchMutes() {\n  return function (dispatch, getState) {\n    dispatch(fetchMutesRequest());\n    api(getState).get('/api/v1/mutes').then(function (response) {\n      var next = getLinks(response).refs.find(function (link) {\n        return link.rel === 'next';\n      });\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(function (item) {\n        return item.id;\n      })));\n    }).catch(function (error) {\n      return dispatch(fetchMutesFail(error));\n    });\n  };\n}\n;\nexport function fetchMutesRequest() {\n  return {\n    type: MUTES_FETCH_REQUEST\n  };\n}\n;\nexport function fetchMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_FETCH_SUCCESS,\n    accounts,\n    next\n  };\n}\n;\nexport function fetchMutesFail(error) {\n  return {\n    type: MUTES_FETCH_FAIL,\n    error\n  };\n}\n;\nexport function expandMutes() {\n  return function (dispatch, getState) {\n    var url = getState().getIn(['user_lists', 'mutes', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandMutesRequest());\n    api(getState).get(url).then(function (response) {\n      var next = getLinks(response).refs.find(function (link) {\n        return link.rel === 'next';\n      });\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(function (item) {\n        return item.id;\n      })));\n    }).catch(function (error) {\n      return dispatch(expandMutesFail(error));\n    });\n  };\n}\n;\nexport function expandMutesRequest() {\n  return {\n    type: MUTES_EXPAND_REQUEST\n  };\n}\n;\nexport function expandMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_EXPAND_SUCCESS,\n    accounts,\n    next\n  };\n}\n;\nexport function expandMutesFail(error) {\n  return {\n    type: MUTES_EXPAND_FAIL,\n    error\n  };\n}\n;\nexport function initMuteModal(account) {\n  return function (dispatch) {\n    dispatch({\n      type: MUTES_INIT_MODAL,\n      account\n    });\n    dispatch(openModal('MUTE'));\n  };\n}\nexport function toggleHideNotifications() {\n  return function (dispatch) {\n    dispatch({\n      type: MUTES_TOGGLE_HIDE_NOTIFICATIONS\n    });\n  };\n}\nexport function changeMuteDuration(duration) {\n  return function (dispatch) {\n    dispatch({\n      type: MUTES_CHANGE_DURATION,\n      duration\n    });\n  };\n}","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/mutes.js"],"names":["api","getLinks","fetchRelationships","importFetchedAccounts","openModal","MUTES_FETCH_REQUEST","MUTES_FETCH_SUCCESS","MUTES_FETCH_FAIL","MUTES_EXPAND_REQUEST","MUTES_EXPAND_SUCCESS","MUTES_EXPAND_FAIL","MUTES_INIT_MODAL","MUTES_TOGGLE_HIDE_NOTIFICATIONS","MUTES_CHANGE_DURATION","fetchMutes","dispatch","getState","fetchMutesRequest","get","then","response","next","refs","find","link","rel","data","fetchMutesSuccess","uri","map","item","id","catch","error","fetchMutesFail","type","accounts","expandMutes","url","getIn","expandMutesRequest","expandMutesSuccess","expandMutesFail","initMuteModal","account","toggleHideNotifications","changeMuteDuration","duration"],"mappings":"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","sourcesContent":["import api, { getLinks } from '../api';\nimport { fetchRelationships } from './accounts';\nimport { importFetchedAccounts } from './importer';\nimport { openModal } from './modal';\n\nexport const MUTES_FETCH_REQUEST = 'MUTES_FETCH_REQUEST';\nexport const MUTES_FETCH_SUCCESS = 'MUTES_FETCH_SUCCESS';\nexport const MUTES_FETCH_FAIL    = 'MUTES_FETCH_FAIL';\n\nexport const MUTES_EXPAND_REQUEST = 'MUTES_EXPAND_REQUEST';\nexport const MUTES_EXPAND_SUCCESS = 'MUTES_EXPAND_SUCCESS';\nexport const MUTES_EXPAND_FAIL    = 'MUTES_EXPAND_FAIL';\n\nexport const MUTES_INIT_MODAL = 'MUTES_INIT_MODAL';\nexport const MUTES_TOGGLE_HIDE_NOTIFICATIONS = 'MUTES_TOGGLE_HIDE_NOTIFICATIONS';\nexport const MUTES_CHANGE_DURATION = 'MUTES_CHANGE_DURATION';\n\nexport function fetchMutes() {\n  return (dispatch, getState) => {\n    dispatch(fetchMutesRequest());\n\n    api(getState).get('/api/v1/mutes').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(fetchMutesFail(error)));\n  };\n};\n\nexport function fetchMutesRequest() {\n  return {\n    type: MUTES_FETCH_REQUEST,\n  };\n};\n\nexport function fetchMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_FETCH_SUCCESS,\n    accounts,\n    next,\n  };\n};\n\nexport function fetchMutesFail(error) {\n  return {\n    type: MUTES_FETCH_FAIL,\n    error,\n  };\n};\n\nexport function expandMutes() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'mutes', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandMutesRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(expandMutesFail(error)));\n  };\n};\n\nexport function expandMutesRequest() {\n  return {\n    type: MUTES_EXPAND_REQUEST,\n  };\n};\n\nexport function expandMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_EXPAND_SUCCESS,\n    accounts,\n    next,\n  };\n};\n\nexport function expandMutesFail(error) {\n  return {\n    type: MUTES_EXPAND_FAIL,\n    error,\n  };\n};\n\nexport function initMuteModal(account) {\n  return dispatch => {\n    dispatch({\n      type: MUTES_INIT_MODAL,\n      account,\n    });\n\n    dispatch(openModal('MUTE'));\n  };\n}\n\nexport function toggleHideNotifications() {\n  return dispatch => {\n    dispatch({ type: MUTES_TOGGLE_HIDE_NOTIFICATIONS });\n  };\n}\n\nexport function changeMuteDuration(duration) {\n  return dispatch => {\n    dispatch({\n      type: MUTES_CHANGE_DURATION,\n      duration,\n    });\n  };\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}