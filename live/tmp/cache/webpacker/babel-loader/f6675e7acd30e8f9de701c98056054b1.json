{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/avatar.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { autoPlayGif } from '../initial_state';\n\nvar Avatar = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Avatar, _React$PureComponent);\n\n  function Avatar() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      hovering: false\n    };\n\n    _this.handleMouseEnter = function () {\n      if (_this.props.animate) return;\n\n      _this.setState({\n        hovering: true\n      });\n    };\n\n    _this.handleMouseLeave = function () {\n      if (_this.props.animate) return;\n\n      _this.setState({\n        hovering: false\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Avatar.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        account = _this$props.account,\n        size = _this$props.size,\n        animate = _this$props.animate,\n        inline = _this$props.inline;\n    var hovering = this.state.hovering;\n    var src = account.get('avatar');\n    var staticSrc = account.get('avatar_static');\n    var className = 'account__avatar';\n\n    if (inline) {\n      className = className + ' account__avatar-inline';\n    }\n\n    var style = _extends({}, this.props.style, {\n      width: size + \"px\",\n      height: size + \"px\",\n      backgroundSize: size + \"px \" + size + \"px\"\n    });\n\n    if (hovering || animate) {\n      style.backgroundImage = \"url(\" + src + \")\";\n    } else {\n      style.backgroundImage = \"url(\" + staticSrc + \")\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: className,\n      onMouseEnter: this.handleMouseEnter,\n      onMouseLeave: this.handleMouseLeave,\n      style: style,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return Avatar;\n}(React.PureComponent);\n\nAvatar.propTypes = {\n  account: ImmutablePropTypes.map.isRequired,\n  size: PropTypes.number.isRequired,\n  style: PropTypes.object,\n  inline: PropTypes.bool,\n  animate: PropTypes.bool\n};\nAvatar.defaultProps = {\n  animate: autoPlayGif,\n  size: 20,\n  inline: false\n};\nexport { Avatar as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/avatar.js"],"names":["React","PropTypes","ImmutablePropTypes","autoPlayGif","Avatar","state","hovering","handleMouseEnter","props","animate","setState","handleMouseLeave","render","account","size","inline","src","get","staticSrc","className","style","width","height","backgroundSize","backgroundImage","PureComponent","propTypes","map","isRequired","number","object","bool","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AACA,SAASC,WAAT,QAA4B,kBAA5B;;IAEqBC,M;;;;;;;;;;;UAgBnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRC,gB,GAAmB,YAAM;AACvB,UAAI,MAAKC,KAAL,CAAWC,OAAf,EAAwB;;AACxB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,K;;UAEDK,gB,GAAmB,YAAM;AACvB,UAAI,MAAKH,KAAL,CAAWC,OAAf,EAAwB;;AACxB,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACD,K;;;;;;;SAEDM,M,GAAA,kBAAU;AACR,sBAA2C,KAAKJ,KAAhD;AAAA,QAAQK,OAAR,eAAQA,OAAR;AAAA,QAAiBC,IAAjB,eAAiBA,IAAjB;AAAA,QAAuBL,OAAvB,eAAuBA,OAAvB;AAAA,QAAgCM,MAAhC,eAAgCA,MAAhC;AACA,QAAQT,QAAR,GAAqB,KAAKD,KAA1B,CAAQC,QAAR;AAEA,QAAMU,GAAG,GAAGH,OAAO,CAACI,GAAR,CAAY,QAAZ,CAAZ;AACA,QAAMC,SAAS,GAAGL,OAAO,CAACI,GAAR,CAAY,eAAZ,CAAlB;AAEA,QAAIE,SAAS,GAAG,iBAAhB;;AAEA,QAAIJ,MAAJ,EAAY;AACVI,MAAAA,SAAS,GAAGA,SAAS,GAAG,yBAAxB;AACD;;AAED,QAAMC,KAAK,gBACN,KAAKZ,KAAL,CAAWY,KADL;AAETC,MAAAA,KAAK,EAAKP,IAAL,OAFI;AAGTQ,MAAAA,MAAM,EAAKR,IAAL,OAHG;AAITS,MAAAA,cAAc,EAAKT,IAAL,WAAeA,IAAf;AAJL,MAAX;;AAOA,QAAIR,QAAQ,IAAIG,OAAhB,EAAyB;AACvBW,MAAAA,KAAK,CAACI,eAAN,YAA+BR,GAA/B;AACD,KAFD,MAEO;AACLI,MAAAA,KAAK,CAACI,eAAN,YAA+BN,SAA/B;AACD;;AAED,wBACE;AACE,MAAA,SAAS,EAAEC,SADb;AAEE,MAAA,YAAY,EAAE,KAAKZ,gBAFrB;AAGE,MAAA,YAAY,EAAE,KAAKI,gBAHrB;AAIE,MAAA,KAAK,EAAES,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQD,G;;;EAhEiCpB,KAAK,CAACyB,a;;AAArBrB,M,CAEZsB,S,GAAY;AACjBb,EAAAA,OAAO,EAAEX,kBAAkB,CAACyB,GAAnB,CAAuBC,UADf;AAEjBd,EAAAA,IAAI,EAAEb,SAAS,CAAC4B,MAAV,CAAiBD,UAFN;AAGjBR,EAAAA,KAAK,EAAEnB,SAAS,CAAC6B,MAHA;AAIjBf,EAAAA,MAAM,EAAEd,SAAS,CAAC8B,IAJD;AAKjBtB,EAAAA,OAAO,EAAER,SAAS,CAAC8B;AALF,C;AAFA3B,M,CAUZ4B,Y,GAAe;AACpBvB,EAAAA,OAAO,EAAEN,WADW;AAEpBW,EAAAA,IAAI,EAAE,EAFc;AAGpBC,EAAAA,MAAM,EAAE;AAHY,C;SAVHX,M","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { autoPlayGif } from '../initial_state';\n\nexport default class Avatar extends React.PureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    size: PropTypes.number.isRequired,\n    style: PropTypes.object,\n    inline: PropTypes.bool,\n    animate: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    animate: autoPlayGif,\n    size: 20,\n    inline: false,\n  };\n\n  state = {\n    hovering: false,\n  };\n\n  handleMouseEnter = () => {\n    if (this.props.animate) return;\n    this.setState({ hovering: true });\n  }\n\n  handleMouseLeave = () => {\n    if (this.props.animate) return;\n    this.setState({ hovering: false });\n  }\n\n  render () {\n    const { account, size, animate, inline } = this.props;\n    const { hovering } = this.state;\n\n    const src = account.get('avatar');\n    const staticSrc = account.get('avatar_static');\n\n    let className = 'account__avatar';\n\n    if (inline) {\n      className = className + ' account__avatar-inline';\n    }\n\n    const style = {\n      ...this.props.style,\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundSize: `${size}px ${size}px`,\n    };\n\n    if (hovering || animate) {\n      style.backgroundImage = `url(${src})`;\n    } else {\n      style.backgroundImage = `url(${staticSrc})`;\n    }\n\n    return (\n      <div\n        className={className}\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n        style={style}\n      />\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}