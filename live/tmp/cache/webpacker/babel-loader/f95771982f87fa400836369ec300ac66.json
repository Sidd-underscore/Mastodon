{"ast":null,"code":"var _excluded = [\"conversations\", \"onLoadMore\"];\nvar _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/direct_timeline/components/conversations_list.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ConversationContainer from '../containers/conversation_container';\nimport ScrollableList from '../../../components/scrollable_list';\nimport { debounce } from 'lodash';\n\nvar ConversationsList = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ConversationsList, _ImmutablePureCompone);\n\n  function ConversationsList() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.getCurrentIndex = function (id) {\n      return _this.props.conversations.findIndex(function (x) {\n        return x.get('id') === id;\n      });\n    };\n\n    _this.handleMoveUp = function (id) {\n      var elementIndex = _this.getCurrentIndex(id) - 1;\n\n      _this._selectChild(elementIndex, true);\n    };\n\n    _this.handleMoveDown = function (id) {\n      var elementIndex = _this.getCurrentIndex(id) + 1;\n\n      _this._selectChild(elementIndex, false);\n    };\n\n    _this.setRef = function (c) {\n      _this.node = c;\n    };\n\n    _this.handleLoadOlder = debounce(function () {\n      var last = _this.props.conversations.last();\n\n      if (last && last.get('last_status')) {\n        _this.props.onLoadMore(last.get('last_status'));\n      }\n    }, 300, {\n      leading: true\n    });\n    return _this;\n  }\n\n  var _proto = ConversationsList.prototype;\n\n  _proto._selectChild = function _selectChild(index, align_top) {\n    var container = this.node.node;\n    var element = container.querySelector(\"article:nth-of-type(\" + (index + 1) + \") .focusable\");\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n\n      element.focus();\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        conversations = _this$props.conversations,\n        onLoadMore = _this$props.onLoadMore,\n        other = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    return /*#__PURE__*/React.createElement(ScrollableList, _extends({}, other, {\n      onLoadMore: onLoadMore && this.handleLoadOlder,\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }), conversations.map(function (item) {\n      return /*#__PURE__*/React.createElement(ConversationContainer, {\n        key: item.get('id'),\n        conversationId: item.get('id'),\n        onMoveUp: _this2.handleMoveUp,\n        onMoveDown: _this2.handleMoveDown,\n        scrollKey: _this2.props.scrollKey,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      });\n    }));\n  };\n\n  return ConversationsList;\n}(ImmutablePureComponent);\n\nConversationsList.propTypes = {\n  conversations: ImmutablePropTypes.list.isRequired,\n  scrollKey: PropTypes.string.isRequired,\n  hasMore: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  onLoadMore: PropTypes.func\n};\nexport { ConversationsList as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/direct_timeline/components/conversations_list.js"],"names":["React","PropTypes","ImmutablePropTypes","ImmutablePureComponent","ConversationContainer","ScrollableList","debounce","ConversationsList","getCurrentIndex","id","props","conversations","findIndex","x","get","handleMoveUp","elementIndex","_selectChild","handleMoveDown","setRef","c","node","handleLoadOlder","last","onLoadMore","leading","index","align_top","container","element","querySelector","scrollTop","offsetTop","scrollIntoView","clientHeight","offsetHeight","focus","render","other","map","item","scrollKey","propTypes","list","isRequired","string","hasMore","bool","isLoading","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ConversationContainer from '../containers/conversation_container';\nimport ScrollableList from '../../../components/scrollable_list';\nimport { debounce } from 'lodash';\n\nexport default class ConversationsList extends ImmutablePureComponent {\n\n  static propTypes = {\n    conversations: ImmutablePropTypes.list.isRequired,\n    scrollKey: PropTypes.string.isRequired,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n    onLoadMore: PropTypes.func,\n  };\n\n  getCurrentIndex = id => this.props.conversations.findIndex(x => x.get('id') === id)\n\n  handleMoveUp = id => {\n    const elementIndex = this.getCurrentIndex(id) - 1;\n    this._selectChild(elementIndex, true);\n  }\n\n  handleMoveDown = id => {\n    const elementIndex = this.getCurrentIndex(id) + 1;\n    this._selectChild(elementIndex, false);\n  }\n\n  _selectChild (index, align_top) {\n    const container = this.node.node;\n    const element = container.querySelector(`article:nth-of-type(${index + 1}) .focusable`);\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n  }\n\n  handleLoadOlder = debounce(() => {\n    const last = this.props.conversations.last();\n\n    if (last && last.get('last_status')) {\n      this.props.onLoadMore(last.get('last_status'));\n    }\n  }, 300, { leading: true })\n\n  render () {\n    const { conversations, onLoadMore, ...other } = this.props;\n\n    return (\n      <ScrollableList {...other} onLoadMore={onLoadMore && this.handleLoadOlder} ref={this.setRef}>\n        {conversations.map(item => (\n          <ConversationContainer\n            key={item.get('id')}\n            conversationId={item.get('id')}\n            onMoveUp={this.handleMoveUp}\n            onMoveDown={this.handleMoveDown}\n            scrollKey={this.props.scrollKey}\n          />\n        ))}\n      </ScrollableList>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}