{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/components/account.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from '../../../selectors';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\nvar messages = defineMessages({\n  remove: {\n    \"id\": \"lists.account.remove\",\n    \"defaultMessage\": \"Remove from list\"\n  },\n  add: {\n    \"id\": \"lists.account.add\",\n    \"defaultMessage\": \"Add to list\"\n  }\n});\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getAccount = makeGetAccount();\n\n  var mapStateToProps = function mapStateToProps(state, _ref) {\n    var accountId = _ref.accountId,\n        added = _ref.added;\n    return {\n      account: getAccount(state, accountId),\n      added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {\n  var accountId = _ref2.accountId;\n  return {\n    onRemove: function onRemove() {\n      return dispatch(removeFromListEditor(accountId));\n    },\n    onAdd: function onAdd() {\n      return dispatch(addToListEditor(accountId));\n    }\n  };\n};\n\nvar Account = (_dec = connect(makeMapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Account, _ImmutablePureCompone);\n\n  function Account() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = Account.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        account = _this$props.account,\n        intl = _this$props.intl,\n        onRemove = _this$props.onRemove,\n        onAdd = _this$props.onAdd,\n        added = _this$props.added;\n    var button;\n\n    if (added) {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"times\",\n        title: intl.formatMessage(messages.remove),\n        onClick: onRemove,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 16\n        }\n      });\n    } else {\n      button = /*#__PURE__*/React.createElement(IconButton, {\n        icon: \"plus\",\n        title: intl.formatMessage(messages.add),\n        onClick: onAdd,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 16\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__avatar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: account,\n      size: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__relationship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, button)));\n  };\n\n  return Account;\n}(ImmutablePureComponent), _class2.propTypes = {\n  account: ImmutablePropTypes.map.isRequired,\n  intl: PropTypes.object.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired,\n  added: PropTypes.bool\n}, _class2.defaultProps = {\n  added: false\n}, _temp)) || _class) || _class);\nexport { Account as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/list_editor/components/account.js"],"names":["React","PropTypes","connect","makeGetAccount","ImmutablePureComponent","ImmutablePropTypes","Avatar","DisplayName","IconButton","defineMessages","injectIntl","removeFromListEditor","addToListEditor","messages","remove","add","makeMapStateToProps","getAccount","mapStateToProps","state","accountId","added","account","getIn","includes","mapDispatchToProps","dispatch","onRemove","onAdd","Account","render","props","intl","button","formatMessage","propTypes","map","isRequired","object","func","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { makeGetAccount } from '../../../selectors';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport IconButton from '../../../components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { removeFromListEditor, addToListEditor } from '../../../actions/lists';\n\nconst messages = defineMessages({\n  remove: { id: 'lists.account.remove', defaultMessage: 'Remove from list' },\n  add: { id: 'lists.account.add', defaultMessage: 'Add to list' },\n});\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { accountId, added }) => ({\n    account: getAccount(state, accountId),\n    added: typeof added === 'undefined' ? state.getIn(['listEditor', 'accounts', 'items']).includes(accountId) : added,\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = (dispatch, { accountId }) => ({\n  onRemove: () => dispatch(removeFromListEditor(accountId)),\n  onAdd: () => dispatch(addToListEditor(accountId)),\n});\n\nexport default @connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nclass Account extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onAdd: PropTypes.func.isRequired,\n    added: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    added: false,\n  };\n\n  render () {\n    const { account, intl, onRemove, onAdd, added } = this.props;\n\n    let button;\n\n    if (added) {\n      button = <IconButton icon='times' title={intl.formatMessage(messages.remove)} onClick={onRemove} />;\n    } else {\n      button = <IconButton icon='plus' title={intl.formatMessage(messages.add)} onClick={onAdd} />;\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <div className='account__display-name'>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </div>\n\n          <div className='account__relationship'>\n            {button}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lists.account.remove","defaultMessage":"Remove from list"},{"id":"lists.account.add","defaultMessage":"Add to list"}]}},"sourceType":"module"}