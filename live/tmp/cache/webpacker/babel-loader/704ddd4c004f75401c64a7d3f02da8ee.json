{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/report/components/status_check_box.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Toggle from 'react-toggle';\nimport noop from 'lodash/noop';\nimport StatusContent from '../../../components/status_content';\nimport { MediaGallery, Video } from '../../ui/util/async-components';\nimport Bundle from '../../ui/components/bundle';\n\nvar StatusCheckBox = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(StatusCheckBox, _React$PureComponent);\n\n  function StatusCheckBox() {\n    return _React$PureComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = StatusCheckBox.prototype;\n\n  _proto.render = function render() {\n    var _this = this;\n\n    var _this$props = this.props,\n        status = _this$props.status,\n        checked = _this$props.checked,\n        onToggle = _this$props.onToggle,\n        disabled = _this$props.disabled;\n    var media = null;\n\n    if (status.get('reblog')) {\n      return null;\n    }\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(function (item) {\n        return item.get('type') === 'unknown';\n      })) {} else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        var video = status.getIn(['media_attachments', 0]);\n        media = /*#__PURE__*/React.createElement(Bundle, {\n          fetchComponent: Video,\n          loading: this.renderLoadingVideoPlayer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, function (Component) {\n          return /*#__PURE__*/React.createElement(Component, {\n            preview: video.get('preview_url'),\n            blurhash: video.get('blurhash'),\n            src: video.get('url'),\n            alt: video.get('description'),\n            width: 239,\n            height: 110,\n            inline: true,\n            sensitive: status.get('sensitive'),\n            onOpenVideo: noop,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }\n          });\n        });\n      } else {\n        media = /*#__PURE__*/React.createElement(Bundle, {\n          fetchComponent: MediaGallery,\n          loading: this.renderLoadingMediaGallery,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }\n        }, function (Component) {\n          return /*#__PURE__*/React.createElement(Component, {\n            media: status.get('media_attachments'),\n            sensitive: status.get('sensitive'),\n            height: 110,\n            onOpenMedia: noop,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 27\n            }\n          });\n        });\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status-check-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status-check-box__status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StatusContent, {\n      status: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), media), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status-check-box-toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Toggle, {\n      checked: checked,\n      onChange: onToggle,\n      disabled: disabled,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return StatusCheckBox;\n}(React.PureComponent);\n\nStatusCheckBox.propTypes = {\n  status: ImmutablePropTypes.map.isRequired,\n  checked: PropTypes.bool,\n  onToggle: PropTypes.func.isRequired,\n  disabled: PropTypes.bool\n};\nexport { StatusCheckBox as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/report/components/status_check_box.js"],"names":["React","PropTypes","ImmutablePropTypes","Toggle","noop","StatusContent","MediaGallery","Video","Bundle","StatusCheckBox","render","props","status","checked","onToggle","disabled","media","get","size","some","item","getIn","video","renderLoadingVideoPlayer","Component","renderLoadingMediaGallery","PureComponent","propTypes","map","isRequired","bool","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Toggle from 'react-toggle';\nimport noop from 'lodash/noop';\nimport StatusContent from '../../../components/status_content';\nimport { MediaGallery, Video } from '../../ui/util/async-components';\nimport Bundle from '../../ui/components/bundle';\n\nexport default class StatusCheckBox extends React.PureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    checked: PropTypes.bool,\n    onToggle: PropTypes.func.isRequired,\n    disabled: PropTypes.bool,\n  };\n\n  render () {\n    const { status, checked, onToggle, disabled } = this.props;\n    let media = null;\n\n    if (status.get('reblog')) {\n      return null;\n    }\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const video = status.getIn(['media_attachments', 0]);\n\n        media = (\n          <Bundle fetchComponent={Video} loading={this.renderLoadingVideoPlayer} >\n            {Component => (\n              <Component\n                preview={video.get('preview_url')}\n                blurhash={video.get('blurhash')}\n                src={video.get('url')}\n                alt={video.get('description')}\n                width={239}\n                height={110}\n                inline\n                sensitive={status.get('sensitive')}\n                onOpenVideo={noop}\n              />\n            )}\n          </Bundle>\n        );\n      } else {\n        media = (\n          <Bundle fetchComponent={MediaGallery} loading={this.renderLoadingMediaGallery} >\n            {Component => <Component media={status.get('media_attachments')} sensitive={status.get('sensitive')} height={110} onOpenMedia={noop} />}\n          </Bundle>\n        );\n      }\n    }\n\n    return (\n      <div className='status-check-box'>\n        <div className='status-check-box__status'>\n          <StatusContent status={status} />\n          {media}\n        </div>\n\n        <div className='status-check-box-toggle'>\n          <Toggle checked={checked} onChange={onToggle} disabled={disabled} />\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}