{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/standalone/hashtag_timeline/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { expandHashtagTimeline } from 'mastodon/actions/timelines';\nimport Masonry from 'react-masonry-infinite';\nimport { List as ImmutableList } from 'immutable';\nimport DetailedStatusContainer from 'mastodon/features/status/containers/detailed_status_container';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from 'mastodon/components/loading_indicator';\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var hashtag = _ref.hashtag;\n  return {\n    statusIds: state.getIn(['timelines', \"hashtag:\" + hashtag, 'items'], ImmutableList()),\n    isLoading: state.getIn(['timelines', \"hashtag:\" + hashtag, 'isLoading'], false),\n    hasMore: state.getIn(['timelines', \"hashtag:\" + hashtag, 'hasMore'], false)\n  };\n};\n\nvar HashtagTimeline = (_dec = connect(mapStateToProps), _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(HashtagTimeline, _React$PureComponent);\n\n  function HashtagTimeline() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleLoadMore = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          hashtag = _this$props.hashtag,\n          local = _this$props.local,\n          statusIds = _this$props.statusIds;\n      var maxId = statusIds.last();\n\n      if (maxId) {\n        dispatch(expandHashtagTimeline(hashtag, {\n          maxId,\n          local\n        }));\n      }\n    };\n\n    _this.setRef = function (c) {\n      _this.masonry = c;\n    };\n\n    _this.handleHeightChange = debounce(function () {\n      if (!_this.masonry) {\n        return;\n      }\n\n      _this.masonry.forcePack();\n    }, 50);\n    return _this;\n  }\n\n  var _proto = HashtagTimeline.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    var _this$props2 = this.props,\n        dispatch = _this$props2.dispatch,\n        hashtag = _this$props2.hashtag,\n        local = _this$props2.local;\n    dispatch(expandHashtagTimeline(hashtag, {\n      local\n    }));\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props3 = this.props,\n        statusIds = _this$props3.statusIds,\n        hasMore = _this$props3.hasMore,\n        isLoading = _this$props3.isLoading;\n    var sizes = [{\n      columns: 1,\n      gutter: 0\n    }, {\n      mq: '415px',\n      columns: 1,\n      gutter: 10\n    }, {\n      mq: '640px',\n      columns: 2,\n      gutter: 10\n    }, {\n      mq: '960px',\n      columns: 3,\n      gutter: 10\n    }, {\n      mq: '1255px',\n      columns: 3,\n      gutter: 10\n    }];\n    var loader = isLoading && statusIds.isEmpty() ? /*#__PURE__*/React.createElement(LoadingIndicator, {\n      key: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 57\n      }\n    }) : undefined;\n    return /*#__PURE__*/React.createElement(Masonry, {\n      ref: this.setRef,\n      className: \"statuses-grid\",\n      hasMore: hasMore,\n      loadMore: this.handleLoadMore,\n      sizes: sizes,\n      loader: loader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, statusIds.map(function (statusId) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"statuses-grid__item\",\n        key: statusId,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(DetailedStatusContainer, {\n        id: statusId,\n        compact: true,\n        measureHeight: true,\n        onHeightChange: _this2.handleHeightChange,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }));\n    }).toArray());\n  };\n\n  return HashtagTimeline;\n}(React.PureComponent), _class2.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  statusIds: ImmutablePropTypes.list.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  hasMore: PropTypes.bool.isRequired,\n  hashtag: PropTypes.string.isRequired,\n  local: PropTypes.bool.isRequired\n}, _class2.defaultProps = {\n  local: false\n}, _temp)) || _class);\nexport { HashtagTimeline as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/standalone/hashtag_timeline/index.js"],"names":["React","connect","PropTypes","ImmutablePropTypes","expandHashtagTimeline","Masonry","List","ImmutableList","DetailedStatusContainer","debounce","LoadingIndicator","mapStateToProps","state","hashtag","statusIds","getIn","isLoading","hasMore","HashtagTimeline","handleLoadMore","props","dispatch","local","maxId","last","setRef","c","masonry","handleHeightChange","forcePack","componentDidMount","render","sizes","columns","gutter","mq","loader","isEmpty","undefined","map","statusId","toArray","PureComponent","propTypes","func","isRequired","list","bool","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { expandHashtagTimeline } from 'mastodon/actions/timelines';\nimport Masonry from 'react-masonry-infinite';\nimport { List as ImmutableList } from 'immutable';\nimport DetailedStatusContainer from 'mastodon/features/status/containers/detailed_status_container';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from 'mastodon/components/loading_indicator';\n\nconst mapStateToProps = (state, { hashtag }) => ({\n  statusIds: state.getIn(['timelines', `hashtag:${hashtag}`, 'items'], ImmutableList()),\n  isLoading: state.getIn(['timelines', `hashtag:${hashtag}`, 'isLoading'], false),\n  hasMore: state.getIn(['timelines', `hashtag:${hashtag}`, 'hasMore'], false),\n});\n\nexport default @connect(mapStateToProps)\nclass HashtagTimeline extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    hashtag: PropTypes.string.isRequired,\n    local: PropTypes.bool.isRequired,\n  };\n\n  static defaultProps = {\n    local: false,\n  };\n\n  componentDidMount () {\n    const { dispatch, hashtag, local } = this.props;\n\n    dispatch(expandHashtagTimeline(hashtag, { local }));\n  }\n\n  handleLoadMore = () => {\n    const { dispatch, hashtag, local, statusIds } = this.props;\n    const maxId = statusIds.last();\n\n    if (maxId) {\n      dispatch(expandHashtagTimeline(hashtag, { maxId, local }));\n    }\n  }\n\n  setRef = c => {\n    this.masonry = c;\n  }\n\n  handleHeightChange = debounce(() => {\n    if (!this.masonry) {\n      return;\n    }\n\n    this.masonry.forcePack();\n  }, 50)\n\n  render () {\n    const { statusIds, hasMore, isLoading } = this.props;\n\n    const sizes = [\n      { columns: 1, gutter: 0 },\n      { mq: '415px', columns: 1, gutter: 10 },\n      { mq: '640px', columns: 2, gutter: 10 },\n      { mq: '960px', columns: 3, gutter: 10 },\n      { mq: '1255px', columns: 3, gutter: 10 },\n    ];\n\n    const loader = (isLoading && statusIds.isEmpty()) ? <LoadingIndicator key={0} /> : undefined;\n\n    return (\n      <Masonry ref={this.setRef} className='statuses-grid' hasMore={hasMore} loadMore={this.handleLoadMore} sizes={sizes} loader={loader}>\n        {statusIds.map(statusId => (\n          <div className='statuses-grid__item' key={statusId}>\n            <DetailedStatusContainer\n              id={statusId}\n              compact\n              measureHeight\n              onHeightChange={this.handleHeightChange}\n            />\n          </div>\n        )).toArray()}\n      </Masonry>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}