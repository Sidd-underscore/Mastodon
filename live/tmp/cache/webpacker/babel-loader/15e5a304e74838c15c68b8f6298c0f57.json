{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/notifications_permission_banner.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport Icon from 'mastodon/components/icon';\nimport Button from 'mastodon/components/button';\nimport IconButton from 'mastodon/components/icon_button';\nimport { requestBrowserPermission } from 'mastodon/actions/notifications';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nvar messages = defineMessages({\n  close: {\n    \"id\": \"lightbox.close\",\n    \"defaultMessage\": \"Close\"\n  }\n});\nvar NotificationsPermissionBanner = (_dec = connect(), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(NotificationsPermissionBanner, _React$PureComponent);\n\n  function NotificationsPermissionBanner() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n\n    _this.handleClick = function () {\n      _this.props.dispatch(requestBrowserPermission());\n    };\n\n    _this.handleClose = function () {\n      _this.props.dispatch(changeSetting(['notifications', 'dismissPermissionBanner'], true));\n    };\n\n    return _this;\n  }\n\n  var _proto = NotificationsPermissionBanner.prototype;\n\n  _proto.render = function render() {\n    var intl = this.props.intl;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notifications-permission-banner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notifications-permission-banner__close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      icon: \"times\",\n      onClick: this.handleClose,\n      title: intl.formatMessage(messages.close),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications_permission_banner.title\",\n      defaultMessage: \"Never miss a thing\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications_permission_banner.how_to_control\",\n      defaultMessage: \"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled.\",\n      values: {\n        icon: /*#__PURE__*/React.createElement(Icon, {\n          id: \"sliders\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 335\n          }\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"notifications_permission_banner.enable\",\n      defaultMessage: \"Enable desktop notifications\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 44\n      }\n    })));\n  };\n\n  return NotificationsPermissionBanner;\n}(React.PureComponent), _class2.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class) || _class);\nexport { NotificationsPermissionBanner as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/notifications_permission_banner.js"],"names":["React","Icon","Button","IconButton","requestBrowserPermission","changeSetting","connect","PropTypes","defineMessages","injectIntl","FormattedMessage","messages","close","NotificationsPermissionBanner","handleClick","props","dispatch","handleClose","render","intl","formatMessage","icon","PureComponent","propTypes","func","isRequired","object"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,SAASC,wBAAT,QAAyC,gCAAzC;AACA,SAASC,aAAT,QAA8B,2BAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,gBAArC,QAA6D,YAA7D;AAEA,IAAMC,QAAQ,GAAGH,cAAc,CAAC;AAC9BI,EAAAA,KAAK;AAAA;AAAA;AAAA;AADyB,CAAD,CAA/B;IAMMC,6B,WAFUP,OAAO,E,gBACtBG,U;;;;;;;;;;;;UAQCK,W,GAAc,YAAM;AAClB,YAAKC,KAAL,CAAWC,QAAX,CAAoBZ,wBAAwB,EAA5C;AACD,K;;UAEDa,W,GAAc,YAAM;AAClB,YAAKF,KAAL,CAAWC,QAAX,CAAoBX,aAAa,CAAC,CAAC,eAAD,EAAkB,yBAAlB,CAAD,EAA+C,IAA/C,CAAjC;AACD,K;;;;;;;SAEDa,M,GAAA,kBAAU;AACR,QAAQC,IAAR,GAAiB,KAAKJ,KAAtB,CAAQI,IAAR;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,wCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAC,OAAjB;AAAyB,MAAA,OAAO,EAAE,KAAKF,WAAvC;AAAoD,MAAA,KAAK,EAAEE,IAAI,CAACC,aAAL,CAAmBT,QAAQ,CAACC,KAA5B,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,uCAArB;AAA6D,MAAA,cAAc,EAAC,oBAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,gDAArB;AAAsE,MAAA,cAAc,EAAC,6NAArF;AAAmT,MAAA,MAAM,EAAE;AAAES,QAAAA,IAAI,eAAE,oBAAC,IAAD;AAAM,UAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAR,OAA3T;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,CANF,eAOE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKP,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAmC,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,wCAArB;AAA8D,MAAA,cAAc,EAAC,8BAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAnC,CAPF,CADF;AAWD,G;;;EA7ByCd,KAAK,CAACsB,a,WAEzCC,S,GAAY;AACjBP,EAAAA,QAAQ,EAAET,SAAS,CAACiB,IAAV,CAAeC,UADR;AAEjBN,EAAAA,IAAI,EAAEZ,SAAS,CAACmB,MAAV,CAAiBD;AAFN,C;SAFfZ,6B","sourcesContent":["import React from 'react';\nimport Icon from 'mastodon/components/icon';\nimport Button from 'mastodon/components/button';\nimport IconButton from 'mastodon/components/icon_button';\nimport { requestBrowserPermission } from 'mastodon/actions/notifications';\nimport { changeSetting } from 'mastodon/actions/settings';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nexport default @connect()\n@injectIntl\nclass NotificationsPermissionBanner extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.dispatch(requestBrowserPermission());\n  }\n\n  handleClose = () => {\n    this.props.dispatch(changeSetting(['notifications', 'dismissPermissionBanner'], true));\n  }\n\n  render () {\n    const { intl } = this.props;\n\n    return (\n      <div className='notifications-permission-banner'>\n        <div className='notifications-permission-banner__close'>\n          <IconButton icon='times' onClick={this.handleClose} title={intl.formatMessage(messages.close)} />\n        </div>\n\n        <h2><FormattedMessage id='notifications_permission_banner.title' defaultMessage='Never miss a thing' /></h2>\n        <p><FormattedMessage id='notifications_permission_banner.how_to_control' defaultMessage=\"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled.\" values={{ icon: <Icon id='sliders' /> }} /></p>\n        <Button onClick={this.handleClick}><FormattedMessage id='notifications_permission_banner.enable' defaultMessage='Enable desktop notifications' /></Button>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"lightbox.close","defaultMessage":"Close"},{"id":"notifications_permission_banner.title","defaultMessage":"Never miss a thing"},{"id":"notifications_permission_banner.how_to_control","defaultMessage":"To receive notifications when Mastodon isn't open, enable desktop notifications. You can control precisely which types of interactions generate desktop notifications through the {icon} button above once they're enabled."},{"id":"notifications_permission_banner.enable","defaultMessage":"Enable desktop notifications"}]}},"sourceType":"module"}