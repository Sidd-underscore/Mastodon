{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/account_timeline/components/header.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport InnerHeader from '../../account/components/header';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport MovedNote from './moved_note';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\n\nvar Header = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Header, _ImmutablePureCompone);\n\n  function Header() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleFollow = function () {\n      _this.props.onFollow(_this.props.account);\n    };\n\n    _this.handleBlock = function () {\n      _this.props.onBlock(_this.props.account);\n    };\n\n    _this.handleMention = function () {\n      _this.props.onMention(_this.props.account, _this.context.router.history);\n    };\n\n    _this.handleDirect = function () {\n      _this.props.onDirect(_this.props.account, _this.context.router.history);\n    };\n\n    _this.handleReport = function () {\n      _this.props.onReport(_this.props.account);\n    };\n\n    _this.handleReblogToggle = function () {\n      _this.props.onReblogToggle(_this.props.account);\n    };\n\n    _this.handleNotifyToggle = function () {\n      _this.props.onNotifyToggle(_this.props.account);\n    };\n\n    _this.handleMute = function () {\n      _this.props.onMute(_this.props.account);\n    };\n\n    _this.handleBlockDomain = function () {\n      var domain = _this.props.account.get('acct').split('@')[1];\n\n      if (!domain) return;\n\n      _this.props.onBlockDomain(domain);\n    };\n\n    _this.handleUnblockDomain = function () {\n      var domain = _this.props.account.get('acct').split('@')[1];\n\n      if (!domain) return;\n\n      _this.props.onUnblockDomain(domain);\n    };\n\n    _this.handleEndorseToggle = function () {\n      _this.props.onEndorseToggle(_this.props.account);\n    };\n\n    _this.handleAddToList = function () {\n      _this.props.onAddToList(_this.props.account);\n    };\n\n    _this.handleEditAccountNote = function () {\n      _this.props.onEditAccountNote(_this.props.account);\n    };\n\n    return _this;\n  }\n\n  var _proto = Header.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        account = _this$props.account,\n        hideTabs = _this$props.hideTabs,\n        identity_proofs = _this$props.identity_proofs;\n\n    if (account === null) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account-timeline__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, account.get('moved') && /*#__PURE__*/React.createElement(MovedNote, {\n      from: account,\n      to: account.get('moved'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }\n    }), /*#__PURE__*/React.createElement(InnerHeader, {\n      account: account,\n      identity_proofs: identity_proofs,\n      onFollow: this.handleFollow,\n      onBlock: this.handleBlock,\n      onMention: this.handleMention,\n      onDirect: this.handleDirect,\n      onReblogToggle: this.handleReblogToggle,\n      onNotifyToggle: this.handleNotifyToggle,\n      onReport: this.handleReport,\n      onMute: this.handleMute,\n      onBlockDomain: this.handleBlockDomain,\n      onUnblockDomain: this.handleUnblockDomain,\n      onEndorseToggle: this.handleEndorseToggle,\n      onAddToList: this.handleAddToList,\n      onEditAccountNote: this.handleEditAccountNote,\n      domain: this.props.domain,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }), !hideTabs && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__section-headline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/accounts/\" + account.get('id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"account.posts\",\n      defaultMessage: \"Toots\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 66\n      }\n    })), /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/accounts/\" + account.get('id') + \"/with_replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"account.posts_with_replies\",\n      defaultMessage: \"Toots and replies\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 79\n      }\n    })), /*#__PURE__*/React.createElement(NavLink, {\n      exact: true,\n      to: \"/accounts/\" + account.get('id') + \"/media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"account.media\",\n      defaultMessage: \"Media\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 72\n      }\n    }))));\n  };\n\n  return Header;\n}(ImmutablePureComponent);\n\nHeader.propTypes = {\n  account: ImmutablePropTypes.map,\n  identity_proofs: ImmutablePropTypes.list,\n  onFollow: PropTypes.func.isRequired,\n  onBlock: PropTypes.func.isRequired,\n  onMention: PropTypes.func.isRequired,\n  onDirect: PropTypes.func.isRequired,\n  onReblogToggle: PropTypes.func.isRequired,\n  onReport: PropTypes.func.isRequired,\n  onMute: PropTypes.func.isRequired,\n  onBlockDomain: PropTypes.func.isRequired,\n  onUnblockDomain: PropTypes.func.isRequired,\n  onEndorseToggle: PropTypes.func.isRequired,\n  onAddToList: PropTypes.func.isRequired,\n  hideTabs: PropTypes.bool,\n  domain: PropTypes.string.isRequired\n};\nHeader.contextTypes = {\n  router: PropTypes.object\n};\nexport { Header as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/account_timeline/components/header.js"],"names":["React","ImmutablePropTypes","PropTypes","InnerHeader","ImmutablePureComponent","MovedNote","FormattedMessage","NavLink","Header","handleFollow","props","onFollow","account","handleBlock","onBlock","handleMention","onMention","context","router","history","handleDirect","onDirect","handleReport","onReport","handleReblogToggle","onReblogToggle","handleNotifyToggle","onNotifyToggle","handleMute","onMute","handleBlockDomain","domain","get","split","onBlockDomain","handleUnblockDomain","onUnblockDomain","handleEndorseToggle","onEndorseToggle","handleAddToList","onAddToList","handleEditAccountNote","onEditAccountNote","render","hideTabs","identity_proofs","propTypes","map","list","func","isRequired","bool","string","contextTypes","object"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport InnerHeader from '../../account/components/header';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport MovedNote from './moved_note';\nimport { FormattedMessage } from 'react-intl';\nimport { NavLink } from 'react-router-dom';\n\nexport default class Header extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map,\n    identity_proofs: ImmutablePropTypes.list,\n    onFollow: PropTypes.func.isRequired,\n    onBlock: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onReblogToggle: PropTypes.func.isRequired,\n    onReport: PropTypes.func.isRequired,\n    onMute: PropTypes.func.isRequired,\n    onBlockDomain: PropTypes.func.isRequired,\n    onUnblockDomain: PropTypes.func.isRequired,\n    onEndorseToggle: PropTypes.func.isRequired,\n    onAddToList: PropTypes.func.isRequired,\n    hideTabs: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n  };\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  handleFollow = () => {\n    this.props.onFollow(this.props.account);\n  }\n\n  handleBlock = () => {\n    this.props.onBlock(this.props.account);\n  }\n\n  handleMention = () => {\n    this.props.onMention(this.props.account, this.context.router.history);\n  }\n\n  handleDirect = () => {\n    this.props.onDirect(this.props.account, this.context.router.history);\n  }\n\n  handleReport = () => {\n    this.props.onReport(this.props.account);\n  }\n\n  handleReblogToggle = () => {\n    this.props.onReblogToggle(this.props.account);\n  }\n\n  handleNotifyToggle = () => {\n    this.props.onNotifyToggle(this.props.account);\n  }\n\n  handleMute = () => {\n    this.props.onMute(this.props.account);\n  }\n\n  handleBlockDomain = () => {\n    const domain = this.props.account.get('acct').split('@')[1];\n\n    if (!domain) return;\n\n    this.props.onBlockDomain(domain);\n  }\n\n  handleUnblockDomain = () => {\n    const domain = this.props.account.get('acct').split('@')[1];\n\n    if (!domain) return;\n\n    this.props.onUnblockDomain(domain);\n  }\n\n  handleEndorseToggle = () => {\n    this.props.onEndorseToggle(this.props.account);\n  }\n\n  handleAddToList = () => {\n    this.props.onAddToList(this.props.account);\n  }\n\n  handleEditAccountNote = () => {\n    this.props.onEditAccountNote(this.props.account);\n  }\n\n  render () {\n    const { account, hideTabs, identity_proofs } = this.props;\n\n    if (account === null) {\n      return null;\n    }\n\n    return (\n      <div className='account-timeline__header'>\n        {account.get('moved') && <MovedNote from={account} to={account.get('moved')} />}\n\n        <InnerHeader\n          account={account}\n          identity_proofs={identity_proofs}\n          onFollow={this.handleFollow}\n          onBlock={this.handleBlock}\n          onMention={this.handleMention}\n          onDirect={this.handleDirect}\n          onReblogToggle={this.handleReblogToggle}\n          onNotifyToggle={this.handleNotifyToggle}\n          onReport={this.handleReport}\n          onMute={this.handleMute}\n          onBlockDomain={this.handleBlockDomain}\n          onUnblockDomain={this.handleUnblockDomain}\n          onEndorseToggle={this.handleEndorseToggle}\n          onAddToList={this.handleAddToList}\n          onEditAccountNote={this.handleEditAccountNote}\n          domain={this.props.domain}\n        />\n\n        {!hideTabs && (\n          <div className='account__section-headline'>\n            <NavLink exact to={`/accounts/${account.get('id')}`}><FormattedMessage id='account.posts' defaultMessage='Toots' /></NavLink>\n            <NavLink exact to={`/accounts/${account.get('id')}/with_replies`}><FormattedMessage id='account.posts_with_replies' defaultMessage='Toots and replies' /></NavLink>\n            <NavLink exact to={`/accounts/${account.get('id')}/media`}><FormattedMessage id='account.media' defaultMessage='Media' /></NavLink>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"account.posts","defaultMessage":"Toots"},{"id":"account.posts_with_replies","defaultMessage":"Toots and replies"},{"id":"account.media","defaultMessage":"Media"}]}},"sourceType":"module"}