{"ast":null,"code":"import { openDropdownMenu, closeDropdownMenu } from '../actions/dropdown_menu';\nimport { fetchRelationships } from 'mastodon/actions/accounts';\nimport { openModal, closeModal } from '../actions/modal';\nimport { connect } from 'react-redux';\nimport DropdownMenu from '../components/dropdown_menu';\nimport { isUserTouching } from '../is_mobile';\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    dropdownPlacement: state.getIn(['dropdown_menu', 'placement']),\n    openDropdownId: state.getIn(['dropdown_menu', 'openId']),\n    openedViaKeyboard: state.getIn(['dropdown_menu', 'keyboard'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref) {\n  var status = _ref.status,\n      items = _ref.items,\n      scrollKey = _ref.scrollKey;\n  return {\n    onOpen(id, onItemClick, dropdownPlacement, keyboard) {\n      if (status) {\n        dispatch(fetchRelationships([status.getIn(['account', 'id'])]));\n      }\n\n      dispatch(isUserTouching() ? openModal('ACTIONS', {\n        status,\n        actions: items,\n        onClick: onItemClick\n      }) : openDropdownMenu(id, dropdownPlacement, keyboard, scrollKey));\n    },\n\n    onClose(id) {\n      dispatch(closeModal('ACTIONS'));\n      dispatch(closeDropdownMenu(id));\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/containers/dropdown_menu_container.js"],"names":["openDropdownMenu","closeDropdownMenu","fetchRelationships","openModal","closeModal","connect","DropdownMenu","isUserTouching","mapStateToProps","state","dropdownPlacement","getIn","openDropdownId","openedViaKeyboard","mapDispatchToProps","dispatch","status","items","scrollKey","onOpen","id","onItemClick","keyboard","actions","onClick","onClose"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,iBAA3B,QAAoD,0BAApD;AACA,SAASC,kBAAT,QAAmC,2BAAnC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCC,IAAAA,iBAAiB,EAAED,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,WAAlB,CAAZ,CADa;AAEhCC,IAAAA,cAAc,EAAEH,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,QAAlB,CAAZ,CAFgB;AAGhCE,IAAAA,iBAAiB,EAAEJ,KAAK,CAACE,KAAN,CAAY,CAAC,eAAD,EAAkB,UAAlB,CAAZ;AAHa,GAAL;AAAA,CAA7B;;AAMA,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,MAAaC,MAAb,QAAaA,MAAb;AAAA,MAAqBC,KAArB,QAAqBA,KAArB;AAAA,MAA4BC,SAA5B,QAA4BA,SAA5B;AAAA,SAA6C;AACtEC,IAAAA,MAAM,CAACC,EAAD,EAAKC,WAAL,EAAkBX,iBAAlB,EAAqCY,QAArC,EAA+C;AACnD,UAAIN,MAAJ,EAAY;AACVD,QAAAA,QAAQ,CAACb,kBAAkB,CAAC,CAACc,MAAM,CAACL,KAAP,CAAa,CAAC,SAAD,EAAY,IAAZ,CAAb,CAAD,CAAD,CAAnB,CAAR;AACD;;AAEDI,MAAAA,QAAQ,CAACR,cAAc,KAAKJ,SAAS,CAAC,SAAD,EAAY;AAC/Ca,QAAAA,MAD+C;AAE/CO,QAAAA,OAAO,EAAEN,KAFsC;AAG/CO,QAAAA,OAAO,EAAEH;AAHsC,OAAZ,CAAd,GAIlBrB,gBAAgB,CAACoB,EAAD,EAAKV,iBAAL,EAAwBY,QAAxB,EAAkCJ,SAAlC,CAJb,CAAR;AAKD,KAXqE;;AAatEO,IAAAA,OAAO,CAACL,EAAD,EAAK;AACVL,MAAAA,QAAQ,CAACX,UAAU,CAAC,SAAD,CAAX,CAAR;AACAW,MAAAA,QAAQ,CAACd,iBAAiB,CAACmB,EAAD,CAAlB,CAAR;AACD;;AAhBqE,GAA7C;AAAA,CAA3B;;AAmBA,eAAef,OAAO,CAACG,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,YAA7C,CAAf","sourcesContent":["import { openDropdownMenu, closeDropdownMenu } from '../actions/dropdown_menu';\nimport { fetchRelationships } from 'mastodon/actions/accounts';\nimport { openModal, closeModal } from '../actions/modal';\nimport { connect } from 'react-redux';\nimport DropdownMenu from '../components/dropdown_menu';\nimport { isUserTouching } from '../is_mobile';\n\nconst mapStateToProps = state => ({\n  dropdownPlacement: state.getIn(['dropdown_menu', 'placement']),\n  openDropdownId: state.getIn(['dropdown_menu', 'openId']),\n  openedViaKeyboard: state.getIn(['dropdown_menu', 'keyboard']),\n});\n\nconst mapDispatchToProps = (dispatch, { status, items, scrollKey }) => ({\n  onOpen(id, onItemClick, dropdownPlacement, keyboard) {\n    if (status) {\n      dispatch(fetchRelationships([status.getIn(['account', 'id'])]));\n    }\n\n    dispatch(isUserTouching() ? openModal('ACTIONS', {\n      status,\n      actions: items,\n      onClick: onItemClick,\n    }) : openDropdownMenu(id, dropdownPlacement, keyboard, scrollKey));\n  },\n\n  onClose(id) {\n    dispatch(closeModal('ACTIONS'));\n    dispatch(closeDropdownMenu(id));\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}