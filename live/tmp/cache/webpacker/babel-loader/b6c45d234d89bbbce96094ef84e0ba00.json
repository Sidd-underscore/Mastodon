{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/boost_modal.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '../../../components/button';\nimport StatusContent from '../../../components/status_content';\nimport Avatar from '../../../components/avatar';\nimport RelativeTimestamp from '../../../components/relative_timestamp';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Icon from 'mastodon/components/icon';\nimport AttachmentList from 'mastodon/components/attachment_list';\nimport PrivacyDropdown from 'mastodon/features/compose/components/privacy_dropdown';\nimport classNames from 'classnames';\nimport { changeBoostPrivacy } from 'mastodon/actions/boosts';\nvar messages = defineMessages({\n  cancel_reblog: {\n    \"id\": \"status.cancel_reblog_private\",\n    \"defaultMessage\": \"Unboost\"\n  },\n  reblog: {\n    \"id\": \"status.reblog\",\n    \"defaultMessage\": \"Boost\"\n  },\n  public_short: {\n    \"id\": \"privacy.public.short\",\n    \"defaultMessage\": \"Public\"\n  },\n  unlisted_short: {\n    \"id\": \"privacy.unlisted.short\",\n    \"defaultMessage\": \"Unlisted\"\n  },\n  private_short: {\n    \"id\": \"privacy.private.short\",\n    \"defaultMessage\": \"Followers-only\"\n  },\n  direct_short: {\n    \"id\": \"privacy.direct.short\",\n    \"defaultMessage\": \"Direct\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    privacy: state.getIn(['boosts', 'new', 'privacy'])\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onChangeBoostPrivacy(value) {\n      dispatch(changeBoostPrivacy(value));\n    }\n\n  };\n};\n\nvar BoostModal = (_dec = connect(mapStateToProps, mapDispatchToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(BoostModal, _ImmutablePureCompone);\n\n  function BoostModal() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this.handleReblog = function () {\n      _this.props.onReblog(_this.props.status, _this.props.privacy);\n\n      _this.props.onClose();\n    };\n\n    _this.handleAccountClick = function (e) {\n      if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n        e.preventDefault();\n\n        _this.props.onClose();\n\n        _this.context.router.history.push(\"/accounts/\" + _this.props.status.getIn(['account', 'id']));\n      }\n    };\n\n    _this._findContainer = function () {\n      return document.getElementsByClassName('modal-root__container')[0];\n    };\n\n    _this.setRef = function (c) {\n      _this.button = c;\n    };\n\n    return _this;\n  }\n\n  var _proto = BoostModal.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.button.focus();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        status = _this$props.status,\n        privacy = _this$props.privacy,\n        intl = _this$props.intl;\n    var buttonText = status.get('reblogged') ? messages.cancel_reblog : messages.reblog;\n    var visibilityIconInfo = {\n      'public': {\n        icon: 'globe',\n        text: intl.formatMessage(messages.public_short)\n      },\n      'unlisted': {\n        icon: 'unlock',\n        text: intl.formatMessage(messages.unlisted_short)\n      },\n      'private': {\n        icon: 'lock',\n        text: intl.formatMessage(messages.private_short)\n      },\n      'direct': {\n        icon: 'envelope',\n        text: intl.formatMessage(messages.direct_short)\n      }\n    };\n    var visibilityIcon = visibilityIconInfo[status.get('visibility')];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-root__modal boost-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boost-modal__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('status', \"status-\" + status.get('visibility'), 'light'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boost-modal__status-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boost-modal__status-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: status.get('url'),\n      className: \"status__relative-time\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"status__visibility-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      id: visibilityIcon.icon,\n      title: visibilityIcon.text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(RelativeTimestamp, {\n      timestamp: status.get('created_at'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(\"a\", {\n      onClick: this.handleAccountClick,\n      href: status.getIn(['account', 'url']),\n      className: \"status__display-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"status__avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: status.get('account'),\n      size: 48,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: status.get('account'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(StatusContent, {\n      status: status,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), status.get('media_attachments').size > 0 && /*#__PURE__*/React.createElement(AttachmentList, {\n      compact: true,\n      media: status.get('media_attachments'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boost-modal__action-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"boost_modal.combo\",\n      defaultMessage: \"You can press {combo} to skip this next time\",\n      values: {\n        combo: /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 136\n          }\n        }, \"Shift + \", /*#__PURE__*/React.createElement(Icon, {\n          id: \"retweet\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 150\n          }\n        }))\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }\n    })), status.get('visibility') !== 'private' && !status.get('reblogged') && /*#__PURE__*/React.createElement(PrivacyDropdown, {\n      noDirect: true,\n      value: privacy,\n      container: this._findContainer,\n      onChange: this.props.onChangeBoostPrivacy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      text: intl.formatMessage(buttonText),\n      onClick: this.handleReblog,\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })));\n  };\n\n  return BoostModal;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  status: ImmutablePropTypes.map.isRequired,\n  onReblog: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  onChangeBoostPrivacy: PropTypes.func.isRequired,\n  privacy: PropTypes.string.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class) || _class);\nexport { BoostModal as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/boost_modal.js"],"names":["React","connect","ImmutablePropTypes","PropTypes","defineMessages","injectIntl","FormattedMessage","Button","StatusContent","Avatar","RelativeTimestamp","DisplayName","ImmutablePureComponent","Icon","AttachmentList","PrivacyDropdown","classNames","changeBoostPrivacy","messages","cancel_reblog","reblog","public_short","unlisted_short","private_short","direct_short","mapStateToProps","state","privacy","getIn","mapDispatchToProps","dispatch","onChangeBoostPrivacy","value","BoostModal","handleReblog","props","onReblog","status","onClose","handleAccountClick","e","button","ctrlKey","metaKey","preventDefault","context","router","history","push","_findContainer","document","getElementsByClassName","setRef","c","componentDidMount","focus","render","intl","buttonText","get","visibilityIconInfo","icon","text","formatMessage","visibilityIcon","size","combo","contextTypes","object","propTypes","map","isRequired","func","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '../../../components/button';\nimport StatusContent from '../../../components/status_content';\nimport Avatar from '../../../components/avatar';\nimport RelativeTimestamp from '../../../components/relative_timestamp';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Icon from 'mastodon/components/icon';\nimport AttachmentList from 'mastodon/components/attachment_list';\nimport PrivacyDropdown from 'mastodon/features/compose/components/privacy_dropdown';\nimport classNames from 'classnames';\nimport { changeBoostPrivacy } from 'mastodon/actions/boosts';\n\nconst messages = defineMessages({\n  cancel_reblog: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n});\n\nconst mapStateToProps = state => {\n  return {\n    privacy: state.getIn(['boosts', 'new', 'privacy']),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChangeBoostPrivacy(value) {\n      dispatch(changeBoostPrivacy(value));\n    },\n  };\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass BoostModal extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChangeBoostPrivacy: PropTypes.func.isRequired,\n    privacy: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleReblog = () => {\n    this.props.onReblog(this.props.status, this.props.privacy);\n    this.props.onClose();\n  }\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.onClose();\n      this.context.router.history.push(`/accounts/${this.props.status.getIn(['account', 'id'])}`);\n    }\n  }\n\n  _findContainer = () => {\n    return document.getElementsByClassName('modal-root__container')[0];\n  };\n\n  setRef = (c) => {\n    this.button = c;\n  }\n\n  render () {\n    const { status, privacy, intl } = this.props;\n    const buttonText = status.get('reblogged') ? messages.cancel_reblog : messages.reblog;\n\n    const visibilityIconInfo = {\n      'public': { icon: 'globe', text: intl.formatMessage(messages.public_short) },\n      'unlisted': { icon: 'unlock', text: intl.formatMessage(messages.unlisted_short) },\n      'private': { icon: 'lock', text: intl.formatMessage(messages.private_short) },\n      'direct': { icon: 'envelope', text: intl.formatMessage(messages.direct_short) },\n    };\n\n    const visibilityIcon = visibilityIconInfo[status.get('visibility')];\n\n    return (\n      <div className='modal-root__modal boost-modal'>\n        <div className='boost-modal__container'>\n          <div className={classNames('status', `status-${status.get('visibility')}`, 'light')}>\n            <div className='boost-modal__status-header'>\n              <div className='boost-modal__status-time'>\n                <a href={status.get('url')} className='status__relative-time' target='_blank' rel='noopener noreferrer'>\n                  <span className='status__visibility-icon'><Icon id={visibilityIcon.icon} title={visibilityIcon.text} /></span>\n                  <RelativeTimestamp timestamp={status.get('created_at')} /></a>\n              </div>\n\n              <a onClick={this.handleAccountClick} href={status.getIn(['account', 'url'])} className='status__display-name'>\n                <div className='status__avatar'>\n                  <Avatar account={status.get('account')} size={48} />\n                </div>\n\n                <DisplayName account={status.get('account')} />\n              </a>\n            </div>\n\n            <StatusContent status={status} />\n\n            {status.get('media_attachments').size > 0 && (\n              <AttachmentList\n                compact\n                media={status.get('media_attachments')}\n              />\n            )}\n          </div>\n        </div>\n\n        <div className='boost-modal__action-bar'>\n          <div><FormattedMessage id='boost_modal.combo' defaultMessage='You can press {combo} to skip this next time' values={{ combo: <span>Shift + <Icon id='retweet' /></span> }} /></div>\n          {status.get('visibility') !== 'private' && !status.get('reblogged') && (\n            <PrivacyDropdown\n              noDirect\n              value={privacy}\n              container={this._findContainer}\n              onChange={this.props.onChangeBoostPrivacy}\n            />\n          )}\n          <Button text={intl.formatMessage(buttonText)} onClick={this.handleReblog} ref={this.setRef} />\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"status.cancel_reblog_private","defaultMessage":"Unboost"},{"id":"status.reblog","defaultMessage":"Boost"},{"id":"privacy.public.short","defaultMessage":"Public"},{"id":"privacy.unlisted.short","defaultMessage":"Unlisted"},{"id":"privacy.private.short","defaultMessage":"Followers-only"},{"id":"privacy.direct.short","defaultMessage":"Direct"},{"id":"boost_modal.combo","defaultMessage":"You can press {combo} to skip this next time"}]}},"sourceType":"module"}