{"ast":null,"code":"import api from '../api';\nexport var FILTERS_FETCH_REQUEST = 'FILTERS_FETCH_REQUEST';\nexport var FILTERS_FETCH_SUCCESS = 'FILTERS_FETCH_SUCCESS';\nexport var FILTERS_FETCH_FAIL = 'FILTERS_FETCH_FAIL';\nexport var fetchFilters = function fetchFilters() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: FILTERS_FETCH_REQUEST,\n      skipLoading: true\n    });\n    api(getState).get('/api/v1/filters').then(function (_ref) {\n      var data = _ref.data;\n      return dispatch({\n        type: FILTERS_FETCH_SUCCESS,\n        filters: data,\n        skipLoading: true\n      });\n    }).catch(function (err) {\n      return dispatch({\n        type: FILTERS_FETCH_FAIL,\n        err,\n        skipLoading: true,\n        skipAlert: true\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/filters.js"],"names":["api","FILTERS_FETCH_REQUEST","FILTERS_FETCH_SUCCESS","FILTERS_FETCH_FAIL","fetchFilters","dispatch","getState","type","skipLoading","get","then","data","filters","catch","err","skipAlert"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AAEA,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,kBAAkB,GAAM,oBAA9B;AAEP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACxDD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,qBADC;AAEPO,MAAAA,WAAW,EAAE;AAFN,KAAD,CAAR;AAKAR,IAAAA,GAAG,CAACM,QAAD,CAAH,CACGG,GADH,CACO,iBADP,EAEGC,IAFH,CAEQ;AAAA,UAAGC,IAAH,QAAGA,IAAH;AAAA,aAAcN,QAAQ,CAAC;AAC3BE,QAAAA,IAAI,EAAEL,qBADqB;AAE3BU,QAAAA,OAAO,EAAED,IAFkB;AAG3BH,QAAAA,WAAW,EAAE;AAHc,OAAD,CAAtB;AAAA,KAFR,EAOGK,KAPH,CAOS,UAAAC,GAAG;AAAA,aAAIT,QAAQ,CAAC;AACrBE,QAAAA,IAAI,EAAEJ,kBADe;AAErBW,QAAAA,GAFqB;AAGrBN,QAAAA,WAAW,EAAE,IAHQ;AAIrBO,QAAAA,SAAS,EAAE;AAJU,OAAD,CAAZ;AAAA,KAPZ;AAaD,GAnB2B;AAAA,CAArB","sourcesContent":["import api from '../api';\n\nexport const FILTERS_FETCH_REQUEST = 'FILTERS_FETCH_REQUEST';\nexport const FILTERS_FETCH_SUCCESS = 'FILTERS_FETCH_SUCCESS';\nexport const FILTERS_FETCH_FAIL    = 'FILTERS_FETCH_FAIL';\n\nexport const fetchFilters = () => (dispatch, getState) => {\n  dispatch({\n    type: FILTERS_FETCH_REQUEST,\n    skipLoading: true,\n  });\n\n  api(getState)\n    .get('/api/v1/filters')\n    .then(({ data }) => dispatch({\n      type: FILTERS_FETCH_SUCCESS,\n      filters: data,\n      skipLoading: true,\n    }))\n    .catch(err => dispatch({\n      type: FILTERS_FETCH_FAIL,\n      err,\n      skipLoading: true,\n      skipAlert: true,\n    }));\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}