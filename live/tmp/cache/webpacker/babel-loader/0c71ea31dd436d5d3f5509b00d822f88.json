{"ast":null,"code":"import { connect } from 'react-redux';\nimport ColumnSettings from '../components/column_settings';\nimport { changeColumnParams } from '../../../actions/columns';\nimport api from '../../../api';\n\nvar mapStateToProps = function mapStateToProps(state, _ref) {\n  var columnId = _ref.columnId;\n  var columns = state.getIn(['settings', 'columns']);\n  var index = columns.findIndex(function (c) {\n    return c.get('uuid') === columnId;\n  });\n\n  if (!(columnId && index >= 0)) {\n    return {};\n  }\n\n  return {\n    settings: columns.get(index).get('params')\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, _ref2) {\n  var columnId = _ref2.columnId;\n  return {\n    onChange(key, value) {\n      dispatch(changeColumnParams(columnId, key, value));\n    },\n\n    onLoad(value) {\n      return api().get('/api/v2/search', {\n        params: {\n          q: value,\n          type: 'hashtags'\n        }\n      }).then(function (response) {\n        return (response.data.hashtags || []).map(function (tag) {\n          return {\n            value: tag.name,\n            label: \"#\" + tag.name\n          };\n        });\n      });\n    }\n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnSettings);","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/hashtag_timeline/containers/column_settings_container.js"],"names":["connect","ColumnSettings","changeColumnParams","api","mapStateToProps","state","columnId","columns","getIn","index","findIndex","c","get","settings","mapDispatchToProps","dispatch","onChange","key","value","onLoad","params","q","type","then","response","data","hashtags","map","tag","name","label"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,SAASC,kBAAT,QAAmC,0BAAnC;AACA,OAAOC,GAAP,MAAgB,cAAhB;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC/C,MAAMC,OAAO,GAAGF,KAAK,CAACG,KAAN,CAAY,CAAC,UAAD,EAAa,SAAb,CAAZ,CAAhB;AACA,MAAMC,KAAK,GAAKF,OAAO,CAACG,SAAR,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,GAAF,CAAM,MAAN,MAAkBN,QAAtB;AAAA,GAAnB,CAAhB;;AAEA,MAAI,EAAEA,QAAQ,IAAIG,KAAK,IAAI,CAAvB,CAAJ,EAA+B;AAC7B,WAAO,EAAP;AACD;;AAED,SAAO;AAAEI,IAAAA,QAAQ,EAAEN,OAAO,CAACK,GAAR,CAAYH,KAAZ,EAAmBG,GAAnB,CAAuB,QAAvB;AAAZ,GAAP;AACD,CATD;;AAWA,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,MAAaT,QAAb,SAAaA,QAAb;AAAA,SAA6B;AACtDU,IAAAA,QAAQ,CAAEC,GAAF,EAAOC,KAAP,EAAc;AACpBH,MAAAA,QAAQ,CAACb,kBAAkB,CAACI,QAAD,EAAWW,GAAX,EAAgBC,KAAhB,CAAnB,CAAR;AACD,KAHqD;;AAKtDC,IAAAA,MAAM,CAAED,KAAF,EAAS;AACb,aAAOf,GAAG,GAAGS,GAAN,CAAU,gBAAV,EAA4B;AAAEQ,QAAAA,MAAM,EAAE;AAAEC,UAAAA,CAAC,EAAEH,KAAL;AAAYI,UAAAA,IAAI,EAAE;AAAlB;AAAV,OAA5B,EAAwEC,IAAxE,CAA6E,UAAAC,QAAQ,EAAI;AAC9F,eAAO,CAACA,QAAQ,CAACC,IAAT,CAAcC,QAAd,IAA0B,EAA3B,EAA+BC,GAA/B,CAAmC,UAACC,GAAD,EAAS;AACjD,iBAAO;AAAEV,YAAAA,KAAK,EAAEU,GAAG,CAACC,IAAb;AAAmBC,YAAAA,KAAK,QAAMF,GAAG,CAACC;AAAlC,WAAP;AACD,SAFM,CAAP;AAGD,OAJM,CAAP;AAKD;;AAXqD,GAA7B;AAAA,CAA3B;;AAcA,eAAe7B,OAAO,CAACI,eAAD,EAAkBU,kBAAlB,CAAP,CAA6Cb,cAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport ColumnSettings from '../components/column_settings';\nimport { changeColumnParams } from '../../../actions/columns';\nimport api from '../../../api';\n\nconst mapStateToProps = (state, { columnId }) => {\n  const columns = state.getIn(['settings', 'columns']);\n  const index   = columns.findIndex(c => c.get('uuid') === columnId);\n\n  if (!(columnId && index >= 0)) {\n    return {};\n  }\n\n  return { settings: columns.get(index).get('params') };\n};\n\nconst mapDispatchToProps = (dispatch, { columnId }) => ({\n  onChange (key, value) {\n    dispatch(changeColumnParams(columnId, key, value));\n  },\n\n  onLoad (value) {\n    return api().get('/api/v2/search', { params: { q: value, type: 'hashtags' } }).then(response => {\n      return (response.data.hashtags || []).map((tag) => {\n        return { value: tag.name, label: `#${tag.name}` };\n      });\n    });\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ColumnSettings);\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}