{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/components/common_counter.js\";\n// @ts-check\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n/**\n * Returns custom renderer for one of the common counter types\n *\n * @param {\"statuses\" | \"following\" | \"followers\"} counterType\n * Type of the counter\n * @param {boolean} isBold Whether display number must be displayed in bold\n * @returns {(displayNumber: JSX.Element, pluralReady: number) => JSX.Element}\n * Renderer function\n * @throws If counterType is not covered by this function\n */\n\nexport function counterRenderer(counterType, isBold) {\n  var _this = this;\n\n  if (isBold === void 0) {\n    isBold = true;\n  }\n\n  /**\n   * @type {(displayNumber: JSX.Element) => JSX.Element}\n   */\n  var renderCounter = isBold ? function (displayNumber) {\n    return /*#__PURE__*/React.createElement(\"strong\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 26\n      }\n    }, displayNumber);\n  } : function (displayNumber) {\n    return displayNumber;\n  };\n\n  switch (counterType) {\n    case 'statuses':\n      {\n        return function (displayNumber, pluralReady) {\n          return /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"account.statuses_counter\",\n            defaultMessage: \"{count, plural, one {{counter} Toot} other {{counter} Toots}}\",\n            values: {\n              count: pluralReady,\n              counter: renderCounter(displayNumber)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 7\n            }\n          });\n        };\n      }\n\n    case 'following':\n      {\n        return function (displayNumber, pluralReady) {\n          return /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"account.following_counter\",\n            defaultMessage: \"{count, plural, one {{counter} Following} other {{counter} Following}}\",\n            values: {\n              count: pluralReady,\n              counter: renderCounter(displayNumber)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 7\n            }\n          });\n        };\n      }\n\n    case 'followers':\n      {\n        return function (displayNumber, pluralReady) {\n          return /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: \"account.followers_counter\",\n            defaultMessage: \"{count, plural, one {{counter} Follower} other {{counter} Followers}}\",\n            values: {\n              count: pluralReady,\n              counter: renderCounter(displayNumber)\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 7\n            }\n          });\n        };\n      }\n\n    default:\n      throw Error(\"Incorrect counter name: \" + counterType + \". Ensure it accepted by commonCounter function\");\n  }\n}","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/components/common_counter.js"],"names":["React","FormattedMessage","counterRenderer","counterType","isBold","renderCounter","displayNumber","pluralReady","count","counter","Error"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,YAAjC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,WAAzB,EAAsCC,MAAtC,EAAqD;AAAA;;AAAA,MAAfA,MAAe;AAAfA,IAAAA,MAAe,GAAN,IAAM;AAAA;;AAC1D;AACF;AACA;AACE,MAAMC,aAAa,GAAGD,MAAM,GACxB,UAACE,aAAD;AAAA,wBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,aAAT,CAAnB;AAAA,GADwB,GAExB,UAACA,aAAD;AAAA,WAAmBA,aAAnB;AAAA,GAFJ;;AAIA,UAAQH,WAAR;AACA,SAAK,UAAL;AAAiB;AACf,eAAO,UAACG,aAAD,EAAgBC,WAAhB;AAAA,8BACL,oBAAC,gBAAD;AACE,YAAA,EAAE,EAAC,0BADL;AAEE,YAAA,cAAc,EAAC,+DAFjB;AAGE,YAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAED,WADD;AAENE,cAAAA,OAAO,EAAEJ,aAAa,CAACC,aAAD;AAFhB,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK;AAAA,SAAP;AAUD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,UAACA,aAAD,EAAgBC,WAAhB;AAAA,8BACL,oBAAC,gBAAD;AACE,YAAA,EAAE,EAAC,2BADL;AAEE,YAAA,cAAc,EAAC,wEAFjB;AAGE,YAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAED,WADD;AAENE,cAAAA,OAAO,EAAEJ,aAAa,CAACC,aAAD;AAFhB,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK;AAAA,SAAP;AAUD;;AACD,SAAK,WAAL;AAAkB;AAChB,eAAO,UAACA,aAAD,EAAgBC,WAAhB;AAAA,8BACL,oBAAC,gBAAD;AACE,YAAA,EAAE,EAAC,2BADL;AAEE,YAAA,cAAc,EAAC,uEAFjB;AAGE,YAAA,MAAM,EAAE;AACNC,cAAAA,KAAK,EAAED,WADD;AAENE,cAAAA,OAAO,EAAEJ,aAAa,CAACC,aAAD;AAFhB,aAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK;AAAA,SAAP;AAUD;;AACD;AAAS,YAAMI,KAAK,8BAA4BP,WAA5B,oDAAX;AArCT;AAuCD","sourcesContent":["// @ts-check\nimport React from 'react';\nimport { FormattedMessage } from 'react-intl';\n\n/**\n * Returns custom renderer for one of the common counter types\n *\n * @param {\"statuses\" | \"following\" | \"followers\"} counterType\n * Type of the counter\n * @param {boolean} isBold Whether display number must be displayed in bold\n * @returns {(displayNumber: JSX.Element, pluralReady: number) => JSX.Element}\n * Renderer function\n * @throws If counterType is not covered by this function\n */\nexport function counterRenderer(counterType, isBold = true) {\n  /**\n   * @type {(displayNumber: JSX.Element) => JSX.Element}\n   */\n  const renderCounter = isBold\n    ? (displayNumber) => <strong>{displayNumber}</strong>\n    : (displayNumber) => displayNumber;\n\n  switch (counterType) {\n  case 'statuses': {\n    return (displayNumber, pluralReady) => (\n      <FormattedMessage\n        id='account.statuses_counter'\n        defaultMessage='{count, plural, one {{counter} Toot} other {{counter} Toots}}'\n        values={{\n          count: pluralReady,\n          counter: renderCounter(displayNumber),\n        }}\n      />\n    );\n  }\n  case 'following': {\n    return (displayNumber, pluralReady) => (\n      <FormattedMessage\n        id='account.following_counter'\n        defaultMessage='{count, plural, one {{counter} Following} other {{counter} Following}}'\n        values={{\n          count: pluralReady,\n          counter: renderCounter(displayNumber),\n        }}\n      />\n    );\n  }\n  case 'followers': {\n    return (displayNumber, pluralReady) => (\n      <FormattedMessage\n        id='account.followers_counter'\n        defaultMessage='{count, plural, one {{counter} Follower} other {{counter} Followers}}'\n        values={{\n          count: pluralReady,\n          counter: renderCounter(displayNumber),\n        }}\n      />\n    );\n  }\n  default: throw Error(`Incorrect counter name: ${counterType}. Ensure it accepted by commonCounter function`);\n  }\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"account.statuses_counter","defaultMessage":"{count, plural, one {{counter} Toot} other {{counter} Toots}}"},{"id":"account.following_counter","defaultMessage":"{count, plural, one {{counter} Following} other {{counter} Following}}"},{"id":"account.followers_counter","defaultMessage":"{count, plural, one {{counter} Follower} other {{counter} Followers}}"}]}},"sourceType":"module"}