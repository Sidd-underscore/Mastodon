{"ast":null,"code":"// A mapping of unicode strings to an object containing the filename\n// (i.e. the svg filename) and a shortCode intended to be shown\n// as a \"title\" attribute in an HTML element (aka tooltip).\nvar _require = require('./emoji_compressed'),\n    shortCodesToEmojiData = _require[0],\n    skins = _require[1],\n    // eslint-disable-line no-unused-vars\ncategories = _require[2],\n    // eslint-disable-line no-unused-vars\nshort_names = _require[3],\n    // eslint-disable-line no-unused-vars\nemojisWithoutShortCodes = _require[4];\n\nvar _require2 = require('./unicode_to_filename'),\n    unicodeToFilename = _require2.unicodeToFilename; // decompress\n\n\nvar unicodeMapping = {};\n\nfunction processEmojiMapData(emojiMapData, shortCode) {\n  var native = emojiMapData[0],\n      filename = emojiMapData[1];\n\n  if (!filename) {\n    // filename name can be derived from unicodeToFilename\n    filename = unicodeToFilename(native);\n  }\n\n  unicodeMapping[native] = {\n    shortCode: shortCode,\n    filename: filename\n  };\n}\n\nObject.keys(shortCodesToEmojiData).forEach(function (shortCode) {\n  var _shortCodesToEmojiDat = shortCodesToEmojiData[shortCode],\n      filenameData = _shortCodesToEmojiDat[0];\n  filenameData.forEach(function (emojiMapData) {\n    return processEmojiMapData(emojiMapData, shortCode);\n  });\n});\nemojisWithoutShortCodes.forEach(function (emojiMapData) {\n  return processEmojiMapData(emojiMapData);\n});\nmodule.exports = unicodeMapping;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/emoji/emoji_unicode_mapping_light.js"],"names":["require","shortCodesToEmojiData","skins","categories","short_names","emojisWithoutShortCodes","unicodeToFilename","unicodeMapping","processEmojiMapData","emojiMapData","shortCode","native","filename","Object","keys","forEach","filenameData","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA,eAMIA,OAAO,CAAC,oBAAD,CANX;AAAA,IACEC,qBADF;AAAA,IAEEC,KAFF;AAAA,IAES;AACPC,UAHF;AAAA,IAGc;AACZC,WAJF;AAAA,IAIe;AACbC,uBALF;;AAOA,gBAA8BL,OAAO,CAAC,uBAAD,CAArC;AAAA,IAAQM,iBAAR,aAAQA,iBAAR,C,CAEA;;;AACA,IAAMC,cAAc,GAAG,EAAvB;;AAEA,SAASC,mBAAT,CAA6BC,YAA7B,EAA2CC,SAA3C,EAAsD;AACpD,MAAMC,MAAN,GAA2BF,YAA3B;AAAA,MAAcG,QAAd,GAA2BH,YAA3B;;AACA,MAAI,CAACG,QAAL,EAAe;AACb;AACAA,IAAAA,QAAQ,GAAGN,iBAAiB,CAACK,MAAD,CAA5B;AACD;;AACDJ,EAAAA,cAAc,CAACI,MAAD,CAAd,GAAyB;AACvBD,IAAAA,SAAS,EAAEA,SADY;AAEvBE,IAAAA,QAAQ,EAAEA;AAFa,GAAzB;AAID;;AAEDC,MAAM,CAACC,IAAP,CAAYb,qBAAZ,EAAmCc,OAAnC,CAA2C,UAACL,SAAD,EAAe;AACxD,8BAAuBT,qBAAqB,CAACS,SAAD,CAA5C;AAAA,MAAMM,YAAN;AACAA,EAAAA,YAAY,CAACD,OAAb,CAAqB,UAAAN,YAAY;AAAA,WAAID,mBAAmB,CAACC,YAAD,EAAeC,SAAf,CAAvB;AAAA,GAAjC;AACD,CAHD;AAIAL,uBAAuB,CAACU,OAAxB,CAAgC,UAAAN,YAAY;AAAA,SAAID,mBAAmB,CAACC,YAAD,CAAvB;AAAA,CAA5C;AAEAQ,MAAM,CAACC,OAAP,GAAiBX,cAAjB","sourcesContent":["// A mapping of unicode strings to an object containing the filename\n// (i.e. the svg filename) and a shortCode intended to be shown\n// as a \"title\" attribute in an HTML element (aka tooltip).\n\nconst [\n  shortCodesToEmojiData,\n  skins, // eslint-disable-line no-unused-vars\n  categories, // eslint-disable-line no-unused-vars\n  short_names, // eslint-disable-line no-unused-vars\n  emojisWithoutShortCodes,\n] = require('./emoji_compressed');\nconst { unicodeToFilename } = require('./unicode_to_filename');\n\n// decompress\nconst unicodeMapping = {};\n\nfunction processEmojiMapData(emojiMapData, shortCode) {\n  let [ native, filename ] = emojiMapData;\n  if (!filename) {\n    // filename name can be derived from unicodeToFilename\n    filename = unicodeToFilename(native);\n  }\n  unicodeMapping[native] = {\n    shortCode: shortCode,\n    filename: filename,\n  };\n}\n\nObject.keys(shortCodesToEmojiData).forEach((shortCode) => {\n  let [ filenameData ] = shortCodesToEmojiData[shortCode];\n  filenameData.forEach(emojiMapData => processEmojiMapData(emojiMapData, shortCode));\n});\nemojisWithoutShortCodes.forEach(emojiMapData => processEmojiMapData(emojiMapData));\n\nmodule.exports = unicodeMapping;\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}