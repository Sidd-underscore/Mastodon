{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/follow_request.js\",\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React, { Fragment } from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from 'mastodon/components/avatar';\nimport DisplayName from 'mastodon/components/display_name';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nvar messages = defineMessages({\n  authorize: {\n    \"id\": \"follow_request.authorize\",\n    \"defaultMessage\": \"Authorize\"\n  },\n  reject: {\n    \"id\": \"follow_request.reject\",\n    \"defaultMessage\": \"Reject\"\n  }\n});\n\nvar FollowRequest = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(FollowRequest, _ImmutablePureCompone);\n\n  function FollowRequest() {\n    return _ImmutablePureCompone.apply(this, arguments) || this;\n  }\n\n  var _proto = FollowRequest.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        hidden = _this$props.hidden,\n        account = _this$props.account,\n        onAuthorize = _this$props.onAuthorize,\n        onReject = _this$props.onReject;\n\n    if (!account) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    }\n\n    if (hidden) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }, account.get('display_name'), account.get('username'));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Permalink, {\n      key: account.get('id'),\n      className: \"account__display-name\",\n      title: account.get('acct'),\n      href: account.get('url'),\n      to: \"/accounts/\" + account.get('id'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__avatar-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      account: account,\n      size: 36,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 54\n      }\n    })), /*#__PURE__*/React.createElement(DisplayName, {\n      account: account,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"account__relationship\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      title: intl.formatMessage(messages.authorize),\n      icon: \"check\",\n      onClick: onAuthorize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      title: intl.formatMessage(messages.reject),\n      icon: \"times\",\n      onClick: onReject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))));\n  };\n\n  return FollowRequest;\n}(ImmutablePureComponent), _class2.propTypes = {\n  account: ImmutablePropTypes.map.isRequired,\n  onAuthorize: PropTypes.func.isRequired,\n  onReject: PropTypes.func.isRequired,\n  intl: PropTypes.object.isRequired\n}, _temp)) || _class;\n\nexport { FollowRequest as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/notifications/components/follow_request.js"],"names":["React","Fragment","ImmutablePropTypes","PropTypes","Avatar","DisplayName","Permalink","IconButton","defineMessages","injectIntl","ImmutablePureComponent","messages","authorize","reject","FollowRequest","render","props","intl","hidden","account","onAuthorize","onReject","get","formatMessage","propTypes","map","isRequired","func","object"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from 'mastodon/components/avatar';\nimport DisplayName from 'mastodon/components/display_name';\nimport Permalink from 'mastodon/components/permalink';\nimport IconButton from 'mastodon/components/icon_button';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nconst messages = defineMessages({\n  authorize: { id: 'follow_request.authorize', defaultMessage: 'Authorize' },\n  reject: { id: 'follow_request.reject', defaultMessage: 'Reject' },\n});\n\nexport default @injectIntl\nclass FollowRequest extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n    onAuthorize: PropTypes.func.isRequired,\n    onReject: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl, hidden, account, onAuthorize, onReject } = this.props;\n\n    if (!account) {\n      return <div />;\n    }\n\n    if (hidden) {\n      return (\n        <Fragment>\n          {account.get('display_name')}\n          {account.get('username')}\n        </Fragment>\n      );\n    }\n\n    return (\n      <div className='account'>\n        <div className='account__wrapper'>\n          <Permalink key={account.get('id')} className='account__display-name' title={account.get('acct')} href={account.get('url')} to={`/accounts/${account.get('id')}`}>\n            <div className='account__avatar-wrapper'><Avatar account={account} size={36} /></div>\n            <DisplayName account={account} />\n          </Permalink>\n\n          <div className='account__relationship'>\n            <IconButton title={intl.formatMessage(messages.authorize)} icon='check' onClick={onAuthorize} />\n            <IconButton title={intl.formatMessage(messages.reject)} icon='times' onClick={onReject} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"follow_request.authorize","defaultMessage":"Authorize"},{"id":"follow_request.reject","defaultMessage":"Reject"}]}},"sourceType":"module"}