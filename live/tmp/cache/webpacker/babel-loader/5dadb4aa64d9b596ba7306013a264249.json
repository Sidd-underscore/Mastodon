{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/packs/about.js\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport './public-path';\nimport loadPolyfills from '../mastodon/load_polyfills';\nimport { start } from '../mastodon/common';\nstart();\n\nfunction loaded() {\n  var TimelineContainer = require('../mastodon/containers/timeline_container').default;\n\n  var React = require('react');\n\n  var ReactDOM = require('react-dom');\n\n  var mountNode = document.getElementById('mastodon-timeline');\n\n  if (mountNode !== null) {\n    var props = JSON.parse(mountNode.getAttribute('data-props'));\n    ReactDOM.render( /*#__PURE__*/React.createElement(TimelineContainer, _extends({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 21\n      }\n    })), mountNode);\n  }\n}\n\nfunction main() {\n  var ready = require('../mastodon/ready').default;\n\n  ready(loaded);\n}\n\nloadPolyfills().then(main).catch(function (error) {\n  console.error(error);\n});","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/packs/about.js"],"names":["loadPolyfills","start","loaded","TimelineContainer","require","default","React","ReactDOM","mountNode","document","getElementById","props","JSON","parse","getAttribute","render","main","ready","then","catch","error","console"],"mappings":";;;;AAAA,OAAO,eAAP;AACA,OAAOA,aAAP,MAA0B,4BAA1B;AACA,SAASC,KAAT,QAAsB,oBAAtB;AAEAA,KAAK;;AAEL,SAASC,MAAT,GAAkB;AAChB,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,2CAAD,CAAP,CAAqDC,OAA/E;;AACA,MAAMC,KAAK,GAAeF,OAAO,CAAC,OAAD,CAAjC;;AACA,MAAMG,QAAQ,GAAYH,OAAO,CAAC,WAAD,CAAjC;;AACA,MAAMI,SAAS,GAAWC,QAAQ,CAACC,cAAT,CAAwB,mBAAxB,CAA1B;;AAEA,MAAIF,SAAS,KAAK,IAAlB,EAAwB;AACtB,QAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWL,SAAS,CAACM,YAAV,CAAuB,YAAvB,CAAX,CAAd;AACAP,IAAAA,QAAQ,CAACQ,MAAT,eAAgB,oBAAC,iBAAD,eAAuBJ,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAhB,EAAkDH,SAAlD;AACD;AACF;;AAED,SAASQ,IAAT,GAAgB;AACd,MAAMC,KAAK,GAAGb,OAAO,CAAC,mBAAD,CAAP,CAA6BC,OAA3C;;AACAY,EAAAA,KAAK,CAACf,MAAD,CAAL;AACD;;AAEDF,aAAa,GAAGkB,IAAhB,CAAqBF,IAArB,EAA2BG,KAA3B,CAAiC,UAAAC,KAAK,EAAI;AACxCC,EAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,CAFD","sourcesContent":["import './public-path';\nimport loadPolyfills from '../mastodon/load_polyfills';\nimport { start } from '../mastodon/common';\n\nstart();\n\nfunction loaded() {\n  const TimelineContainer = require('../mastodon/containers/timeline_container').default;\n  const React             = require('react');\n  const ReactDOM          = require('react-dom');\n  const mountNode         = document.getElementById('mastodon-timeline');\n\n  if (mountNode !== null) {\n    const props = JSON.parse(mountNode.getAttribute('data-props'));\n    ReactDOM.render(<TimelineContainer {...props} />, mountNode);\n  }\n}\n\nfunction main() {\n  const ready = require('../mastodon/ready').default;\n  ready(loaded);\n}\n\nloadPolyfills().then(main).catch(error => {\n  console.error(error);\n});\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}