{"ast":null,"code":"import { ALERT_SHOW, ALERT_DISMISS, ALERT_CLEAR } from '../actions/alerts';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nvar initialState = ImmutableList([]);\nexport default function alerts(state, action) {\n  if (state === void 0) {\n    state = initialState;\n  }\n\n  switch (action.type) {\n    case ALERT_SHOW:\n      return state.push(ImmutableMap({\n        key: state.size > 0 ? state.last().get('key') + 1 : 0,\n        title: action.title,\n        message: action.message,\n        message_values: action.message_values\n      }));\n\n    case ALERT_DISMISS:\n      return state.filterNot(function (item) {\n        return item.get('key') === action.alert.key;\n      });\n\n    case ALERT_CLEAR:\n      return state.clear();\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/reducers/alerts.js"],"names":["ALERT_SHOW","ALERT_DISMISS","ALERT_CLEAR","Map","ImmutableMap","List","ImmutableList","initialState","alerts","state","action","type","push","key","size","last","get","title","message","message_values","filterNot","item","alert","clear"],"mappings":"AAAA,SACEA,UADF,EAEEC,aAFF,EAGEC,WAHF,QAIO,mBAJP;AAKA,SAASC,GAAG,IAAIC,YAAhB,EAA8BC,IAAI,IAAIC,aAAtC,QAA2D,WAA3D;AAEA,IAAMC,YAAY,GAAGD,aAAa,CAAC,EAAD,CAAlC;AAEA,eAAe,SAASE,MAAT,CAAgBC,KAAhB,EAAsCC,MAAtC,EAA8C;AAAA,MAA9BD,KAA8B;AAA9BA,IAAAA,KAA8B,GAAtBF,YAAsB;AAAA;;AAC3D,UAAOG,MAAM,CAACC,IAAd;AACA,SAAKX,UAAL;AACE,aAAOS,KAAK,CAACG,IAAN,CAAWR,YAAY,CAAC;AAC7BS,QAAAA,GAAG,EAAEJ,KAAK,CAACK,IAAN,GAAa,CAAb,GAAiBL,KAAK,CAACM,IAAN,GAAaC,GAAb,CAAiB,KAAjB,IAA0B,CAA3C,GAA+C,CADvB;AAE7BC,QAAAA,KAAK,EAAEP,MAAM,CAACO,KAFe;AAG7BC,QAAAA,OAAO,EAAER,MAAM,CAACQ,OAHa;AAI7BC,QAAAA,cAAc,EAAET,MAAM,CAACS;AAJM,OAAD,CAAvB,CAAP;;AAMF,SAAKlB,aAAL;AACE,aAAOQ,KAAK,CAACW,SAAN,CAAgB,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACL,GAAL,CAAS,KAAT,MAAoBN,MAAM,CAACY,KAAP,CAAaT,GAArC;AAAA,OAApB,CAAP;;AACF,SAAKX,WAAL;AACE,aAAOO,KAAK,CAACc,KAAN,EAAP;;AACF;AACE,aAAOd,KAAP;AAbF;AAeD;AAAA","sourcesContent":["import {\n  ALERT_SHOW,\n  ALERT_DISMISS,\n  ALERT_CLEAR,\n} from '../actions/alerts';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\n\nconst initialState = ImmutableList([]);\n\nexport default function alerts(state = initialState, action) {\n  switch(action.type) {\n  case ALERT_SHOW:\n    return state.push(ImmutableMap({\n      key: state.size > 0 ? state.last().get('key') + 1 : 0,\n      title: action.title,\n      message: action.message,\n      message_values: action.message_values,\n    }));\n  case ALERT_DISMISS:\n    return state.filterNot(item => item.get('key') === action.alert.key);\n  case ALERT_CLEAR:\n    return state.clear();\n  default:\n    return state;\n  }\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}