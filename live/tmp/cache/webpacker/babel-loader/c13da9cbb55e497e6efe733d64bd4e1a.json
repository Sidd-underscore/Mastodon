{"ast":null,"code":"import { importFetchedStatus, importFetchedStatuses } from './importer';\nimport { submitMarkers } from './markers';\nimport api, { getLinks } from 'mastodon/api';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport compareId from 'mastodon/compare_id';\nimport { usePendingItems as preferPendingItems } from 'mastodon/initial_state';\nexport var TIMELINE_UPDATE = 'TIMELINE_UPDATE';\nexport var TIMELINE_DELETE = 'TIMELINE_DELETE';\nexport var TIMELINE_CLEAR = 'TIMELINE_CLEAR';\nexport var TIMELINE_EXPAND_REQUEST = 'TIMELINE_EXPAND_REQUEST';\nexport var TIMELINE_EXPAND_SUCCESS = 'TIMELINE_EXPAND_SUCCESS';\nexport var TIMELINE_EXPAND_FAIL = 'TIMELINE_EXPAND_FAIL';\nexport var TIMELINE_SCROLL_TOP = 'TIMELINE_SCROLL_TOP';\nexport var TIMELINE_LOAD_PENDING = 'TIMELINE_LOAD_PENDING';\nexport var TIMELINE_DISCONNECT = 'TIMELINE_DISCONNECT';\nexport var TIMELINE_CONNECT = 'TIMELINE_CONNECT';\nexport var TIMELINE_MARK_AS_PARTIAL = 'TIMELINE_MARK_AS_PARTIAL';\nexport var loadPending = function loadPending(timeline) {\n  return {\n    type: TIMELINE_LOAD_PENDING,\n    timeline\n  };\n};\nexport function updateTimeline(timeline, status, accept) {\n  return function (dispatch, getState) {\n    if (typeof accept === 'function' && !accept(status)) {\n      return;\n    }\n\n    if (getState().getIn(['timelines', timeline, 'isPartial'])) {\n      // Prevent new items from being added to a partial timeline,\n      // since it will be reloaded anyway\n      return;\n    }\n\n    dispatch(importFetchedStatus(status));\n    dispatch({\n      type: TIMELINE_UPDATE,\n      timeline,\n      status,\n      usePendingItems: preferPendingItems\n    });\n\n    if (timeline === 'home') {\n      dispatch(submitMarkers());\n    }\n  };\n}\n;\nexport function deleteFromTimelines(id) {\n  return function (dispatch, getState) {\n    var accountId = getState().getIn(['statuses', id, 'account']);\n    var references = getState().get('statuses').filter(function (status) {\n      return status.get('reblog') === id;\n    }).map(function (status) {\n      return status.get('id');\n    });\n    var reblogOf = getState().getIn(['statuses', id, 'reblog'], null);\n    dispatch({\n      type: TIMELINE_DELETE,\n      id,\n      accountId,\n      references,\n      reblogOf\n    });\n  };\n}\n;\nexport function clearTimeline(timeline) {\n  return function (dispatch) {\n    dispatch({\n      type: TIMELINE_CLEAR,\n      timeline\n    });\n  };\n}\n;\n\nvar noOp = function noOp() {};\n\nvar parseTags = function parseTags(tags, mode) {\n  if (tags === void 0) {\n    tags = {};\n  }\n\n  return (tags[mode] || []).map(function (tag) {\n    return tag.value;\n  });\n};\n\nexport function expandTimeline(timelineId, path, params, done) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return function (dispatch, getState) {\n    var timeline = getState().getIn(['timelines', timelineId], ImmutableMap());\n    var isLoadingMore = !!params.max_id;\n\n    if (timeline.get('isLoading')) {\n      done();\n      return;\n    }\n\n    if (!params.max_id && !params.pinned && timeline.get('items', ImmutableList()).size + timeline.get('pendingItems', ImmutableList()).size > 0) {\n      var a = timeline.getIn(['pendingItems', 0]);\n      var b = timeline.getIn(['items', 0]);\n\n      if (a && b && compareId(a, b) > 0) {\n        params.since_id = a;\n      } else {\n        params.since_id = b || a;\n      }\n    }\n\n    var isLoadingRecent = !!params.since_id;\n    dispatch(expandTimelineRequest(timelineId, isLoadingMore));\n    api(getState).get(path, {\n      params\n    }).then(function (response) {\n      var next = getLinks(response).refs.find(function (link) {\n        return link.rel === 'next';\n      });\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(expandTimelineSuccess(timelineId, response.data, next ? next.uri : null, response.status === 206, isLoadingRecent, isLoadingMore, isLoadingRecent && preferPendingItems));\n\n      if (timelineId === 'home') {\n        dispatch(submitMarkers());\n      }\n    }).catch(function (error) {\n      dispatch(expandTimelineFail(timelineId, error, isLoadingMore));\n    }).finally(function () {\n      done();\n    });\n  };\n}\n;\nexport var expandHomeTimeline = function expandHomeTimeline(_temp, done) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      maxId = _ref.maxId;\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return expandTimeline('home', '/api/v1/timelines/home', {\n    max_id: maxId\n  }, done);\n};\nexport var expandPublicTimeline = function expandPublicTimeline(_temp2, done) {\n  var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      maxId = _ref2.maxId,\n      onlyMedia = _ref2.onlyMedia,\n      onlyRemote = _ref2.onlyRemote;\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return expandTimeline(\"public\" + (onlyRemote ? ':remote' : '') + (onlyMedia ? ':media' : ''), '/api/v1/timelines/public', {\n    remote: !!onlyRemote,\n    max_id: maxId,\n    only_media: !!onlyMedia\n  }, done);\n};\nexport var expandCommunityTimeline = function expandCommunityTimeline(_temp3, done) {\n  var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      maxId = _ref3.maxId,\n      onlyMedia = _ref3.onlyMedia;\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return expandTimeline(\"community\" + (onlyMedia ? ':media' : ''), '/api/v1/timelines/public', {\n    local: true,\n    max_id: maxId,\n    only_media: !!onlyMedia\n  }, done);\n};\nexport var expandAccountTimeline = function expandAccountTimeline(accountId, _temp4) {\n  var _ref4 = _temp4 === void 0 ? {} : _temp4,\n      maxId = _ref4.maxId,\n      withReplies = _ref4.withReplies;\n\n  return expandTimeline(\"account:\" + accountId + (withReplies ? ':with_replies' : ''), \"/api/v1/accounts/\" + accountId + \"/statuses\", {\n    exclude_replies: !withReplies,\n    max_id: maxId\n  });\n};\nexport var expandAccountFeaturedTimeline = function expandAccountFeaturedTimeline(accountId) {\n  return expandTimeline(\"account:\" + accountId + \":pinned\", \"/api/v1/accounts/\" + accountId + \"/statuses\", {\n    pinned: true\n  });\n};\nexport var expandAccountMediaTimeline = function expandAccountMediaTimeline(accountId, _temp5) {\n  var _ref5 = _temp5 === void 0 ? {} : _temp5,\n      maxId = _ref5.maxId;\n\n  return expandTimeline(\"account:\" + accountId + \":media\", \"/api/v1/accounts/\" + accountId + \"/statuses\", {\n    max_id: maxId,\n    only_media: true,\n    limit: 40\n  });\n};\nexport var expandListTimeline = function expandListTimeline(id, _temp6, done) {\n  var _ref6 = _temp6 === void 0 ? {} : _temp6,\n      maxId = _ref6.maxId;\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return expandTimeline(\"list:\" + id, \"/api/v1/timelines/list/\" + id, {\n    max_id: maxId\n  }, done);\n};\nexport var expandHashtagTimeline = function expandHashtagTimeline(hashtag, _temp7, done) {\n  var _ref7 = _temp7 === void 0 ? {} : _temp7,\n      maxId = _ref7.maxId,\n      tags = _ref7.tags,\n      local = _ref7.local;\n\n  if (done === void 0) {\n    done = noOp;\n  }\n\n  return expandTimeline(\"hashtag:\" + hashtag + (local ? ':local' : ''), \"/api/v1/timelines/tag/\" + hashtag, {\n    max_id: maxId,\n    any: parseTags(tags, 'any'),\n    all: parseTags(tags, 'all'),\n    none: parseTags(tags, 'none'),\n    local: local\n  }, done);\n};\nexport function expandTimelineRequest(timeline, isLoadingMore) {\n  return {\n    type: TIMELINE_EXPAND_REQUEST,\n    timeline,\n    skipLoading: !isLoadingMore\n  };\n}\n;\nexport function expandTimelineSuccess(timeline, statuses, next, partial, isLoadingRecent, isLoadingMore, usePendingItems) {\n  return {\n    type: TIMELINE_EXPAND_SUCCESS,\n    timeline,\n    statuses,\n    next,\n    partial,\n    isLoadingRecent,\n    usePendingItems,\n    skipLoading: !isLoadingMore\n  };\n}\n;\nexport function expandTimelineFail(timeline, error, isLoadingMore) {\n  return {\n    type: TIMELINE_EXPAND_FAIL,\n    timeline,\n    error,\n    skipLoading: !isLoadingMore,\n    skipNotFound: timeline.startsWith('account:')\n  };\n}\n;\nexport function scrollTopTimeline(timeline, top) {\n  return {\n    type: TIMELINE_SCROLL_TOP,\n    timeline,\n    top\n  };\n}\n;\nexport function connectTimeline(timeline) {\n  return {\n    type: TIMELINE_CONNECT,\n    timeline\n  };\n}\n;\nexport var disconnectTimeline = function disconnectTimeline(timeline) {\n  return {\n    type: TIMELINE_DISCONNECT,\n    timeline,\n    usePendingItems: preferPendingItems\n  };\n};\nexport var markAsPartial = function markAsPartial(timeline) {\n  return {\n    type: TIMELINE_MARK_AS_PARTIAL,\n    timeline\n  };\n};","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/actions/timelines.js"],"names":["importFetchedStatus","importFetchedStatuses","submitMarkers","api","getLinks","Map","ImmutableMap","List","ImmutableList","compareId","usePendingItems","preferPendingItems","TIMELINE_UPDATE","TIMELINE_DELETE","TIMELINE_CLEAR","TIMELINE_EXPAND_REQUEST","TIMELINE_EXPAND_SUCCESS","TIMELINE_EXPAND_FAIL","TIMELINE_SCROLL_TOP","TIMELINE_LOAD_PENDING","TIMELINE_DISCONNECT","TIMELINE_CONNECT","TIMELINE_MARK_AS_PARTIAL","loadPending","timeline","type","updateTimeline","status","accept","dispatch","getState","getIn","deleteFromTimelines","id","accountId","references","get","filter","map","reblogOf","clearTimeline","noOp","parseTags","tags","mode","tag","value","expandTimeline","timelineId","path","params","done","isLoadingMore","max_id","pinned","size","a","b","since_id","isLoadingRecent","expandTimelineRequest","then","response","next","refs","find","link","rel","data","expandTimelineSuccess","uri","catch","error","expandTimelineFail","finally","expandHomeTimeline","maxId","expandPublicTimeline","onlyMedia","onlyRemote","remote","only_media","expandCommunityTimeline","local","expandAccountTimeline","withReplies","exclude_replies","expandAccountFeaturedTimeline","expandAccountMediaTimeline","limit","expandListTimeline","expandHashtagTimeline","hashtag","any","all","none","skipLoading","statuses","partial","skipNotFound","startsWith","scrollTopTimeline","top","connectTimeline","disconnectTimeline","markAsPartial"],"mappings":"AAAA,SAASA,mBAAT,EAA8BC,qBAA9B,QAA2D,YAA3D;AACA,SAASC,aAAT,QAA8B,WAA9B;AACA,OAAOC,GAAP,IAAcC,QAAd,QAA8B,cAA9B;AACA,SAASC,GAAG,IAAIC,YAAhB,EAA8BC,IAAI,IAAIC,aAAtC,QAA2D,WAA3D;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,SAASC,eAAe,IAAIC,kBAA5B,QAAsD,wBAAtD;AAEA,OAAO,IAAMC,eAAe,GAAI,iBAAzB;AACP,OAAO,IAAMC,eAAe,GAAI,iBAAzB;AACP,OAAO,IAAMC,cAAc,GAAK,gBAAzB;AAEP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,oBAAoB,GAAM,sBAAhC;AAEP,OAAO,IAAMC,mBAAmB,GAAK,qBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,mBAAmB,GAAK,qBAA9B;AACP,OAAO,IAAMC,gBAAgB,GAAQ,kBAA9B;AAEP,OAAO,IAAMC,wBAAwB,GAAG,0BAAjC;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,QAAQ;AAAA,SAAK;AACtCC,IAAAA,IAAI,EAAEN,qBADgC;AAEtCK,IAAAA;AAFsC,GAAL;AAAA,CAA5B;AAKP,OAAO,SAASE,cAAT,CAAwBF,QAAxB,EAAkCG,MAAlC,EAA0CC,MAA1C,EAAkD;AACvD,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAI,OAAOF,MAAP,KAAkB,UAAlB,IAAgC,CAACA,MAAM,CAACD,MAAD,CAA3C,EAAqD;AACnD;AACD;;AAED,QAAIG,QAAQ,GAAGC,KAAX,CAAiB,CAAC,WAAD,EAAcP,QAAd,EAAwB,WAAxB,CAAjB,CAAJ,EAA4D;AAC1D;AACA;AAEA;AACD;;AAEDK,IAAAA,QAAQ,CAAC7B,mBAAmB,CAAC2B,MAAD,CAApB,CAAR;AAEAE,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAEb,eADC;AAEPY,MAAAA,QAFO;AAGPG,MAAAA,MAHO;AAIPjB,MAAAA,eAAe,EAAEC;AAJV,KAAD,CAAR;;AAOA,QAAIa,QAAQ,KAAK,MAAjB,EAAyB;AACvBK,MAAAA,QAAQ,CAAC3B,aAAa,EAAd,CAAR;AACD;AACF,GAxBD;AAyBD;AAAA;AAED,OAAO,SAAS8B,mBAAT,CAA6BC,EAA7B,EAAiC;AACtC,SAAO,UAACJ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMI,SAAS,GAAIJ,QAAQ,GAAGC,KAAX,CAAiB,CAAC,UAAD,EAAaE,EAAb,EAAiB,SAAjB,CAAjB,CAAnB;AACA,QAAME,UAAU,GAAGL,QAAQ,GAAGM,GAAX,CAAe,UAAf,EAA2BC,MAA3B,CAAkC,UAAAV,MAAM;AAAA,aAAIA,MAAM,CAACS,GAAP,CAAW,QAAX,MAAyBH,EAA7B;AAAA,KAAxC,EAAyEK,GAAzE,CAA6E,UAAAX,MAAM;AAAA,aAAIA,MAAM,CAACS,GAAP,CAAW,IAAX,CAAJ;AAAA,KAAnF,CAAnB;AACA,QAAMG,QAAQ,GAAKT,QAAQ,GAAGC,KAAX,CAAiB,CAAC,UAAD,EAAaE,EAAb,EAAiB,QAAjB,CAAjB,EAA6C,IAA7C,CAAnB;AAEAJ,IAAAA,QAAQ,CAAC;AACPJ,MAAAA,IAAI,EAAEZ,eADC;AAEPoB,MAAAA,EAFO;AAGPC,MAAAA,SAHO;AAIPC,MAAAA,UAJO;AAKPI,MAAAA;AALO,KAAD,CAAR;AAOD,GAZD;AAaD;AAAA;AAED,OAAO,SAASC,aAAT,CAAuBhB,QAAvB,EAAiC;AACtC,SAAO,UAACK,QAAD,EAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAEX,cAAR;AAAwBU,MAAAA;AAAxB,KAAD,CAAR;AACD,GAFD;AAGD;AAAA;;AAED,IAAMiB,IAAI,GAAG,SAAPA,IAAO,GAAM,CAAE,CAArB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAYC,IAAZ,EAAqB;AAAA,MAApBD,IAAoB;AAApBA,IAAAA,IAAoB,GAAb,EAAa;AAAA;;AACrC,SAAO,CAACA,IAAI,CAACC,IAAD,CAAJ,IAAc,EAAf,EAAmBN,GAAnB,CAAuB,UAACO,GAAD,EAAS;AACrC,WAAOA,GAAG,CAACC,KAAX;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,IAApC,EAA0CC,MAA1C,EAAuDC,IAAvD,EAAoE;AAAA,MAA1BD,MAA0B;AAA1BA,IAAAA,MAA0B,GAAjB,EAAiB;AAAA;;AAAA,MAAbC,IAAa;AAAbA,IAAAA,IAAa,GAANV,IAAM;AAAA;;AACzE,SAAO,UAACZ,QAAD,EAAWC,QAAX,EAAwB;AAC7B,QAAMN,QAAQ,GAAGM,QAAQ,GAAGC,KAAX,CAAiB,CAAC,WAAD,EAAciB,UAAd,CAAjB,EAA4C1C,YAAY,EAAxD,CAAjB;AACA,QAAM8C,aAAa,GAAG,CAAC,CAACF,MAAM,CAACG,MAA/B;;AAEA,QAAI7B,QAAQ,CAACY,GAAT,CAAa,WAAb,CAAJ,EAA+B;AAC7Be,MAAAA,IAAI;AACJ;AACD;;AAED,QAAI,CAACD,MAAM,CAACG,MAAR,IAAkB,CAACH,MAAM,CAACI,MAA1B,IAAqC9B,QAAQ,CAACY,GAAT,CAAa,OAAb,EAAsB5B,aAAa,EAAnC,EAAuC+C,IAAvC,GAA8C/B,QAAQ,CAACY,GAAT,CAAa,cAAb,EAA6B5B,aAAa,EAA1C,EAA8C+C,IAA7F,GAAqG,CAA7I,EAAgJ;AAC9I,UAAMC,CAAC,GAAGhC,QAAQ,CAACO,KAAT,CAAe,CAAC,cAAD,EAAiB,CAAjB,CAAf,CAAV;AACA,UAAM0B,CAAC,GAAGjC,QAAQ,CAACO,KAAT,CAAe,CAAC,OAAD,EAAU,CAAV,CAAf,CAAV;;AAEA,UAAIyB,CAAC,IAAIC,CAAL,IAAUhD,SAAS,CAAC+C,CAAD,EAAIC,CAAJ,CAAT,GAAkB,CAAhC,EAAmC;AACjCP,QAAAA,MAAM,CAACQ,QAAP,GAAkBF,CAAlB;AACD,OAFD,MAEO;AACLN,QAAAA,MAAM,CAACQ,QAAP,GAAkBD,CAAC,IAAID,CAAvB;AACD;AACF;;AAED,QAAMG,eAAe,GAAG,CAAC,CAACT,MAAM,CAACQ,QAAjC;AAEA7B,IAAAA,QAAQ,CAAC+B,qBAAqB,CAACZ,UAAD,EAAaI,aAAb,CAAtB,CAAR;AAEAjD,IAAAA,GAAG,CAAC2B,QAAD,CAAH,CAAcM,GAAd,CAAkBa,IAAlB,EAAwB;AAAEC,MAAAA;AAAF,KAAxB,EAAoCW,IAApC,CAAyC,UAAAC,QAAQ,EAAI;AACnD,UAAMC,IAAI,GAAG3D,QAAQ,CAAC0D,QAAD,CAAR,CAAmBE,IAAnB,CAAwBC,IAAxB,CAA6B,UAAAC,IAAI;AAAA,eAAIA,IAAI,CAACC,GAAL,KAAa,MAAjB;AAAA,OAAjC,CAAb;AACAtC,MAAAA,QAAQ,CAAC5B,qBAAqB,CAAC6D,QAAQ,CAACM,IAAV,CAAtB,CAAR;AACAvC,MAAAA,QAAQ,CAACwC,qBAAqB,CAACrB,UAAD,EAAac,QAAQ,CAACM,IAAtB,EAA4BL,IAAI,GAAGA,IAAI,CAACO,GAAR,GAAc,IAA9C,EAAoDR,QAAQ,CAACnC,MAAT,KAAoB,GAAxE,EAA6EgC,eAA7E,EAA8FP,aAA9F,EAA6GO,eAAe,IAAIhD,kBAAhI,CAAtB,CAAR;;AAEA,UAAIqC,UAAU,KAAK,MAAnB,EAA2B;AACzBnB,QAAAA,QAAQ,CAAC3B,aAAa,EAAd,CAAR;AACD;AACF,KARD,EAQGqE,KARH,CAQS,UAAAC,KAAK,EAAI;AAChB3C,MAAAA,QAAQ,CAAC4C,kBAAkB,CAACzB,UAAD,EAAawB,KAAb,EAAoBpB,aAApB,CAAnB,CAAR;AACD,KAVD,EAUGsB,OAVH,CAUW,YAAM;AACfvB,MAAAA,IAAI;AACL,KAZD;AAaD,GArCD;AAsCD;AAAA;AAED,OAAO,IAAMwB,kBAAkB,GAAc,SAAhCA,kBAAgC,QAAiBxB,IAAjB;AAAA,gCAAa,EAAb;AAAA,MAAGyB,KAAH,QAAGA,KAAH;;AAAA,MAAiBzB,IAAjB;AAAiBA,IAAAA,IAAjB,GAAwBV,IAAxB;AAAA;;AAAA,SAAiCM,cAAc,CAAC,MAAD,EAAS,wBAAT,EAAmC;AAAEM,IAAAA,MAAM,EAAEuB;AAAV,GAAnC,EAAsDzB,IAAtD,CAA/C;AAAA,CAAtC;AACP,OAAO,IAAM0B,oBAAoB,GAAY,SAAhCA,oBAAgC,SAAwC1B,IAAxC;AAAA,kCAAoC,EAApC;AAAA,MAAGyB,KAAH,SAAGA,KAAH;AAAA,MAAUE,SAAV,SAAUA,SAAV;AAAA,MAAqBC,UAArB,SAAqBA,UAArB;;AAAA,MAAwC5B,IAAxC;AAAwCA,IAAAA,IAAxC,GAA+CV,IAA/C;AAAA;;AAAA,SAAwDM,cAAc,aAAUgC,UAAU,GAAG,SAAH,GAAe,EAAnC,KAAwCD,SAAS,GAAG,QAAH,GAAc,EAA/D,GAAqE,0BAArE,EAAiG;AAAEE,IAAAA,MAAM,EAAE,CAAC,CAACD,UAAZ;AAAwB1B,IAAAA,MAAM,EAAEuB,KAAhC;AAAuCK,IAAAA,UAAU,EAAE,CAAC,CAACH;AAArD,GAAjG,EAAmK3B,IAAnK,CAAtE;AAAA,CAAtC;AACP,OAAO,IAAM+B,uBAAuB,GAAS,SAAhCA,uBAAgC,SAA4B/B,IAA5B;AAAA,kCAAwB,EAAxB;AAAA,MAAGyB,KAAH,SAAGA,KAAH;AAAA,MAAUE,SAAV,SAAUA,SAAV;;AAAA,MAA4B3B,IAA5B;AAA4BA,IAAAA,IAA5B,GAAmCV,IAAnC;AAAA;;AAAA,SAA4CM,cAAc,gBAAa+B,SAAS,GAAG,QAAH,GAAc,EAApC,GAA0C,0BAA1C,EAAsE;AAAEK,IAAAA,KAAK,EAAE,IAAT;AAAe9B,IAAAA,MAAM,EAAEuB,KAAvB;AAA8BK,IAAAA,UAAU,EAAE,CAAC,CAACH;AAA5C,GAAtE,EAA+H3B,IAA/H,CAA1D;AAAA,CAAtC;AACP,OAAO,IAAMiC,qBAAqB,GAAW,SAAhCA,qBAAgC,CAAClD,SAAD;AAAA,kCAAqC,EAArC;AAAA,MAAc0C,KAAd,SAAcA,KAAd;AAAA,MAAqBS,WAArB,SAAqBA,WAArB;;AAAA,SAA4CtC,cAAc,cAAYb,SAAZ,IAAwBmD,WAAW,GAAG,eAAH,GAAqB,EAAxD,yBAAkFnD,SAAlF,gBAAwG;AAAEoD,IAAAA,eAAe,EAAE,CAACD,WAApB;AAAiChC,IAAAA,MAAM,EAAEuB;AAAzC,GAAxG,CAA1D;AAAA,CAAtC;AACP,OAAO,IAAMW,6BAA6B,GAAG,SAAhCA,6BAAgC,CAAArD,SAAS;AAAA,SAAIa,cAAc,cAAYb,SAAZ,oCAAoDA,SAApD,gBAA0E;AAAEoB,IAAAA,MAAM,EAAE;AAAV,GAA1E,CAAlB;AAAA,CAA/C;AACP,OAAO,IAAMkC,0BAA0B,GAAM,SAAhCA,0BAAgC,CAACtD,SAAD;AAAA,kCAAwB,EAAxB;AAAA,MAAc0C,KAAd,SAAcA,KAAd;;AAAA,SAA+B7B,cAAc,cAAYb,SAAZ,mCAAmDA,SAAnD,gBAAyE;AAAEmB,IAAAA,MAAM,EAAEuB,KAAV;AAAiBK,IAAAA,UAAU,EAAE,IAA7B;AAAmCQ,IAAAA,KAAK,EAAE;AAA1C,GAAzE,CAA7C;AAAA,CAAtC;AACP,OAAO,IAAMC,kBAAkB,GAAc,SAAhCA,kBAAgC,CAACzD,EAAD,UAAqBkB,IAArB;AAAA,kCAAiB,EAAjB;AAAA,MAAOyB,KAAP,SAAOA,KAAP;;AAAA,MAAqBzB,IAArB;AAAqBA,IAAAA,IAArB,GAA4BV,IAA5B;AAAA;;AAAA,SAAqCM,cAAc,WAASd,EAAT,8BAAyCA,EAAzC,EAA+C;AAAEoB,IAAAA,MAAM,EAAEuB;AAAV,GAA/C,EAAkEzB,IAAlE,CAAnD;AAAA,CAAtC;AACP,OAAO,IAAMwC,qBAAqB,GAAW,SAAhCA,qBAAgC,CAACC,OAAD,UAAuCzC,IAAvC,EAAuD;AAAA,kCAApB,EAAoB;AAAA,MAA3CyB,KAA2C,SAA3CA,KAA2C;AAAA,MAApCjC,IAAoC,SAApCA,IAAoC;AAAA,MAA9BwC,KAA8B,SAA9BA,KAA8B;;AAAA,MAAhBhC,IAAgB;AAAhBA,IAAAA,IAAgB,GAATV,IAAS;AAAA;;AAClG,SAAOM,cAAc,cAAY6C,OAAZ,IAAsBT,KAAK,GAAG,QAAH,GAAc,EAAzC,8BAAwES,OAAxE,EAAmF;AACtGvC,IAAAA,MAAM,EAAEuB,KAD8F;AAEtGiB,IAAAA,GAAG,EAAKnD,SAAS,CAACC,IAAD,EAAO,KAAP,CAFqF;AAGtGmD,IAAAA,GAAG,EAAKpD,SAAS,CAACC,IAAD,EAAO,KAAP,CAHqF;AAItGoD,IAAAA,IAAI,EAAIrD,SAAS,CAACC,IAAD,EAAO,MAAP,CAJqF;AAKtGwC,IAAAA,KAAK,EAAGA;AAL8F,GAAnF,EAMlBhC,IANkB,CAArB;AAOD,CARM;AAUP,OAAO,SAASS,qBAAT,CAA+BpC,QAA/B,EAAyC4B,aAAzC,EAAwD;AAC7D,SAAO;AACL3B,IAAAA,IAAI,EAAEV,uBADD;AAELS,IAAAA,QAFK;AAGLwE,IAAAA,WAAW,EAAE,CAAC5C;AAHT,GAAP;AAKD;AAAA;AAED,OAAO,SAASiB,qBAAT,CAA+B7C,QAA/B,EAAyCyE,QAAzC,EAAmDlC,IAAnD,EAAyDmC,OAAzD,EAAkEvC,eAAlE,EAAmFP,aAAnF,EAAkG1C,eAAlG,EAAmH;AACxH,SAAO;AACLe,IAAAA,IAAI,EAAET,uBADD;AAELQ,IAAAA,QAFK;AAGLyE,IAAAA,QAHK;AAILlC,IAAAA,IAJK;AAKLmC,IAAAA,OALK;AAMLvC,IAAAA,eANK;AAOLjD,IAAAA,eAPK;AAQLsF,IAAAA,WAAW,EAAE,CAAC5C;AART,GAAP;AAUD;AAAA;AAED,OAAO,SAASqB,kBAAT,CAA4BjD,QAA5B,EAAsCgD,KAAtC,EAA6CpB,aAA7C,EAA4D;AACjE,SAAO;AACL3B,IAAAA,IAAI,EAAER,oBADD;AAELO,IAAAA,QAFK;AAGLgD,IAAAA,KAHK;AAILwB,IAAAA,WAAW,EAAE,CAAC5C,aAJT;AAKL+C,IAAAA,YAAY,EAAE3E,QAAQ,CAAC4E,UAAT,CAAoB,UAApB;AALT,GAAP;AAOD;AAAA;AAED,OAAO,SAASC,iBAAT,CAA2B7E,QAA3B,EAAqC8E,GAArC,EAA0C;AAC/C,SAAO;AACL7E,IAAAA,IAAI,EAAEP,mBADD;AAELM,IAAAA,QAFK;AAGL8E,IAAAA;AAHK,GAAP;AAKD;AAAA;AAED,OAAO,SAASC,eAAT,CAAyB/E,QAAzB,EAAmC;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,gBADD;AAELG,IAAAA;AAFK,GAAP;AAID;AAAA;AAED,OAAO,IAAMgF,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAhF,QAAQ;AAAA,SAAK;AAC7CC,IAAAA,IAAI,EAAEL,mBADuC;AAE7CI,IAAAA,QAF6C;AAG7Cd,IAAAA,eAAe,EAAEC;AAH4B,GAAL;AAAA,CAAnC;AAMP,OAAO,IAAM8F,aAAa,GAAG,SAAhBA,aAAgB,CAAAjF,QAAQ;AAAA,SAAK;AACxCC,IAAAA,IAAI,EAAEH,wBADkC;AAExCE,IAAAA;AAFwC,GAAL;AAAA,CAA9B","sourcesContent":["import { importFetchedStatus, importFetchedStatuses } from './importer';\nimport { submitMarkers } from './markers';\nimport api, { getLinks } from 'mastodon/api';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport compareId from 'mastodon/compare_id';\nimport { usePendingItems as preferPendingItems } from 'mastodon/initial_state';\n\nexport const TIMELINE_UPDATE  = 'TIMELINE_UPDATE';\nexport const TIMELINE_DELETE  = 'TIMELINE_DELETE';\nexport const TIMELINE_CLEAR   = 'TIMELINE_CLEAR';\n\nexport const TIMELINE_EXPAND_REQUEST = 'TIMELINE_EXPAND_REQUEST';\nexport const TIMELINE_EXPAND_SUCCESS = 'TIMELINE_EXPAND_SUCCESS';\nexport const TIMELINE_EXPAND_FAIL    = 'TIMELINE_EXPAND_FAIL';\n\nexport const TIMELINE_SCROLL_TOP   = 'TIMELINE_SCROLL_TOP';\nexport const TIMELINE_LOAD_PENDING = 'TIMELINE_LOAD_PENDING';\nexport const TIMELINE_DISCONNECT   = 'TIMELINE_DISCONNECT';\nexport const TIMELINE_CONNECT      = 'TIMELINE_CONNECT';\n\nexport const TIMELINE_MARK_AS_PARTIAL = 'TIMELINE_MARK_AS_PARTIAL';\n\nexport const loadPending = timeline => ({\n  type: TIMELINE_LOAD_PENDING,\n  timeline,\n});\n\nexport function updateTimeline(timeline, status, accept) {\n  return (dispatch, getState) => {\n    if (typeof accept === 'function' && !accept(status)) {\n      return;\n    }\n\n    if (getState().getIn(['timelines', timeline, 'isPartial'])) {\n      // Prevent new items from being added to a partial timeline,\n      // since it will be reloaded anyway\n\n      return;\n    }\n\n    dispatch(importFetchedStatus(status));\n\n    dispatch({\n      type: TIMELINE_UPDATE,\n      timeline,\n      status,\n      usePendingItems: preferPendingItems,\n    });\n\n    if (timeline === 'home') {\n      dispatch(submitMarkers());\n    }\n  };\n};\n\nexport function deleteFromTimelines(id) {\n  return (dispatch, getState) => {\n    const accountId  = getState().getIn(['statuses', id, 'account']);\n    const references = getState().get('statuses').filter(status => status.get('reblog') === id).map(status => status.get('id'));\n    const reblogOf   = getState().getIn(['statuses', id, 'reblog'], null);\n\n    dispatch({\n      type: TIMELINE_DELETE,\n      id,\n      accountId,\n      references,\n      reblogOf,\n    });\n  };\n};\n\nexport function clearTimeline(timeline) {\n  return (dispatch) => {\n    dispatch({ type: TIMELINE_CLEAR, timeline });\n  };\n};\n\nconst noOp = () => {};\n\nconst parseTags = (tags = {}, mode) => {\n  return (tags[mode] || []).map((tag) => {\n    return tag.value;\n  });\n};\n\nexport function expandTimeline(timelineId, path, params = {}, done = noOp) {\n  return (dispatch, getState) => {\n    const timeline = getState().getIn(['timelines', timelineId], ImmutableMap());\n    const isLoadingMore = !!params.max_id;\n\n    if (timeline.get('isLoading')) {\n      done();\n      return;\n    }\n\n    if (!params.max_id && !params.pinned && (timeline.get('items', ImmutableList()).size + timeline.get('pendingItems', ImmutableList()).size) > 0) {\n      const a = timeline.getIn(['pendingItems', 0]);\n      const b = timeline.getIn(['items', 0]);\n\n      if (a && b && compareId(a, b) > 0) {\n        params.since_id = a;\n      } else {\n        params.since_id = b || a;\n      }\n    }\n\n    const isLoadingRecent = !!params.since_id;\n\n    dispatch(expandTimelineRequest(timelineId, isLoadingMore));\n\n    api(getState).get(path, { params }).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(expandTimelineSuccess(timelineId, response.data, next ? next.uri : null, response.status === 206, isLoadingRecent, isLoadingMore, isLoadingRecent && preferPendingItems));\n\n      if (timelineId === 'home') {\n        dispatch(submitMarkers());\n      }\n    }).catch(error => {\n      dispatch(expandTimelineFail(timelineId, error, isLoadingMore));\n    }).finally(() => {\n      done();\n    });\n  };\n};\n\nexport const expandHomeTimeline            = ({ maxId } = {}, done = noOp) => expandTimeline('home', '/api/v1/timelines/home', { max_id: maxId }, done);\nexport const expandPublicTimeline          = ({ maxId, onlyMedia, onlyRemote } = {}, done = noOp) => expandTimeline(`public${onlyRemote ? ':remote' : ''}${onlyMedia ? ':media' : ''}`, '/api/v1/timelines/public', { remote: !!onlyRemote, max_id: maxId, only_media: !!onlyMedia }, done);\nexport const expandCommunityTimeline       = ({ maxId, onlyMedia } = {}, done = noOp) => expandTimeline(`community${onlyMedia ? ':media' : ''}`, '/api/v1/timelines/public', { local: true, max_id: maxId, only_media: !!onlyMedia }, done);\nexport const expandAccountTimeline         = (accountId, { maxId, withReplies } = {}) => expandTimeline(`account:${accountId}${withReplies ? ':with_replies' : ''}`, `/api/v1/accounts/${accountId}/statuses`, { exclude_replies: !withReplies, max_id: maxId });\nexport const expandAccountFeaturedTimeline = accountId => expandTimeline(`account:${accountId}:pinned`, `/api/v1/accounts/${accountId}/statuses`, { pinned: true });\nexport const expandAccountMediaTimeline    = (accountId, { maxId } = {}) => expandTimeline(`account:${accountId}:media`, `/api/v1/accounts/${accountId}/statuses`, { max_id: maxId, only_media: true, limit: 40 });\nexport const expandListTimeline            = (id, { maxId } = {}, done = noOp) => expandTimeline(`list:${id}`, `/api/v1/timelines/list/${id}`, { max_id: maxId }, done);\nexport const expandHashtagTimeline         = (hashtag, { maxId, tags, local } = {}, done = noOp) => {\n  return expandTimeline(`hashtag:${hashtag}${local ? ':local' : ''}`, `/api/v1/timelines/tag/${hashtag}`, {\n    max_id: maxId,\n    any:    parseTags(tags, 'any'),\n    all:    parseTags(tags, 'all'),\n    none:   parseTags(tags, 'none'),\n    local:  local,\n  }, done);\n};\n\nexport function expandTimelineRequest(timeline, isLoadingMore) {\n  return {\n    type: TIMELINE_EXPAND_REQUEST,\n    timeline,\n    skipLoading: !isLoadingMore,\n  };\n};\n\nexport function expandTimelineSuccess(timeline, statuses, next, partial, isLoadingRecent, isLoadingMore, usePendingItems) {\n  return {\n    type: TIMELINE_EXPAND_SUCCESS,\n    timeline,\n    statuses,\n    next,\n    partial,\n    isLoadingRecent,\n    usePendingItems,\n    skipLoading: !isLoadingMore,\n  };\n};\n\nexport function expandTimelineFail(timeline, error, isLoadingMore) {\n  return {\n    type: TIMELINE_EXPAND_FAIL,\n    timeline,\n    error,\n    skipLoading: !isLoadingMore,\n    skipNotFound: timeline.startsWith('account:'),\n  };\n};\n\nexport function scrollTopTimeline(timeline, top) {\n  return {\n    type: TIMELINE_SCROLL_TOP,\n    timeline,\n    top,\n  };\n};\n\nexport function connectTimeline(timeline) {\n  return {\n    type: TIMELINE_CONNECT,\n    timeline,\n  };\n};\n\nexport const disconnectTimeline = timeline => ({\n  type: TIMELINE_DISCONNECT,\n  timeline,\n  usePendingItems: preferPendingItems,\n});\n\nexport const markAsPartial = timeline => ({\n  type: TIMELINE_MARK_AS_PARTIAL,\n  timeline,\n});\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}