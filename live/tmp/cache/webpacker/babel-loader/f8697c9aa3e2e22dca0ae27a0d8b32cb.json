{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/columns_area.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ReactSwipeableViews from 'react-swipeable-views';\nimport TabsBar, { links, getIndex, getLink } from './tabs_bar';\nimport { Link } from 'react-router-dom';\nimport { disableSwiping } from 'mastodon/initial_state';\nimport BundleContainer from '../containers/bundle_container';\nimport ColumnLoading from './column_loading';\nimport DrawerLoading from './drawer_loading';\nimport BundleColumnError from './bundle_column_error';\nimport { Compose, Notifications, HomeTimeline, CommunityTimeline, PublicTimeline, HashtagTimeline, DirectTimeline, FavouritedStatuses, BookmarkedStatuses, ListTimeline, Directory } from '../../ui/util/async-components';\nimport Icon from 'mastodon/components/icon';\nimport ComposePanel from './compose_panel';\nimport NavigationPanel from './navigation_panel';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { scrollRight } from '../../../scroll';\nvar componentMap = {\n  'COMPOSE': Compose,\n  'HOME': HomeTimeline,\n  'NOTIFICATIONS': Notifications,\n  'PUBLIC': PublicTimeline,\n  'REMOTE': PublicTimeline,\n  'COMMUNITY': CommunityTimeline,\n  'HASHTAG': HashtagTimeline,\n  'DIRECT': DirectTimeline,\n  'FAVOURITES': FavouritedStatuses,\n  'BOOKMARKS': BookmarkedStatuses,\n  'LIST': ListTimeline,\n  'DIRECTORY': Directory\n};\nvar messages = defineMessages({\n  publish: {\n    \"id\": \"compose_form.publish\",\n    \"defaultMessage\": \"Toot\"\n  }\n});\n\nvar shouldHideFAB = function shouldHideFAB(path) {\n  return path.match(/^\\/statuses\\/|^\\/search|^\\/getting-started|^\\/start/);\n};\n\nvar ColumnsArea = (_dec = function _dec(component) {\n  return injectIntl(component, {\n    withRef: true\n  });\n}, _dec(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(ColumnsArea, _ImmutablePureCompone);\n\n  function ColumnsArea() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 895px)');\n    _this.state = {\n      shouldAnimate: false,\n      renderComposePanel: !(_this.mediaQuery && _this.mediaQuery.matches)\n    };\n\n    _this.handleLayoutChange = function (e) {\n      _this.setState({\n        renderComposePanel: !e.matches\n      });\n    };\n\n    _this.handleSwipe = function (index) {\n      _this.pendingIndex = index;\n      var nextLinkTranslationId = links[index].props['data-preview-title-id'];\n      var currentLinkSelector = '.tabs-bar__link.active';\n      var nextLinkSelector = \".tabs-bar__link[data-preview-title-id=\\\"\" + nextLinkTranslationId + \"\\\"]\"; // HACK: Remove the active class from the current link and set it to the next one\n      // React-router does this for us, but too late, feeling laggy.\n\n      document.querySelector(currentLinkSelector).classList.remove('active');\n      document.querySelector(nextLinkSelector).classList.add('active');\n\n      if (!_this.state.shouldAnimate && typeof _this.pendingIndex === 'number') {\n        _this.context.router.history.push(getLink(_this.pendingIndex));\n\n        _this.pendingIndex = null;\n      }\n    };\n\n    _this.handleAnimationEnd = function () {\n      if (typeof _this.pendingIndex === 'number') {\n        _this.context.router.history.push(getLink(_this.pendingIndex));\n\n        _this.pendingIndex = null;\n      }\n    };\n\n    _this.handleWheel = function () {\n      if (typeof _this._interruptScrollAnimation !== 'function') {\n        return;\n      }\n\n      _this._interruptScrollAnimation();\n    };\n\n    _this.setRef = function (node) {\n      _this.node = node;\n    };\n\n    _this.renderView = function (link, index) {\n      var columnIndex = getIndex(_this.context.router.history.location.pathname);\n\n      var title = _this.props.intl.formatMessage({\n        id: link.props['data-preview-title-id']\n      });\n\n      var icon = link.props['data-preview-icon'];\n      var view = index === columnIndex ? /*#__PURE__*/React.cloneElement(_this.props.children) : /*#__PURE__*/React.createElement(ColumnLoading, {\n        title: title,\n        icon: icon,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 7\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area columns-area--mobile\",\n        key: index,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 7\n        }\n      }, view);\n    };\n\n    _this.renderLoading = function (columnId) {\n      return function () {\n        return columnId === 'COMPOSE' ? /*#__PURE__*/React.createElement(DrawerLoading, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }\n        }) : /*#__PURE__*/React.createElement(ColumnLoading, {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 57\n          }\n        });\n      };\n    };\n\n    _this.renderError = function (props) {\n      return /*#__PURE__*/React.createElement(BundleColumnError, _extends({}, props, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 12\n        }\n      }));\n    };\n\n    return _this;\n  }\n\n  var _proto = ColumnsArea.prototype;\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps() {\n    if (typeof this.pendingIndex !== 'number' && this.lastIndex !== getIndex(this.context.router.history.location.pathname)) {\n      this.setState({\n        shouldAnimate: false\n      });\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (!this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? {\n        passive: true\n      } : false);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.addEventListener) {\n        this.mediaQuery.addEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.addListener(this.handleLayoutChange);\n      }\n\n      this.setState({\n        renderComposePanel: !this.mediaQuery.matches\n      });\n    }\n\n    this.lastIndex = getIndex(this.context.router.history.location.pathname);\n    this.isRtlLayout = document.getElementsByTagName('body')[0].classList.contains('rtl');\n    this.setState({\n      shouldAnimate: true\n    });\n  };\n\n  _proto.componentWillUpdate = function componentWillUpdate(nextProps) {\n    if (this.props.singleColumn !== nextProps.singleColumn && nextProps.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (this.props.singleColumn !== prevProps.singleColumn && !this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? {\n        passive: true\n      } : false);\n    }\n\n    var newIndex = getIndex(this.context.router.history.location.pathname);\n\n    if (this.lastIndex !== newIndex) {\n      this.lastIndex = newIndex;\n      this.setState({\n        shouldAnimate: true\n      });\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (!this.props.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.removeEventListener) {\n        this.mediaQuery.removeEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.removeListener(this.handleLayouteChange);\n      }\n    }\n  };\n\n  _proto.handleChildrenContentChange = function handleChildrenContentChange() {\n    if (!this.props.singleColumn) {\n      var modifier = this.isRtlLayout ? -1 : 1;\n      this._interruptScrollAnimation = scrollRight(this.node, (this.node.scrollWidth - window.innerWidth) * modifier);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        columns = _this$props.columns,\n        children = _this$props.children,\n        singleColumn = _this$props.singleColumn,\n        isModalOpen = _this$props.isModalOpen,\n        intl = _this$props.intl;\n    var _this$state = this.state,\n        shouldAnimate = _this$state.shouldAnimate,\n        renderComposePanel = _this$state.renderComposePanel;\n    var columnIndex = getIndex(this.context.router.history.location.pathname);\n\n    if (singleColumn) {\n      var floatingActionButton = shouldHideFAB(this.context.router.history.location.pathname) ? null : /*#__PURE__*/React.createElement(Link, {\n        key: \"floating-action-button\",\n        to: \"/statuses/new\",\n        className: \"floating-action-button\",\n        \"aria-label\": intl.formatMessage(messages.publish),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 106\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        id: \"pencil\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 245\n        }\n      }));\n      var content = columnIndex !== -1 ? /*#__PURE__*/React.createElement(ReactSwipeableViews, {\n        key: \"content\",\n        hysteresis: 0.2,\n        threshold: 15,\n        index: columnIndex,\n        onChangeIndex: this.handleSwipe,\n        onTransitionEnd: this.handleAnimationEnd,\n        animateTransitions: shouldAnimate,\n        springConfig: {\n          duration: '400ms',\n          delay: '0s',\n          easeFunction: 'ease'\n        },\n        style: {\n          height: '100%'\n        },\n        disabled: disableSwiping,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 9\n        }\n      }, links.map(this.renderView)) : /*#__PURE__*/React.createElement(\"div\", {\n        key: \"content\",\n        className: \"columns-area columns-area--mobile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }\n      }, children);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels__pane columns-area__panels__pane--compositional\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels__pane__inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }, renderComposePanel && /*#__PURE__*/React.createElement(ComposePanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 38\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels__main\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TabsBar, {\n        key: \"tabs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }\n      }), content), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels__pane columns-area__panels__pane--start columns-area__panels__pane--navigational\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columns-area__panels__pane__inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(NavigationPanel, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }\n      }))), floatingActionButton);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns-area \" + (isModalOpen ? 'unscrollable' : ''),\n      ref: this.setRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }\n    }, columns.map(function (column) {\n      var params = column.get('params', null) === null ? null : column.get('params').toJS();\n      var other = params && params.other ? params.other : {};\n      return /*#__PURE__*/React.createElement(BundleContainer, {\n        key: column.get('uuid'),\n        fetchComponent: componentMap[column.get('id')],\n        loading: _this2.renderLoading(column.get('id')),\n        error: _this2.renderError,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }\n      }, function (SpecificComponent) {\n        return /*#__PURE__*/React.createElement(SpecificComponent, _extends({\n          columnId: column.get('uuid'),\n          params: params,\n          multiColumn: true\n        }, other, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 37\n          }\n        }));\n      });\n    }), React.Children.map(children, function (child) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        multiColumn: true\n      });\n    }));\n  };\n\n  return ColumnsArea;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object.isRequired\n}, _class2.propTypes = {\n  intl: PropTypes.object.isRequired,\n  columns: ImmutablePropTypes.list.isRequired,\n  isModalOpen: PropTypes.bool.isRequired,\n  singleColumn: PropTypes.bool,\n  children: PropTypes.node\n}, _temp)) || _class);\nexport { ColumnsArea as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/columns_area.js"],"names":["React","PropTypes","defineMessages","injectIntl","ImmutablePropTypes","ImmutablePureComponent","ReactSwipeableViews","TabsBar","links","getIndex","getLink","Link","disableSwiping","BundleContainer","ColumnLoading","DrawerLoading","BundleColumnError","Compose","Notifications","HomeTimeline","CommunityTimeline","PublicTimeline","HashtagTimeline","DirectTimeline","FavouritedStatuses","BookmarkedStatuses","ListTimeline","Directory","Icon","ComposePanel","NavigationPanel","supportsPassiveEvents","scrollRight","componentMap","messages","publish","shouldHideFAB","path","match","ColumnsArea","component","withRef","mediaQuery","window","matchMedia","state","shouldAnimate","renderComposePanel","matches","handleLayoutChange","e","setState","handleSwipe","index","pendingIndex","nextLinkTranslationId","props","currentLinkSelector","nextLinkSelector","document","querySelector","classList","remove","add","context","router","history","push","handleAnimationEnd","handleWheel","_interruptScrollAnimation","setRef","node","renderView","link","columnIndex","location","pathname","title","intl","formatMessage","id","icon","view","cloneElement","children","renderLoading","columnId","renderError","componentWillReceiveProps","lastIndex","componentDidMount","singleColumn","addEventListener","passive","addListener","isRtlLayout","getElementsByTagName","contains","componentWillUpdate","nextProps","removeEventListener","componentDidUpdate","prevProps","newIndex","componentWillUnmount","removeListener","handleLayouteChange","handleChildrenContentChange","modifier","scrollWidth","innerWidth","render","columns","isModalOpen","floatingActionButton","content","duration","delay","easeFunction","height","map","column","params","get","toJS","other","SpecificComponent","Children","child","multiColumn","contextTypes","object","isRequired","propTypes","list","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport ReactSwipeableViews from 'react-swipeable-views';\nimport TabsBar, { links, getIndex, getLink } from './tabs_bar';\nimport { Link } from 'react-router-dom';\n\nimport { disableSwiping } from 'mastodon/initial_state';\n\nimport BundleContainer from '../containers/bundle_container';\nimport ColumnLoading from './column_loading';\nimport DrawerLoading from './drawer_loading';\nimport BundleColumnError from './bundle_column_error';\nimport {\n  Compose,\n  Notifications,\n  HomeTimeline,\n  CommunityTimeline,\n  PublicTimeline,\n  HashtagTimeline,\n  DirectTimeline,\n  FavouritedStatuses,\n  BookmarkedStatuses,\n  ListTimeline,\n  Directory,\n} from '../../ui/util/async-components';\nimport Icon from 'mastodon/components/icon';\nimport ComposePanel from './compose_panel';\nimport NavigationPanel from './navigation_panel';\n\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { scrollRight } from '../../../scroll';\n\nconst componentMap = {\n  'COMPOSE': Compose,\n  'HOME': HomeTimeline,\n  'NOTIFICATIONS': Notifications,\n  'PUBLIC': PublicTimeline,\n  'REMOTE': PublicTimeline,\n  'COMMUNITY': CommunityTimeline,\n  'HASHTAG': HashtagTimeline,\n  'DIRECT': DirectTimeline,\n  'FAVOURITES': FavouritedStatuses,\n  'BOOKMARKS': BookmarkedStatuses,\n  'LIST': ListTimeline,\n  'DIRECTORY': Directory,\n};\n\nconst messages = defineMessages({\n  publish: { id: 'compose_form.publish', defaultMessage: 'Toot' },\n});\n\nconst shouldHideFAB = path => path.match(/^\\/statuses\\/|^\\/search|^\\/getting-started|^\\/start/);\n\nexport default @(component => injectIntl(component, { withRef: true }))\nclass ColumnsArea extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    isModalOpen: PropTypes.bool.isRequired,\n    singleColumn: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n   // Corresponds to (max-width: 600px + (285px * 1) + (10px * 1)) in SCSS\n   mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 895px)');\n\n  state = {\n    shouldAnimate: false,\n    renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n  }\n\n  componentWillReceiveProps() {\n    if (typeof this.pendingIndex !== 'number' && this.lastIndex !== getIndex(this.context.router.history.location.pathname)) {\n      this.setState({ shouldAnimate: false });\n    }\n  }\n\n  componentDidMount() {\n    if (!this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.addEventListener) {\n        this.mediaQuery.addEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.addListener(this.handleLayoutChange);\n      }\n      this.setState({ renderComposePanel: !this.mediaQuery.matches });\n    }\n\n    this.lastIndex   = getIndex(this.context.router.history.location.pathname);\n    this.isRtlLayout = document.getElementsByTagName('body')[0].classList.contains('rtl');\n\n    this.setState({ shouldAnimate: true });\n  }\n\n  componentWillUpdate(nextProps) {\n    if (this.props.singleColumn !== nextProps.singleColumn && nextProps.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.singleColumn !== prevProps.singleColumn && !this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    }\n\n    const newIndex = getIndex(this.context.router.history.location.pathname);\n\n    if (this.lastIndex !== newIndex) {\n      this.lastIndex = newIndex;\n      this.setState({ shouldAnimate: true });\n    }\n  }\n\n  componentWillUnmount () {\n    if (!this.props.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.removeEventListener) {\n        this.mediaQuery.removeEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.removeListener(this.handleLayouteChange);\n      }\n    }\n  }\n\n  handleChildrenContentChange() {\n    if (!this.props.singleColumn) {\n      const modifier = this.isRtlLayout ? -1 : 1;\n      this._interruptScrollAnimation = scrollRight(this.node, (this.node.scrollWidth - window.innerWidth) * modifier);\n    }\n  }\n\n  handleLayoutChange = (e) => {\n    this.setState({ renderComposePanel: !e.matches });\n  }\n\n  handleSwipe = (index) => {\n    this.pendingIndex = index;\n\n    const nextLinkTranslationId = links[index].props['data-preview-title-id'];\n    const currentLinkSelector = '.tabs-bar__link.active';\n    const nextLinkSelector = `.tabs-bar__link[data-preview-title-id=\"${nextLinkTranslationId}\"]`;\n\n    // HACK: Remove the active class from the current link and set it to the next one\n    // React-router does this for us, but too late, feeling laggy.\n    document.querySelector(currentLinkSelector).classList.remove('active');\n    document.querySelector(nextLinkSelector).classList.add('active');\n\n    if (!this.state.shouldAnimate && typeof this.pendingIndex === 'number') {\n      this.context.router.history.push(getLink(this.pendingIndex));\n      this.pendingIndex = null;\n    }\n  }\n\n  handleAnimationEnd = () => {\n    if (typeof this.pendingIndex === 'number') {\n      this.context.router.history.push(getLink(this.pendingIndex));\n      this.pendingIndex = null;\n    }\n  }\n\n  handleWheel = () => {\n    if (typeof this._interruptScrollAnimation !== 'function') {\n      return;\n    }\n\n    this._interruptScrollAnimation();\n  }\n\n  setRef = (node) => {\n    this.node = node;\n  }\n\n  renderView = (link, index) => {\n    const columnIndex = getIndex(this.context.router.history.location.pathname);\n    const title = this.props.intl.formatMessage({ id: link.props['data-preview-title-id'] });\n    const icon = link.props['data-preview-icon'];\n\n    const view = (index === columnIndex) ?\n      React.cloneElement(this.props.children) :\n      <ColumnLoading title={title} icon={icon} />;\n\n    return (\n      <div className='columns-area columns-area--mobile' key={index}>\n        {view}\n      </div>\n    );\n  }\n\n  renderLoading = columnId => () => {\n    return columnId === 'COMPOSE' ? <DrawerLoading /> : <ColumnLoading />;\n  }\n\n  renderError = (props) => {\n    return <BundleColumnError {...props} />;\n  }\n\n  render () {\n    const { columns, children, singleColumn, isModalOpen, intl } = this.props;\n    const { shouldAnimate, renderComposePanel } = this.state;\n\n    const columnIndex = getIndex(this.context.router.history.location.pathname);\n\n    if (singleColumn) {\n      const floatingActionButton = shouldHideFAB(this.context.router.history.location.pathname) ? null : <Link key='floating-action-button' to='/statuses/new' className='floating-action-button' aria-label={intl.formatMessage(messages.publish)}><Icon id='pencil' /></Link>;\n\n      const content = columnIndex !== -1 ? (\n        <ReactSwipeableViews key='content' hysteresis={0.2} threshold={15} index={columnIndex} onChangeIndex={this.handleSwipe} onTransitionEnd={this.handleAnimationEnd} animateTransitions={shouldAnimate} springConfig={{ duration: '400ms', delay: '0s', easeFunction: 'ease' }} style={{ height: '100%' }} disabled={disableSwiping}>\n          {links.map(this.renderView)}\n        </ReactSwipeableViews>\n      ) : (\n        <div key='content' className='columns-area columns-area--mobile'>{children}</div>\n      );\n\n      return (\n        <div className='columns-area__panels'>\n          <div className='columns-area__panels__pane columns-area__panels__pane--compositional'>\n            <div className='columns-area__panels__pane__inner'>\n              {renderComposePanel && <ComposePanel />}\n            </div>\n          </div>\n\n          <div className='columns-area__panels__main'>\n            <TabsBar key='tabs' />\n            {content}\n          </div>\n\n          <div className='columns-area__panels__pane columns-area__panels__pane--start columns-area__panels__pane--navigational'>\n            <div className='columns-area__panels__pane__inner'>\n              <NavigationPanel />\n            </div>\n          </div>\n\n          {floatingActionButton}\n        </div>\n      );\n    }\n\n    return (\n      <div className={`columns-area ${ isModalOpen ? 'unscrollable' : '' }`} ref={this.setRef}>\n        {columns.map(column => {\n          const params = column.get('params', null) === null ? null : column.get('params').toJS();\n          const other  = params && params.other ? params.other : {};\n\n          return (\n            <BundleContainer key={column.get('uuid')} fetchComponent={componentMap[column.get('id')]} loading={this.renderLoading(column.get('id'))} error={this.renderError}>\n              {SpecificComponent => <SpecificComponent columnId={column.get('uuid')} params={params} multiColumn {...other} />}\n            </BundleContainer>\n          );\n        })}\n\n        {React.Children.map(children, child => React.cloneElement(child, { multiColumn: true }))}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"compose_form.publish","defaultMessage":"Toot"}]}},"sourceType":"module"}