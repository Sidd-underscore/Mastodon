{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/bundle.js\";\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar emptyComponent = function emptyComponent() {\n  return null;\n};\n\nvar noop = function noop() {};\n\nvar Bundle = /*#__PURE__*/function (_React$PureComponent) {\n  _inheritsLoose(Bundle, _React$PureComponent);\n\n  function Bundle() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$PureComponent.call.apply(_React$PureComponent, [this].concat(args)) || this;\n    _this.state = {\n      mod: undefined,\n      forceRender: false\n    };\n\n    _this.load = function (props) {\n      var _ref = props || _this.props,\n          fetchComponent = _ref.fetchComponent,\n          onFetch = _ref.onFetch,\n          onFetchSuccess = _ref.onFetchSuccess,\n          onFetchFail = _ref.onFetchFail,\n          renderDelay = _ref.renderDelay;\n\n      var cachedMod = Bundle.cache.get(fetchComponent);\n\n      if (fetchComponent === undefined) {\n        _this.setState({\n          mod: null\n        });\n\n        return Promise.resolve();\n      }\n\n      onFetch();\n\n      if (cachedMod) {\n        _this.setState({\n          mod: cachedMod.default\n        });\n\n        onFetchSuccess();\n        return Promise.resolve();\n      }\n\n      _this.setState({\n        mod: undefined\n      });\n\n      if (renderDelay !== 0) {\n        _this.timestamp = new Date();\n        _this.timeout = setTimeout(function () {\n          return _this.setState({\n            forceRender: true\n          });\n        }, renderDelay);\n      }\n\n      return fetchComponent().then(function (mod) {\n        Bundle.cache.set(fetchComponent, mod);\n\n        _this.setState({\n          mod: mod.default\n        });\n\n        onFetchSuccess();\n      }).catch(function (error) {\n        _this.setState({\n          mod: null\n        });\n\n        onFetchFail(error);\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = Bundle.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.load(this.props);\n  };\n\n  _proto.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.fetchComponent !== this.props.fetchComponent) {\n      this.load(nextProps);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Loading = _this$props.loading,\n        Error = _this$props.error,\n        children = _this$props.children,\n        renderDelay = _this$props.renderDelay;\n    var _this$state = this.state,\n        mod = _this$state.mod,\n        forceRender = _this$state.forceRender;\n    var elapsed = this.timestamp ? new Date() - this.timestamp : renderDelay;\n\n    if (mod === undefined) {\n      return elapsed >= renderDelay || forceRender ? /*#__PURE__*/React.createElement(Loading, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 56\n        }\n      }) : null;\n    }\n\n    if (mod === null) {\n      return /*#__PURE__*/React.createElement(Error, {\n        onRetry: this.load,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return children(mod);\n  };\n\n  return Bundle;\n}(React.PureComponent);\n\nBundle.propTypes = {\n  fetchComponent: PropTypes.func.isRequired,\n  loading: PropTypes.func,\n  error: PropTypes.func,\n  children: PropTypes.func.isRequired,\n  renderDelay: PropTypes.number,\n  onFetch: PropTypes.func,\n  onFetchSuccess: PropTypes.func,\n  onFetchFail: PropTypes.func\n};\nBundle.defaultProps = {\n  loading: emptyComponent,\n  error: emptyComponent,\n  renderDelay: 0,\n  onFetch: noop,\n  onFetchSuccess: noop,\n  onFetchFail: noop\n};\nBundle.cache = new Map();\nexport default Bundle;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/ui/components/bundle.js"],"names":["React","PropTypes","emptyComponent","noop","Bundle","state","mod","undefined","forceRender","load","props","fetchComponent","onFetch","onFetchSuccess","onFetchFail","renderDelay","cachedMod","cache","get","setState","Promise","resolve","default","timestamp","Date","timeout","setTimeout","then","set","catch","error","componentWillMount","componentWillReceiveProps","nextProps","componentWillUnmount","clearTimeout","render","Loading","loading","Error","children","elapsed","PureComponent","propTypes","func","isRequired","number","defaultProps","Map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst emptyComponent = () => null;\nconst noop = () => { };\n\nclass Bundle extends React.PureComponent {\n\n  static propTypes = {\n    fetchComponent: PropTypes.func.isRequired,\n    loading: PropTypes.func,\n    error: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    renderDelay: PropTypes.number,\n    onFetch: PropTypes.func,\n    onFetchSuccess: PropTypes.func,\n    onFetchFail: PropTypes.func,\n  }\n\n  static defaultProps = {\n    loading: emptyComponent,\n    error: emptyComponent,\n    renderDelay: 0,\n    onFetch: noop,\n    onFetchSuccess: noop,\n    onFetchFail: noop,\n  }\n\n  static cache = new Map\n\n  state = {\n    mod: undefined,\n    forceRender: false,\n  }\n\n  componentWillMount() {\n    this.load(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.fetchComponent !== this.props.fetchComponent) {\n      this.load(nextProps);\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  load = (props) => {\n    const { fetchComponent, onFetch, onFetchSuccess, onFetchFail, renderDelay } = props || this.props;\n    const cachedMod = Bundle.cache.get(fetchComponent);\n\n    if (fetchComponent === undefined) {\n      this.setState({ mod: null });\n      return Promise.resolve();\n    }\n\n    onFetch();\n\n    if (cachedMod) {\n      this.setState({ mod: cachedMod.default });\n      onFetchSuccess();\n      return Promise.resolve();\n    }\n\n    this.setState({ mod: undefined });\n\n    if (renderDelay !== 0) {\n      this.timestamp = new Date();\n      this.timeout = setTimeout(() => this.setState({ forceRender: true }), renderDelay);\n    }\n\n    return fetchComponent()\n      .then((mod) => {\n        Bundle.cache.set(fetchComponent, mod);\n        this.setState({ mod: mod.default });\n        onFetchSuccess();\n      })\n      .catch((error) => {\n        this.setState({ mod: null });\n        onFetchFail(error);\n      });\n  }\n\n  render() {\n    const { loading: Loading, error: Error, children, renderDelay } = this.props;\n    const { mod, forceRender } = this.state;\n    const elapsed = this.timestamp ? (new Date() - this.timestamp) : renderDelay;\n\n    if (mod === undefined) {\n      return (elapsed >= renderDelay || forceRender) ? <Loading /> : null;\n    }\n\n    if (mod === null) {\n      return <Error onRetry={this.load} />;\n    }\n\n    return children(mod);\n  }\n\n}\n\nexport default Bundle;\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}