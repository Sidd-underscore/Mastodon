{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/domain_blocks/index.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport DomainContainer from '../../containers/domain_container';\nimport { fetchDomainBlocks, expandDomainBlocks } from '../../actions/domain_blocks';\nimport ScrollableList from '../../components/scrollable_list';\nvar messages = defineMessages({\n  heading: {\n    \"id\": \"column.domain_blocks\",\n    \"defaultMessage\": \"Blocked domains\"\n  },\n  unblockDomain: {\n    \"id\": \"account.unblock_domain\",\n    \"defaultMessage\": \"Unblock domain {domain}\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    domains: state.getIn(['domain_lists', 'blocks', 'items']),\n    hasMore: !!state.getIn(['domain_lists', 'blocks', 'next'])\n  };\n};\n\nvar Blocks = (_dec = connect(mapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Blocks, _ImmutablePureCompone);\n\n  function Blocks() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n    _this.handleLoadMore = debounce(function () {\n      _this.props.dispatch(expandDomainBlocks());\n    }, 300, {\n      leading: true\n    });\n    return _this;\n  }\n\n  var _proto = Blocks.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    this.props.dispatch(fetchDomainBlocks());\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        intl = _this$props.intl,\n        domains = _this$props.domains,\n        hasMore = _this$props.hasMore,\n        multiColumn = _this$props.multiColumn;\n\n    if (!domains) {\n      return /*#__PURE__*/React.createElement(Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoadingIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }));\n    }\n\n    var emptyMessage = /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"empty_column.domain_blocks\",\n      defaultMessage: \"There are no blocked domains yet.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 26\n      }\n    });\n    return /*#__PURE__*/React.createElement(Column, {\n      bindToDocument: !multiColumn,\n      icon: \"minus-circle\",\n      heading: intl.formatMessage(messages.heading),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColumnBackButtonSlim, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ScrollableList, {\n      scrollKey: \"domain_blocks\",\n      onLoadMore: this.handleLoadMore,\n      hasMore: hasMore,\n      emptyMessage: emptyMessage,\n      bindToDocument: !multiColumn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, domains.map(function (domain) {\n      return /*#__PURE__*/React.createElement(DomainContainer, {\n        key: domain,\n        domain: domain,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      });\n    })));\n  };\n\n  return Blocks;\n}(ImmutablePureComponent), _class2.propTypes = {\n  params: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  hasMore: PropTypes.bool,\n  domains: ImmutablePropTypes.orderedSet,\n  intl: PropTypes.object.isRequired,\n  multiColumn: PropTypes.bool\n}, _temp)) || _class) || _class);\nexport { Blocks as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/domain_blocks/index.js"],"names":["React","connect","defineMessages","injectIntl","FormattedMessage","ImmutablePureComponent","PropTypes","ImmutablePropTypes","debounce","LoadingIndicator","Column","ColumnBackButtonSlim","DomainContainer","fetchDomainBlocks","expandDomainBlocks","ScrollableList","messages","heading","unblockDomain","mapStateToProps","state","domains","getIn","hasMore","Blocks","handleLoadMore","props","dispatch","leading","componentWillMount","render","intl","multiColumn","emptyMessage","formatMessage","map","domain","propTypes","params","object","isRequired","func","bool","orderedSet"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { debounce } from 'lodash';\nimport LoadingIndicator from '../../components/loading_indicator';\nimport Column from '../ui/components/column';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport DomainContainer from '../../containers/domain_container';\nimport { fetchDomainBlocks, expandDomainBlocks } from '../../actions/domain_blocks';\nimport ScrollableList from '../../components/scrollable_list';\n\nconst messages = defineMessages({\n  heading: { id: 'column.domain_blocks', defaultMessage: 'Blocked domains' },\n  unblockDomain: { id: 'account.unblock_domain', defaultMessage: 'Unblock domain {domain}' },\n});\n\nconst mapStateToProps = state => ({\n  domains: state.getIn(['domain_lists', 'blocks', 'items']),\n  hasMore: !!state.getIn(['domain_lists', 'blocks', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Blocks extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    hasMore: PropTypes.bool,\n    domains: ImmutablePropTypes.orderedSet,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchDomainBlocks());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandDomainBlocks());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, domains, hasMore, multiColumn } = this.props;\n\n    if (!domains) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    const emptyMessage = <FormattedMessage id='empty_column.domain_blocks' defaultMessage='There are no blocked domains yet.' />;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='minus-circle' heading={intl.formatMessage(messages.heading)}>\n        <ColumnBackButtonSlim />\n        <ScrollableList\n          scrollKey='domain_blocks'\n          onLoadMore={this.handleLoadMore}\n          hasMore={hasMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        >\n          {domains.map(domain =>\n            <DomainContainer key={domain} domain={domain} />,\n          )}\n        </ScrollableList>\n      </Column>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"column.domain_blocks","defaultMessage":"Blocked domains"},{"id":"account.unblock_domain","defaultMessage":"Unblock domain {domain}"},{"id":"empty_column.domain_blocks","defaultMessage":"There are no blocked domains yet."}]}},"sourceType":"module"}