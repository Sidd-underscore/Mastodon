{"ast":null,"code":"var _jsxFileName = \"/home/runner/Mastodon/live/app/javascript/mastodon/features/picture_in_picture/components/footer.js\",\n    _dec,\n    _class,\n    _class2,\n    _temp;\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport IconButton from 'mastodon/components/icon_button';\nimport classNames from 'classnames';\nimport { me, boostModal } from 'mastodon/initial_state';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { replyCompose } from 'mastodon/actions/compose';\nimport { reblog, favourite, unreblog, unfavourite } from 'mastodon/actions/interactions';\nimport { makeGetStatus } from 'mastodon/selectors';\nimport { initBoostModal } from 'mastodon/actions/boosts';\nimport { openModal } from 'mastodon/actions/modal';\nvar messages = defineMessages({\n  reply: {\n    \"id\": \"status.reply\",\n    \"defaultMessage\": \"Reply\"\n  },\n  replyAll: {\n    \"id\": \"status.replyAll\",\n    \"defaultMessage\": \"Reply to thread\"\n  },\n  reblog: {\n    \"id\": \"status.reblog\",\n    \"defaultMessage\": \"Boost\"\n  },\n  reblog_private: {\n    \"id\": \"status.reblog_private\",\n    \"defaultMessage\": \"Boost with original visibility\"\n  },\n  cancel_reblog_private: {\n    \"id\": \"status.cancel_reblog_private\",\n    \"defaultMessage\": \"Unboost\"\n  },\n  cannot_reblog: {\n    \"id\": \"status.cannot_reblog\",\n    \"defaultMessage\": \"This post cannot be boosted\"\n  },\n  favourite: {\n    \"id\": \"status.favourite\",\n    \"defaultMessage\": \"Favourite\"\n  },\n  replyConfirm: {\n    \"id\": \"confirmations.reply.confirm\",\n    \"defaultMessage\": \"Reply\"\n  },\n  replyMessage: {\n    \"id\": \"confirmations.reply.message\",\n    \"defaultMessage\": \"Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?\"\n  },\n  open: {\n    \"id\": \"status.open\",\n    \"defaultMessage\": \"Expand this status\"\n  }\n});\n\nvar makeMapStateToProps = function makeMapStateToProps() {\n  var getStatus = makeGetStatus();\n\n  var mapStateToProps = function mapStateToProps(state, _ref) {\n    var statusId = _ref.statusId;\n    return {\n      status: getStatus(state, {\n        id: statusId\n      }),\n      askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0\n    };\n  };\n\n  return mapStateToProps;\n};\n\nvar Footer = (_dec = connect(makeMapStateToProps), _dec(_class = injectIntl(_class = (_temp = _class2 = /*#__PURE__*/function (_ImmutablePureCompone) {\n  _inheritsLoose(Footer, _ImmutablePureCompone);\n\n  function Footer() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _ImmutablePureCompone.call.apply(_ImmutablePureCompone, [this].concat(args)) || this;\n\n    _this._performReply = function () {\n      var _this$props = _this.props,\n          dispatch = _this$props.dispatch,\n          status = _this$props.status,\n          onClose = _this$props.onClose;\n      var router = _this.context.router;\n\n      if (onClose) {\n        onClose();\n      }\n\n      dispatch(replyCompose(status, router.history));\n    };\n\n    _this.handleReplyClick = function () {\n      var _this$props2 = _this.props,\n          dispatch = _this$props2.dispatch,\n          askReplyConfirmation = _this$props2.askReplyConfirmation,\n          intl = _this$props2.intl;\n\n      if (askReplyConfirmation) {\n        dispatch(openModal('CONFIRM', {\n          message: intl.formatMessage(messages.replyMessage),\n          confirm: intl.formatMessage(messages.replyConfirm),\n          onConfirm: _this._performReply\n        }));\n      } else {\n        _this._performReply();\n      }\n    };\n\n    _this.handleFavouriteClick = function () {\n      var _this$props3 = _this.props,\n          dispatch = _this$props3.dispatch,\n          status = _this$props3.status;\n\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        dispatch(favourite(status));\n      }\n    };\n\n    _this._performReblog = function (status, privacy) {\n      var dispatch = _this.props.dispatch;\n      dispatch(reblog(status, privacy));\n    };\n\n    _this.handleReblogClick = function (e) {\n      var _this$props4 = _this.props,\n          dispatch = _this$props4.dispatch,\n          status = _this$props4.status;\n\n      if (status.get('reblogged')) {\n        dispatch(unreblog(status));\n      } else if (e && e.shiftKey || !boostModal) {\n        _this._performReblog(status);\n      } else {\n        dispatch(initBoostModal({\n          status,\n          onReblog: _this._performReblog\n        }));\n      }\n    };\n\n    _this.handleOpenClick = function (e) {\n      var router = _this.context.router;\n\n      if (e.button !== 0 || !router) {\n        return;\n      }\n\n      var _this$props5 = _this.props,\n          status = _this$props5.status,\n          onClose = _this$props5.onClose;\n\n      if (onClose) {\n        onClose();\n      }\n\n      router.history.push(\"/statuses/\" + status.get('id'));\n    };\n\n    return _this;\n  }\n\n  var _proto = Footer.prototype;\n\n  _proto.render = function render() {\n    var _this$props6 = this.props,\n        status = _this$props6.status,\n        intl = _this$props6.intl,\n        withOpenButton = _this$props6.withOpenButton;\n    var publicStatus = ['public', 'unlisted'].includes(status.get('visibility'));\n    var reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n    var replyIcon, replyTitle;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyTitle = intl.formatMessage(messages.reply);\n    } else {\n      replyIcon = 'reply-all';\n      replyTitle = intl.formatMessage(messages.replyAll);\n    }\n\n    var reblogTitle = '';\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"picture-in-picture__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"status__action-bar-button\",\n      title: replyTitle,\n      icon: status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon,\n      onClick: this.handleReplyClick,\n      counter: status.get('replies_count'),\n      obfuscateCount: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      className: classNames('status__action-bar-button', {\n        reblogPrivate\n      }),\n      disabled: !publicStatus && !reblogPrivate,\n      active: status.get('reblogged'),\n      pressed: status.get('reblogged'),\n      title: reblogTitle,\n      icon: \"retweet\",\n      onClick: this.handleReblogClick,\n      counter: status.get('reblogs_count'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"status__action-bar-button star-icon\",\n      animate: true,\n      active: status.get('favourited'),\n      pressed: status.get('favourited'),\n      title: intl.formatMessage(messages.favourite),\n      icon: \"star\",\n      onClick: this.handleFavouriteClick,\n      counter: status.get('favourites_count'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }), withOpenButton && /*#__PURE__*/React.createElement(IconButton, {\n      className: \"status__action-bar-button\",\n      title: intl.formatMessage(messages.open),\n      icon: \"external-link\",\n      onClick: this.handleOpenClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 28\n      }\n    }));\n  };\n\n  return Footer;\n}(ImmutablePureComponent), _class2.contextTypes = {\n  router: PropTypes.object\n}, _class2.propTypes = {\n  statusId: PropTypes.string.isRequired,\n  status: ImmutablePropTypes.map.isRequired,\n  intl: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  askReplyConfirmation: PropTypes.bool,\n  withOpenButton: PropTypes.bool,\n  onClose: PropTypes.func\n}, _temp)) || _class) || _class);\nexport { Footer as default };","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/features/picture_in_picture/components/footer.js"],"names":["React","connect","ImmutablePureComponent","ImmutablePropTypes","PropTypes","IconButton","classNames","me","boostModal","defineMessages","injectIntl","replyCompose","reblog","favourite","unreblog","unfavourite","makeGetStatus","initBoostModal","openModal","messages","reply","replyAll","reblog_private","cancel_reblog_private","cannot_reblog","replyConfirm","replyMessage","open","makeMapStateToProps","getStatus","mapStateToProps","state","statusId","status","id","askReplyConfirmation","getIn","trim","length","Footer","_performReply","props","dispatch","onClose","router","context","history","handleReplyClick","intl","message","formatMessage","confirm","onConfirm","handleFavouriteClick","get","_performReblog","privacy","handleReblogClick","e","shiftKey","onReblog","handleOpenClick","button","push","render","withOpenButton","publicStatus","includes","reblogPrivate","replyIcon","replyTitle","reblogTitle","contextTypes","object","propTypes","string","isRequired","map","func","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport IconButton from 'mastodon/components/icon_button';\nimport classNames from 'classnames';\nimport { me, boostModal } from 'mastodon/initial_state';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { replyCompose } from 'mastodon/actions/compose';\nimport { reblog, favourite, unreblog, unfavourite } from 'mastodon/actions/interactions';\nimport { makeGetStatus } from 'mastodon/selectors';\nimport { initBoostModal } from 'mastodon/actions/boosts';\nimport { openModal } from 'mastodon/actions/modal';\n\nconst messages = defineMessages({\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  replyAll: { id: 'status.replyAll', defaultMessage: 'Reply to thread' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favourite' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  open: { id: 'status.open', defaultMessage: 'Expand this status' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = (state, { statusId }) => ({\n    status: getStatus(state, { id: statusId }),\n    askReplyConfirmation: state.getIn(['compose', 'text']).trim().length !== 0,\n  });\n\n  return mapStateToProps;\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass Footer extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    status: ImmutablePropTypes.map.isRequired,\n    intl: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    withOpenButton: PropTypes.bool,\n    onClose: PropTypes.func,\n  };\n\n  _performReply = () => {\n    const { dispatch, status, onClose } = this.props;\n    const { router } = this.context;\n\n    if (onClose) {\n      onClose();\n    }\n\n    dispatch(replyCompose(status, router.history));\n  };\n\n  handleReplyClick = () => {\n    const { dispatch, askReplyConfirmation, intl } = this.props;\n\n    if (askReplyConfirmation) {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(messages.replyMessage),\n        confirm: intl.formatMessage(messages.replyConfirm),\n        onConfirm: this._performReply,\n      }));\n    } else {\n      this._performReply();\n    }\n  };\n\n  handleFavouriteClick = () => {\n    const { dispatch, status } = this.props;\n\n    if (status.get('favourited')) {\n      dispatch(unfavourite(status));\n    } else {\n      dispatch(favourite(status));\n    }\n  };\n\n  _performReblog = (status, privacy) => {\n    const { dispatch } = this.props;\n    dispatch(reblog(status, privacy));\n  }\n\n  handleReblogClick = e => {\n    const { dispatch, status } = this.props;\n\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else if ((e && e.shiftKey) || !boostModal) {\n      this._performReblog(status);\n    } else {\n      dispatch(initBoostModal({ status, onReblog: this._performReblog }));\n    }\n  };\n\n  handleOpenClick = e => {\n    const { router } = this.context;\n\n    if (e.button !== 0 || !router) {\n      return;\n    }\n\n    const { status, onClose } = this.props;\n\n    if (onClose) {\n      onClose();\n    }\n\n    router.history.push(`/statuses/${status.get('id')}`);\n  }\n\n  render () {\n    const { status, intl, withOpenButton } = this.props;\n\n    const publicStatus  = ['public', 'unlisted'].includes(status.get('visibility'));\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let replyIcon, replyTitle;\n\n    if (status.get('in_reply_to_id', null) === null) {\n      replyIcon = 'reply';\n      replyTitle = intl.formatMessage(messages.reply);\n    } else {\n      replyIcon = 'reply-all';\n      replyTitle = intl.formatMessage(messages.replyAll);\n    }\n\n    let reblogTitle = '';\n\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='picture-in-picture__footer'>\n        <IconButton className='status__action-bar-button' title={replyTitle} icon={status.get('in_reply_to_account_id') === status.getIn(['account', 'id']) ? 'reply' : replyIcon} onClick={this.handleReplyClick} counter={status.get('replies_count')} obfuscateCount />\n        <IconButton className={classNames('status__action-bar-button', { reblogPrivate })} disabled={!publicStatus && !reblogPrivate}  active={status.get('reblogged')} pressed={status.get('reblogged')} title={reblogTitle} icon='retweet' onClick={this.handleReblogClick} counter={status.get('reblogs_count')} />\n        <IconButton className='status__action-bar-button star-icon' animate active={status.get('favourited')} pressed={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} counter={status.get('favourites_count')} />\n        {withOpenButton && <IconButton className='status__action-bar-button' title={intl.formatMessage(messages.open)} icon='external-link' onClick={this.handleOpenClick} />}\n      </div>\n    );\n  }\n\n}\n"]},"metadata":{"react-intl":{"messages":[{"id":"status.reply","defaultMessage":"Reply"},{"id":"status.replyAll","defaultMessage":"Reply to thread"},{"id":"status.reblog","defaultMessage":"Boost"},{"id":"status.reblog_private","defaultMessage":"Boost with original visibility"},{"id":"status.cancel_reblog_private","defaultMessage":"Unboost"},{"id":"status.cannot_reblog","defaultMessage":"This post cannot be boosted"},{"id":"status.favourite","defaultMessage":"Favourite"},{"id":"confirmations.reply.confirm","defaultMessage":"Reply"},{"id":"confirmations.reply.message","defaultMessage":"Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?"},{"id":"status.open","defaultMessage":"Expand this status"}]}},"sourceType":"module"}