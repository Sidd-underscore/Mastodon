{"ast":null,"code":"import { showLoading, hideLoading } from 'react-redux-loading-bar';\nvar defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED'];\nexport default function loadingBarMiddleware(config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes;\n  return function (_ref) {\n    var dispatch = _ref.dispatch;\n    return function (next) {\n      return function (action) {\n        if (action.type && !action.skipLoading) {\n          var PENDING = promiseTypeSuffixes[0],\n              FULFILLED = promiseTypeSuffixes[1],\n              REJECTED = promiseTypeSuffixes[2];\n          var isPending = new RegExp(PENDING + \"$\", 'g');\n          var isFulfilled = new RegExp(FULFILLED + \"$\", 'g');\n          var isRejected = new RegExp(REJECTED + \"$\", 'g');\n\n          if (action.type.match(isPending)) {\n            dispatch(showLoading());\n          } else if (action.type.match(isFulfilled) || action.type.match(isRejected)) {\n            dispatch(hideLoading());\n          }\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n;","map":{"version":3,"sources":["/home/runner/Mastodon/live/app/javascript/mastodon/middleware/loading_bar.js"],"names":["showLoading","hideLoading","defaultTypeSuffixes","loadingBarMiddleware","config","promiseTypeSuffixes","dispatch","next","action","type","skipLoading","PENDING","FULFILLED","REJECTED","isPending","RegExp","isFulfilled","isRejected","match"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,yBAAzC;AAEA,IAAMC,mBAAmB,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,CAA5B;AAEA,eAAe,SAASC,oBAAT,CAA8BC,MAA9B,EAA2C;AAAA,MAAbA,MAAa;AAAbA,IAAAA,MAAa,GAAJ,EAAI;AAAA;;AACxD,MAAMC,mBAAmB,GAAGD,MAAM,CAACC,mBAAP,IAA8BH,mBAA1D;AAEA,SAAO;AAAA,QAAGI,QAAH,QAAGA,QAAH;AAAA,WAAkB,UAAAC,IAAI;AAAA,aAAI,UAACC,MAAD,EAAY;AAC3C,YAAIA,MAAM,CAACC,IAAP,IAAe,CAACD,MAAM,CAACE,WAA3B,EAAwC;AACtC,cAAOC,OAAP,GAAuCN,mBAAvC;AAAA,cAAgBO,SAAhB,GAAuCP,mBAAvC;AAAA,cAA2BQ,QAA3B,GAAuCR,mBAAvC;AAEA,cAAMS,SAAS,GAAG,IAAIC,MAAJ,CAAcJ,OAAd,QAA0B,GAA1B,CAAlB;AACA,cAAMK,WAAW,GAAG,IAAID,MAAJ,CAAcH,SAAd,QAA4B,GAA5B,CAApB;AACA,cAAMK,UAAU,GAAG,IAAIF,MAAJ,CAAcF,QAAd,QAA2B,GAA3B,CAAnB;;AAEA,cAAIL,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAkBJ,SAAlB,CAAJ,EAAkC;AAChCR,YAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,WAFD,MAEO,IAAIQ,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAkBF,WAAlB,KAAkCR,MAAM,CAACC,IAAP,CAAYS,KAAZ,CAAkBD,UAAlB,CAAtC,EAAqE;AAC1EX,YAAAA,QAAQ,CAACL,WAAW,EAAZ,CAAR;AACD;AACF;;AAED,eAAOM,IAAI,CAACC,MAAD,CAAX;AACD,OAhB4B;AAAA,KAAtB;AAAA,GAAP;AAiBD;AAAA","sourcesContent":["import { showLoading, hideLoading } from 'react-redux-loading-bar';\n\nconst defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED'];\n\nexport default function loadingBarMiddleware(config = {}) {\n  const promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes;\n\n  return ({ dispatch }) => next => (action) => {\n    if (action.type && !action.skipLoading) {\n      const [PENDING, FULFILLED, REJECTED] = promiseTypeSuffixes;\n\n      const isPending = new RegExp(`${PENDING}$`, 'g');\n      const isFulfilled = new RegExp(`${FULFILLED}$`, 'g');\n      const isRejected = new RegExp(`${REJECTED}$`, 'g');\n\n      if (action.type.match(isPending)) {\n        dispatch(showLoading());\n      } else if (action.type.match(isFulfilled) || action.type.match(isRejected)) {\n        dispatch(hideLoading());\n      }\n    }\n\n    return next(action);\n  };\n};\n"]},"metadata":{"react-intl":{"messages":[]}},"sourceType":"module"}